; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\drvpwm.o --depend=.\obj\drvpwm.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0 -I..\CMSIS\NUC1xx -I..\BSP_Lib\Inc\Driver -I..\BSP_Lib\Inc\NUC1xx-LB_002 -I..\BSP_Lib\Inc\System -I..\BSP_Lib\Inc\USB -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\?ST\STM32F10x -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\drvpwm.crf ..\BSP_Lib\Src\Driver\DrvPWM.c]
                          THUMB

                          AREA ||i.DrvPWM_ClearCaptureIntStatus||, CODE, READONLY, ALIGN=2

                  DrvPWM_ClearCaptureIntStatus PROC
;;;892    /*---------------------------------------------------------------------------------------------------------*/
;;;893    void DrvPWM_ClearCaptureIntStatus(uint8_t u8Capture, uint8_t u8IntType)
000000  4a86              LDR      r2,|L1.540|
;;;894    {
;;;895    	if (s_i32Option)
000002  6812              LDR      r2,[r2,#0]  ; s_i32Option
000004  2a00              CMP      r2,#0
000006  d04b              BEQ      |L1.160|
;;;896    	{ 
;;;897    		switch (u8Capture)
000008  2810              CMP      r0,#0x10
00000a  d006              BEQ      |L1.26|
00000c  2811              CMP      r0,#0x11
00000e  d015              BEQ      |L1.60|
000010  2812              CMP      r0,#0x12
000012  d023              BEQ      |L1.92|
000014  2813              CMP      r0,#0x13
000016  d142              BNE      |L1.158|
000018  e031              B        |L1.126|
                  |L1.26|
;;;898    		{
;;;899    			case DRVPWM_CAP0:
;;;900    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT6))) : (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT7)));
00001a  2906              CMP      r1,#6
00001c  d106              BNE      |L1.44|
00001e  4a80              LDR      r2,|L1.544|
000020  6912              LDR      r2,[r2,#0x10]
000022  4b80              LDR      r3,|L1.548|
000024  401a              ANDS     r2,r2,r3
000026  4b7e              LDR      r3,|L1.544|
000028  611a              STR      r2,[r3,#0x10]
00002a  e006              B        |L1.58|
                  |L1.44|
00002c  4a7c              LDR      r2,|L1.544|
00002e  6912              LDR      r2,[r2,#0x10]
000030  4b7c              LDR      r3,|L1.548|
000032  3340              ADDS     r3,r3,#0x40
000034  401a              ANDS     r2,r2,r3
000036  4b7a              LDR      r3,|L1.544|
000038  611a              STR      r2,[r3,#0x10]
                  |L1.58|
;;;901    				break;
00003a  e030              B        |L1.158|
                  |L1.60|
;;;902    			case DRVPWM_CAP1:
;;;903    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT22))) : (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT23)));
00003c  2906              CMP      r1,#6
00003e  d106              BNE      |L1.78|
000040  4a77              LDR      r2,|L1.544|
000042  6912              LDR      r2,[r2,#0x10]
000044  4b78              LDR      r3,|L1.552|
000046  401a              ANDS     r2,r2,r3
000048  4b75              LDR      r3,|L1.544|
00004a  611a              STR      r2,[r3,#0x10]
00004c  e005              B        |L1.90|
                  |L1.78|
00004e  4a74              LDR      r2,|L1.544|
000050  6912              LDR      r2,[r2,#0x10]
000052  4b76              LDR      r3,|L1.556|
000054  401a              ANDS     r2,r2,r3
000056  4b72              LDR      r3,|L1.544|
000058  611a              STR      r2,[r3,#0x10]
                  |L1.90|
;;;904    				break;
00005a  e020              B        |L1.158|
                  |L1.92|
;;;905    			case DRVPWM_CAP2:
;;;906    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT6))) : (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT7)));
00005c  2906              CMP      r1,#6
00005e  d106              BNE      |L1.110|
000060  4a6f              LDR      r2,|L1.544|
000062  6952              LDR      r2,[r2,#0x14]
000064  4b6f              LDR      r3,|L1.548|
000066  401a              ANDS     r2,r2,r3
000068  4b6d              LDR      r3,|L1.544|
00006a  615a              STR      r2,[r3,#0x14]
00006c  e006              B        |L1.124|
                  |L1.110|
00006e  4a6c              LDR      r2,|L1.544|
000070  6952              LDR      r2,[r2,#0x14]
000072  4b6c              LDR      r3,|L1.548|
000074  3340              ADDS     r3,r3,#0x40
000076  401a              ANDS     r2,r2,r3
000078  4b69              LDR      r3,|L1.544|
00007a  615a              STR      r2,[r3,#0x14]
                  |L1.124|
;;;907    				break;																	  
00007c  e00f              B        |L1.158|
                  |L1.126|
;;;908    			case DRVPWM_CAP3:
;;;909    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT22))) : (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT23)));
00007e  2906              CMP      r1,#6
000080  d106              BNE      |L1.144|
000082  4a67              LDR      r2,|L1.544|
000084  6952              LDR      r2,[r2,#0x14]
000086  4b68              LDR      r3,|L1.552|
000088  401a              ANDS     r2,r2,r3
00008a  4b65              LDR      r3,|L1.544|
00008c  615a              STR      r2,[r3,#0x14]
00008e  e005              B        |L1.156|
                  |L1.144|
000090  4a63              LDR      r2,|L1.544|
000092  6952              LDR      r2,[r2,#0x14]
000094  4b65              LDR      r3,|L1.556|
000096  401a              ANDS     r2,r2,r3
000098  4b61              LDR      r3,|L1.544|
00009a  615a              STR      r2,[r3,#0x14]
                  |L1.156|
;;;910    				break;
00009c  bf00              NOP      
                  |L1.158|
00009e  e05d              B        |L1.348|
                  |L1.160|
;;;911    		}
;;;912    	}
;;;913    	else
;;;914    	{
;;;915    		switch (u8Capture)
0000a0  2810              CMP      r0,#0x10
0000a2  d006              BEQ      |L1.178|
0000a4  2811              CMP      r0,#0x11
0000a6  d018              BEQ      |L1.218|
0000a8  2812              CMP      r0,#0x12
0000aa  d02c              BEQ      |L1.262|
0000ac  2813              CMP      r0,#0x13
0000ae  d154              BNE      |L1.346|
0000b0  e03d              B        |L1.302|
                  |L1.178|
;;;916    		{
;;;917    			case DRVPWM_CAP0:
;;;918    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT7));
0000b2  2906              CMP      r1,#6
0000b4  d108              BNE      |L1.200|
0000b6  4a5a              LDR      r2,|L1.544|
0000b8  6912              LDR      r2,[r2,#0x10]
0000ba  4b5d              LDR      r3,|L1.560|
0000bc  401a              ANDS     r2,r2,r3
0000be  2340              MOVS     r3,#0x40
0000c0  439a              BICS     r2,r2,r3
0000c2  4b57              LDR      r3,|L1.544|
0000c4  611a              STR      r2,[r3,#0x10]
0000c6  e007              B        |L1.216|
                  |L1.200|
0000c8  4a55              LDR      r2,|L1.544|
0000ca  6912              LDR      r2,[r2,#0x10]
0000cc  4b58              LDR      r3,|L1.560|
0000ce  401a              ANDS     r2,r2,r3
0000d0  2380              MOVS     r3,#0x80
0000d2  439a              BICS     r2,r2,r3
0000d4  4b52              LDR      r3,|L1.544|
0000d6  611a              STR      r2,[r3,#0x10]
                  |L1.216|
;;;919    				break;
0000d8  e03f              B        |L1.346|
                  |L1.218|
;;;920    			case DRVPWM_CAP1:
;;;921    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT23));
0000da  2906              CMP      r1,#6
0000dc  d109              BNE      |L1.242|
0000de  4a50              LDR      r2,|L1.544|
0000e0  6912              LDR      r2,[r2,#0x10]
0000e2  4b53              LDR      r3,|L1.560|
0000e4  401a              ANDS     r2,r2,r3
0000e6  2301              MOVS     r3,#1
0000e8  059b              LSLS     r3,r3,#22
0000ea  439a              BICS     r2,r2,r3
0000ec  4b4c              LDR      r3,|L1.544|
0000ee  611a              STR      r2,[r3,#0x10]
0000f0  e008              B        |L1.260|
                  |L1.242|
0000f2  4a4b              LDR      r2,|L1.544|
0000f4  6912              LDR      r2,[r2,#0x10]
0000f6  4b4e              LDR      r3,|L1.560|
0000f8  401a              ANDS     r2,r2,r3
0000fa  2301              MOVS     r3,#1
0000fc  05db              LSLS     r3,r3,#23
0000fe  439a              BICS     r2,r2,r3
000100  4b47              LDR      r3,|L1.544|
000102  611a              STR      r2,[r3,#0x10]
                  |L1.260|
;;;922    				break;
000104  e029              B        |L1.346|
                  |L1.262|
;;;923    			case DRVPWM_CAP2:
;;;924    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT7));
000106  2906              CMP      r1,#6
000108  d108              BNE      |L1.284|
00010a  4a45              LDR      r2,|L1.544|
00010c  6952              LDR      r2,[r2,#0x14]
00010e  4b48              LDR      r3,|L1.560|
000110  401a              ANDS     r2,r2,r3
000112  2340              MOVS     r3,#0x40
000114  439a              BICS     r2,r2,r3
000116  4b42              LDR      r3,|L1.544|
000118  615a              STR      r2,[r3,#0x14]
00011a  e007              B        |L1.300|
                  |L1.284|
00011c  4a40              LDR      r2,|L1.544|
00011e  6952              LDR      r2,[r2,#0x14]
000120  4b43              LDR      r3,|L1.560|
000122  401a              ANDS     r2,r2,r3
000124  2380              MOVS     r3,#0x80
000126  439a              BICS     r2,r2,r3
000128  4b3d              LDR      r3,|L1.544|
00012a  615a              STR      r2,[r3,#0x14]
                  |L1.300|
;;;925    				break;																	  
00012c  e015              B        |L1.346|
                  |L1.302|
;;;926    			case DRVPWM_CAP3:
;;;927    				(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT23));
00012e  2906              CMP      r1,#6
000130  d109              BNE      |L1.326|
000132  4a3b              LDR      r2,|L1.544|
000134  6952              LDR      r2,[r2,#0x14]
000136  4b3e              LDR      r3,|L1.560|
000138  401a              ANDS     r2,r2,r3
00013a  2301              MOVS     r3,#1
00013c  059b              LSLS     r3,r3,#22
00013e  439a              BICS     r2,r2,r3
000140  4b37              LDR      r3,|L1.544|
000142  615a              STR      r2,[r3,#0x14]
000144  e008              B        |L1.344|
                  |L1.326|
000146  4a36              LDR      r2,|L1.544|
000148  6952              LDR      r2,[r2,#0x14]
00014a  4b39              LDR      r3,|L1.560|
00014c  401a              ANDS     r2,r2,r3
00014e  2301              MOVS     r3,#1
000150  05db              LSLS     r3,r3,#23
000152  439a              BICS     r2,r2,r3
000154  4b32              LDR      r3,|L1.544|
000156  615a              STR      r2,[r3,#0x14]
                  |L1.344|
;;;928    				break;
000158  bf00              NOP      
                  |L1.346|
00015a  bf00              NOP                            ;919
                  |L1.348|
;;;929    		}	
;;;930    	}
;;;931    		
;;;932    	switch (u8Capture)
00015c  2814              CMP      r0,#0x14
00015e  d006              BEQ      |L1.366|
000160  2815              CMP      r0,#0x15
000162  d018              BEQ      |L1.406|
000164  2816              CMP      r0,#0x16
000166  d02c              BEQ      |L1.450|
000168  2817              CMP      r0,#0x17
00016a  d154              BNE      |L1.534|
00016c  e03d              B        |L1.490|
                  |L1.366|
;;;933    	{
;;;934    		case DRVPWM_CAP4:
;;;935    			(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT7));
00016e  2906              CMP      r1,#6
000170  d108              BNE      |L1.388|
000172  4a30              LDR      r2,|L1.564|
000174  6912              LDR      r2,[r2,#0x10]
000176  4b2e              LDR      r3,|L1.560|
000178  401a              ANDS     r2,r2,r3
00017a  2340              MOVS     r3,#0x40
00017c  439a              BICS     r2,r2,r3
00017e  4b2d              LDR      r3,|L1.564|
000180  611a              STR      r2,[r3,#0x10]
000182  e007              B        |L1.404|
                  |L1.388|
000184  4a2b              LDR      r2,|L1.564|
000186  6912              LDR      r2,[r2,#0x10]
000188  4b29              LDR      r3,|L1.560|
00018a  401a              ANDS     r2,r2,r3
00018c  2380              MOVS     r3,#0x80
00018e  439a              BICS     r2,r2,r3
000190  4b28              LDR      r3,|L1.564|
000192  611a              STR      r2,[r3,#0x10]
                  |L1.404|
;;;936    			break;
000194  e03f              B        |L1.534|
                  |L1.406|
;;;937    		case DRVPWM_CAP5:
;;;938    			(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT23));
000196  2906              CMP      r1,#6
000198  d109              BNE      |L1.430|
00019a  4a26              LDR      r2,|L1.564|
00019c  6912              LDR      r2,[r2,#0x10]
00019e  4b24              LDR      r3,|L1.560|
0001a0  401a              ANDS     r2,r2,r3
0001a2  2301              MOVS     r3,#1
0001a4  059b              LSLS     r3,r3,#22
0001a6  439a              BICS     r2,r2,r3
0001a8  4b22              LDR      r3,|L1.564|
0001aa  611a              STR      r2,[r3,#0x10]
0001ac  e008              B        |L1.448|
                  |L1.430|
0001ae  4a21              LDR      r2,|L1.564|
0001b0  6912              LDR      r2,[r2,#0x10]
0001b2  4b1f              LDR      r3,|L1.560|
0001b4  401a              ANDS     r2,r2,r3
0001b6  2301              MOVS     r3,#1
0001b8  05db              LSLS     r3,r3,#23
0001ba  439a              BICS     r2,r2,r3
0001bc  4b1d              LDR      r3,|L1.564|
0001be  611a              STR      r2,[r3,#0x10]
                  |L1.448|
;;;939    			break;
0001c0  e029              B        |L1.534|
                  |L1.450|
;;;940    		case DRVPWM_CAP6:
;;;941    			(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT7));
0001c2  2906              CMP      r1,#6
0001c4  d108              BNE      |L1.472|
0001c6  4a1b              LDR      r2,|L1.564|
0001c8  6952              LDR      r2,[r2,#0x14]
0001ca  4b19              LDR      r3,|L1.560|
0001cc  401a              ANDS     r2,r2,r3
0001ce  2340              MOVS     r3,#0x40
0001d0  439a              BICS     r2,r2,r3
0001d2  4b18              LDR      r3,|L1.564|
0001d4  615a              STR      r2,[r3,#0x14]
0001d6  e007              B        |L1.488|
                  |L1.472|
0001d8  4a16              LDR      r2,|L1.564|
0001da  6952              LDR      r2,[r2,#0x14]
0001dc  4b14              LDR      r3,|L1.560|
0001de  401a              ANDS     r2,r2,r3
0001e0  2380              MOVS     r3,#0x80
0001e2  439a              BICS     r2,r2,r3
0001e4  4b13              LDR      r3,|L1.564|
0001e6  615a              STR      r2,[r3,#0x14]
                  |L1.488|
;;;942    			break;																	  
0001e8  e015              B        |L1.534|
                  |L1.490|
;;;943    		case DRVPWM_CAP7:
;;;944    			(u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT23));
0001ea  2906              CMP      r1,#6
0001ec  d109              BNE      |L1.514|
0001ee  4a11              LDR      r2,|L1.564|
0001f0  6952              LDR      r2,[r2,#0x14]
0001f2  4b0f              LDR      r3,|L1.560|
0001f4  401a              ANDS     r2,r2,r3
0001f6  2301              MOVS     r3,#1
0001f8  059b              LSLS     r3,r3,#22
0001fa  439a              BICS     r2,r2,r3
0001fc  4b0d              LDR      r3,|L1.564|
0001fe  615a              STR      r2,[r3,#0x14]
000200  e008              B        |L1.532|
                  |L1.514|
000202  4a0c              LDR      r2,|L1.564|
000204  6952              LDR      r2,[r2,#0x14]
000206  4b0a              LDR      r3,|L1.560|
000208  401a              ANDS     r2,r2,r3
00020a  2301              MOVS     r3,#1
00020c  05db              LSLS     r3,r3,#23
00020e  439a              BICS     r2,r2,r3
000210  4b08              LDR      r3,|L1.564|
000212  615a              STR      r2,[r3,#0x14]
                  |L1.532|
;;;945    			break;
000214  bf00              NOP      
                  |L1.534|
000216  bf00              NOP                            ;936
;;;946    	} 
;;;947    }
000218  4770              BX       lr
;;;948    
                          ENDP

00021a  0000              DCW      0x0000
                  |L1.540|
                          DCD      s_i32Option
                  |L1.544|
                          DCD      0x40040040
                  |L1.548|
                          DCD      0x000f004f
                  |L1.552|
                          DCD      0x004f000f
                  |L1.556|
                          DCD      0x008f000f
                  |L1.560|
                          DCD      0xffefffef
                  |L1.564|
                          DCD      0x40140040

                          AREA ||i.DrvPWM_ClearInt||, CODE, READONLY, ALIGN=2

                  DrvPWM_ClearInt PROC
;;;647    /*---------------------------------------------------------------------------------------------------------*/
;;;648    void DrvPWM_ClearInt(uint8_t u8Timer)
000000  b500              PUSH     {lr}
;;;649    {
;;;650    	switch (u8Timer)
000002  4603              MOV      r3,r0
000004  f7fffffe          BL       __ARM_common_switch8
000008  180d0e0f          DCB      0x18,0x0d,0x0e,0x0f
00000c  10151617          DCB      0x10,0x15,0x16,0x17
000010  18868686          DCB      0x18,0x86,0x86,0x86
000014  86868686          DCB      0x86,0x86,0x86,0x86
000018  861e3143          DCB      0x86,0x1e,0x31,0x43
00001c  56687077          DCB      0x56,0x68,0x70,0x77
000020  7f86              DCB      0x7f,0x86
;;;651    	{
;;;652    		case DRVPWM_TIMER0:
;;;653    		case DRVPWM_TIMER1:
000022  bf00              NOP      
;;;654    		case DRVPWM_TIMER2:
000024  bf00              NOP      
;;;655    		case DRVPWM_TIMER3:
000026  bf00              NOP      
;;;656    		    outp32(&PWMA->PIIR, (1 << u8Timer) );
000028  2101              MOVS     r1,#1
00002a  4081              LSLS     r1,r1,r0
00002c  4a3a              LDR      r2,|L2.280|
00002e  6051              STR      r1,[r2,#4]
;;;657    			break;
000030  e070              B        |L2.276|
;;;658    		case DRVPWM_TIMER4:
;;;659    		case DRVPWM_TIMER5:
000032  bf00              NOP      
;;;660    		case DRVPWM_TIMER6:
000034  bf00              NOP      
;;;661    		case DRVPWM_TIMER7:
000036  bf00              NOP      
;;;662    			outp32(&PWMB->PIIR, (1 << (u8Timer-DRVPWM_TIMER4)) );
000038  1f01              SUBS     r1,r0,#4
00003a  2201              MOVS     r2,#1
00003c  408a              LSLS     r2,r2,r1
00003e  4937              LDR      r1,|L2.284|
000040  604a              STR      r2,[r1,#4]
;;;663    			break;
000042  e067              B        |L2.276|
;;;664    
;;;665    		case DRVPWM_CAP0:
;;;666    			if (s_i32Option)
000044  4936              LDR      r1,|L2.288|
000046  6809              LDR      r1,[r1,#0]  ; s_i32Option
000048  2900              CMP      r1,#0
00004a  d006              BEQ      |L2.90|
;;;667    				outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT4));
00004c  4932              LDR      r1,|L2.280|
00004e  6909              LDR      r1,[r1,#0x10]
000050  4a34              LDR      r2,|L2.292|
000052  4011              ANDS     r1,r1,r2
000054  4a30              LDR      r2,|L2.280|
000056  6111              STR      r1,[r2,#0x10]
000058  e006              B        |L2.104|
                  |L2.90|
;;;668    			else
;;;669    				outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT20);
00005a  492f              LDR      r1,|L2.280|
00005c  6909              LDR      r1,[r1,#0x10]
00005e  2201              MOVS     r2,#1
000060  0512              LSLS     r2,r2,#20
000062  4391              BICS     r1,r1,r2
000064  4a2c              LDR      r2,|L2.280|
000066  6111              STR      r1,[r2,#0x10]
                  |L2.104|
;;;670    			break;
000068  e054              B        |L2.276|
;;;671    		case DRVPWM_CAP1:
;;;672    			if (s_i32Option)
00006a  492d              LDR      r1,|L2.288|
00006c  6809              LDR      r1,[r1,#0]  ; s_i32Option
00006e  2900              CMP      r1,#0
000070  d006              BEQ      |L2.128|
;;;673    				outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT20));
000072  4929              LDR      r1,|L2.280|
000074  6909              LDR      r1,[r1,#0x10]
000076  4a2c              LDR      r2,|L2.296|
000078  4011              ANDS     r1,r1,r2
00007a  4a27              LDR      r2,|L2.280|
00007c  6111              STR      r1,[r2,#0x10]
00007e  e005              B        |L2.140|
                  |L2.128|
;;;674    			else
;;;675    				outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT4);
000080  4925              LDR      r1,|L2.280|
000082  6909              LDR      r1,[r1,#0x10]
000084  2210              MOVS     r2,#0x10
000086  4391              BICS     r1,r1,r2
000088  4a23              LDR      r2,|L2.280|
00008a  6111              STR      r1,[r2,#0x10]
                  |L2.140|
;;;676    			break;
00008c  e042              B        |L2.276|
;;;677    		case DRVPWM_CAP2:
;;;678    			if (s_i32Option)
00008e  4924              LDR      r1,|L2.288|
000090  6809              LDR      r1,[r1,#0]  ; s_i32Option
000092  2900              CMP      r1,#0
000094  d006              BEQ      |L2.164|
;;;679    				outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT4));
000096  4920              LDR      r1,|L2.280|
000098  6949              LDR      r1,[r1,#0x14]
00009a  4a22              LDR      r2,|L2.292|
00009c  4011              ANDS     r1,r1,r2
00009e  4a1e              LDR      r2,|L2.280|
0000a0  6151              STR      r1,[r2,#0x14]
0000a2  e006              B        |L2.178|
                  |L2.164|
;;;680    			else
;;;681    				outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT20);
0000a4  491c              LDR      r1,|L2.280|
0000a6  6949              LDR      r1,[r1,#0x14]
0000a8  2201              MOVS     r2,#1
0000aa  0512              LSLS     r2,r2,#20
0000ac  4391              BICS     r1,r1,r2
0000ae  4a1a              LDR      r2,|L2.280|
0000b0  6151              STR      r1,[r2,#0x14]
                  |L2.178|
;;;682    			break;																	  
0000b2  e02f              B        |L2.276|
;;;683    		case DRVPWM_CAP3:
;;;684    			if (s_i32Option)
0000b4  491a              LDR      r1,|L2.288|
0000b6  6809              LDR      r1,[r1,#0]  ; s_i32Option
0000b8  2900              CMP      r1,#0
0000ba  d006              BEQ      |L2.202|
;;;685    				outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT20));
0000bc  4916              LDR      r1,|L2.280|
0000be  6949              LDR      r1,[r1,#0x14]
0000c0  4a19              LDR      r2,|L2.296|
0000c2  4011              ANDS     r1,r1,r2
0000c4  4a14              LDR      r2,|L2.280|
0000c6  6151              STR      r1,[r2,#0x14]
0000c8  e005              B        |L2.214|
                  |L2.202|
;;;686    			else
;;;687    				outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT4);
0000ca  4913              LDR      r1,|L2.280|
0000cc  6949              LDR      r1,[r1,#0x14]
0000ce  2210              MOVS     r2,#0x10
0000d0  4391              BICS     r1,r1,r2
0000d2  4a11              LDR      r2,|L2.280|
0000d4  6151              STR      r1,[r2,#0x14]
                  |L2.214|
;;;688    			break;
0000d6  e01d              B        |L2.276|
;;;689    		case DRVPWM_CAP4:
;;;690    			outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT20);
0000d8  4910              LDR      r1,|L2.284|
0000da  6909              LDR      r1,[r1,#0x10]
0000dc  2201              MOVS     r2,#1
0000de  0512              LSLS     r2,r2,#20
0000e0  4391              BICS     r1,r1,r2
0000e2  4a0e              LDR      r2,|L2.284|
0000e4  6111              STR      r1,[r2,#0x10]
;;;691    			break;
0000e6  e015              B        |L2.276|
;;;692    		case DRVPWM_CAP5:
;;;693    			outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT4);
0000e8  490c              LDR      r1,|L2.284|
0000ea  6909              LDR      r1,[r1,#0x10]
0000ec  2210              MOVS     r2,#0x10
0000ee  4391              BICS     r1,r1,r2
0000f0  4a0a              LDR      r2,|L2.284|
0000f2  6111              STR      r1,[r2,#0x10]
;;;694    			break;
0000f4  e00e              B        |L2.276|
;;;695    		case DRVPWM_CAP6:
;;;696    			outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT20);
0000f6  4909              LDR      r1,|L2.284|
0000f8  6949              LDR      r1,[r1,#0x14]
0000fa  2201              MOVS     r2,#1
0000fc  0512              LSLS     r2,r2,#20
0000fe  4391              BICS     r1,r1,r2
000100  4a06              LDR      r2,|L2.284|
000102  6151              STR      r1,[r2,#0x14]
;;;697    			break;																	  
000104  e006              B        |L2.276|
;;;698    		case DRVPWM_CAP7:
;;;699    			outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT4);
000106  4905              LDR      r1,|L2.284|
000108  6949              LDR      r1,[r1,#0x14]
00010a  2210              MOVS     r2,#0x10
00010c  4391              BICS     r1,r1,r2
00010e  4a03              LDR      r2,|L2.284|
000110  6151              STR      r1,[r2,#0x14]
;;;700    			break;
000112  bf00              NOP      
                  |L2.276|
000114  bf00              NOP                            ;657
;;;701    	}
;;;702    }
000116  bd00              POP      {pc}
;;;703    
                          ENDP

                  |L2.280|
                          DCD      0x40040040
                  |L2.284|
                          DCD      0x40140040
                  |L2.288|
                          DCD      s_i32Option
                  |L2.292|
                          DCD      0x000f001f
                  |L2.296|
                          DCD      0x001f000f

                          AREA ||i.DrvPWM_Close||, CODE, READONLY, ALIGN=2

                  DrvPWM_Close PROC
;;;979    /*---------------------------------------------------------------------------------------------------------*/
;;;980    void DrvPWM_Close(void)
000000  b510              PUSH     {r4,lr}
;;;981    {
;;;982    	outp32(&PWMA->POE, 0);
000002  2000              MOVS     r0,#0
000004  4912              LDR      r1,|L3.80|
000006  63c8              STR      r0,[r1,#0x3c]
;;;983    	PWMA->CAPENR = 0;
000008  6388              STR      r0,[r1,#0x38]
;;;984    
;;;985    	outp32(&PWMB->POE, 0);
00000a  4912              LDR      r1,|L3.84|
00000c  63c8              STR      r0,[r1,#0x3c]
;;;986    	PWMB->CAPENR = 0;
00000e  6388              STR      r0,[r1,#0x38]
;;;987    
;;;988    	NVIC_DisableIRQ(PWMA_IRQn);
000010  2006              MOVS     r0,#6
000012  f7fffffe          BL       NVIC_DisableIRQ
;;;989    	NVIC_DisableIRQ(PWMB_IRQn);
000016  2007              MOVS     r0,#7
000018  f7fffffe          BL       NVIC_DisableIRQ
;;;990    	
;;;991    	outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) | 0x00300000);
00001c  2005              MOVS     r0,#5
00001e  0700              LSLS     r0,r0,#28
000020  68c0              LDR      r0,[r0,#0xc]
000022  2103              MOVS     r1,#3
000024  0509              LSLS     r1,r1,#20
000026  4308              ORRS     r0,r0,r1
000028  2105              MOVS     r1,#5
00002a  0709              LSLS     r1,r1,#28
00002c  60c8              STR      r0,[r1,#0xc]
;;;992    	outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) & ~0x00300000);
00002e  4608              MOV      r0,r1
000030  68c0              LDR      r0,[r0,#0xc]
000032  2103              MOVS     r1,#3
000034  0509              LSLS     r1,r1,#20
000036  4388              BICS     r0,r0,r1
000038  2105              MOVS     r1,#5
00003a  0709              LSLS     r1,r1,#28
00003c  60c8              STR      r0,[r1,#0xc]
;;;993    
;;;994    	outp32(&SYSCLK->APBCLK, inp32(&SYSCLK->APBCLK) & ~0x00F00000);
00003e  4806              LDR      r0,|L3.88|
000040  6880              LDR      r0,[r0,#8]
000042  210f              MOVS     r1,#0xf
000044  0509              LSLS     r1,r1,#20
000046  4388              BICS     r0,r0,r1
000048  4903              LDR      r1,|L3.88|
00004a  6088              STR      r0,[r1,#8]
;;;995    }
00004c  bd10              POP      {r4,pc}
;;;996    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      0x40040040
                  |L3.84|
                          DCD      0x40140040
                  |L3.88|
                          DCD      0x50000200

                          AREA ||i.DrvPWM_DisableInt||, CODE, READONLY, ALIGN=2

                  DrvPWM_DisableInt PROC
;;;541    /*---------------------------------------------------------------------------------------------------------*/
;;;542    void DrvPWM_DisableInt(uint8_t u8Timer)
000000  b500              PUSH     {lr}
;;;543    {   	
;;;544    	switch(u8Timer)
000002  4603              MOV      r3,r0
000004  f7fffffe          BL       __ARM_common_switch8
000008  180d1925          DCB      0x18,0x0d,0x19,0x25
00000c  313d4955          DCB      0x31,0x3d,0x49,0x55
000010  61181818          DCB      0x61,0x18,0x18,0x18
000014  18181818          DCB      0x18,0x18,0x18,0x18
000018  186d86a1          DCB      0x18,0x6d,0x86,0xa1
00001c  bad5e1f0          DCB      0xba,0xd5,0xe1,0xf0
000020  fc18              DCB      0xfc,0x18
;;;545    	{	
;;;546    		case DRVPWM_TIMER0:
;;;547    			PWMA->PIER.PWMIE0 = 0;
000022  497f              LDR      r1,|L4.544|
000024  6809              LDR      r1,[r1,#0]
000026  0849              LSRS     r1,r1,#1
000028  0049              LSLS     r1,r1,#1
00002a  4a7d              LDR      r2,|L4.544|
00002c  6011              STR      r1,[r2,#0]
;;;548    			outp32(&PWMA->PIIR, BIT0);
00002e  2101              MOVS     r1,#1
000030  6051              STR      r1,[r2,#4]
;;;549    			g_sDrvPWMAHandler.pfnPWM0CallBack = NULL;
000032  2100              MOVS     r1,#0
000034  4a7b              LDR      r2,|L4.548|
000036  6011              STR      r1,[r2,#0]  ; g_sDrvPWMAHandler
;;;550    			break;
000038  e0ef              B        |L4.538|
;;;551    		case DRVPWM_TIMER1:
;;;552    			PWMA->PIER.PWMIE1 = 0;
00003a  4979              LDR      r1,|L4.544|
00003c  6809              LDR      r1,[r1,#0]
00003e  2202              MOVS     r2,#2
000040  4391              BICS     r1,r1,r2
000042  4a77              LDR      r2,|L4.544|
000044  6011              STR      r1,[r2,#0]
;;;553    			outp32(&PWMA->PIIR, BIT1);
000046  2102              MOVS     r1,#2
000048  6051              STR      r1,[r2,#4]
;;;554    			g_sDrvPWMAHandler.pfnPWM1CallBack = NULL;
00004a  2100              MOVS     r1,#0
00004c  4a75              LDR      r2,|L4.548|
00004e  6091              STR      r1,[r2,#8]  ; g_sDrvPWMAHandler
;;;555    			break;			
000050  e0e3              B        |L4.538|
;;;556    		case DRVPWM_TIMER2:
;;;557    			PWMA->PIER.PWMIE2 = 0;
000052  4973              LDR      r1,|L4.544|
000054  6809              LDR      r1,[r1,#0]
000056  2204              MOVS     r2,#4
000058  4391              BICS     r1,r1,r2
00005a  4a71              LDR      r2,|L4.544|
00005c  6011              STR      r1,[r2,#0]
;;;558    			outp32(&PWMA->PIIR, BIT2);
00005e  2104              MOVS     r1,#4
000060  6051              STR      r1,[r2,#4]
;;;559    			g_sDrvPWMAHandler.pfnPWM2CallBack = NULL;
000062  2100              MOVS     r1,#0
000064  4a6f              LDR      r2,|L4.548|
000066  6111              STR      r1,[r2,#0x10]  ; g_sDrvPWMAHandler
;;;560    			break;		
000068  e0d7              B        |L4.538|
;;;561    		case DRVPWM_TIMER3:
;;;562    			PWMA->PIER.PWMIE3 = 0;
00006a  496d              LDR      r1,|L4.544|
00006c  6809              LDR      r1,[r1,#0]
00006e  2208              MOVS     r2,#8
000070  4391              BICS     r1,r1,r2
000072  4a6b              LDR      r2,|L4.544|
000074  6011              STR      r1,[r2,#0]
;;;563    			outp32(&PWMA->PIIR, BIT3);
000076  2108              MOVS     r1,#8
000078  6051              STR      r1,[r2,#4]
;;;564    			g_sDrvPWMAHandler.pfnPWM3CallBack = NULL;
00007a  2100              MOVS     r1,#0
00007c  4a69              LDR      r2,|L4.548|
00007e  6191              STR      r1,[r2,#0x18]  ; g_sDrvPWMAHandler
;;;565    			break;
000080  e0cb              B        |L4.538|
;;;566    		case DRVPWM_TIMER4:
;;;567    			PWMB->PIER.PWMIE0 = 0;
000082  4969              LDR      r1,|L4.552|
000084  6809              LDR      r1,[r1,#0]
000086  0849              LSRS     r1,r1,#1
000088  0049              LSLS     r1,r1,#1
00008a  4a67              LDR      r2,|L4.552|
00008c  6011              STR      r1,[r2,#0]
;;;568    			outp32(&PWMB->PIIR, BIT0);
00008e  2101              MOVS     r1,#1
000090  6051              STR      r1,[r2,#4]
;;;569    			g_sDrvPWMBHandler.pfnPWM0CallBack = NULL;
000092  2100              MOVS     r1,#0
000094  4a65              LDR      r2,|L4.556|
000096  6011              STR      r1,[r2,#0]  ; g_sDrvPWMBHandler
;;;570    			break;
000098  e0bf              B        |L4.538|
;;;571    		case DRVPWM_TIMER5:
;;;572    			PWMB->PIER.PWMIE1 = 0;
00009a  4963              LDR      r1,|L4.552|
00009c  6809              LDR      r1,[r1,#0]
00009e  2202              MOVS     r2,#2
0000a0  4391              BICS     r1,r1,r2
0000a2  4a61              LDR      r2,|L4.552|
0000a4  6011              STR      r1,[r2,#0]
;;;573    			outp32(&PWMB->PIIR, BIT1);
0000a6  2102              MOVS     r1,#2
0000a8  6051              STR      r1,[r2,#4]
;;;574    			g_sDrvPWMBHandler.pfnPWM1CallBack = NULL;
0000aa  2100              MOVS     r1,#0
0000ac  4a5f              LDR      r2,|L4.556|
0000ae  6091              STR      r1,[r2,#8]  ; g_sDrvPWMBHandler
;;;575    			break;			
0000b0  e0b3              B        |L4.538|
;;;576    		case DRVPWM_TIMER6:
;;;577    			PWMB->PIER.PWMIE2 = 0;
0000b2  495d              LDR      r1,|L4.552|
0000b4  6809              LDR      r1,[r1,#0]
0000b6  2204              MOVS     r2,#4
0000b8  4391              BICS     r1,r1,r2
0000ba  4a5b              LDR      r2,|L4.552|
0000bc  6011              STR      r1,[r2,#0]
;;;578    			outp32(&PWMB->PIIR, BIT2);
0000be  2104              MOVS     r1,#4
0000c0  6051              STR      r1,[r2,#4]
;;;579    			g_sDrvPWMBHandler.pfnPWM2CallBack = NULL;
0000c2  2100              MOVS     r1,#0
0000c4  4a59              LDR      r2,|L4.556|
0000c6  6111              STR      r1,[r2,#0x10]  ; g_sDrvPWMBHandler
;;;580    			break;		
0000c8  e0a7              B        |L4.538|
;;;581    		case DRVPWM_TIMER7:
;;;582    			PWMB->PIER.PWMIE3 = 0;
0000ca  4957              LDR      r1,|L4.552|
0000cc  6809              LDR      r1,[r1,#0]
0000ce  2208              MOVS     r2,#8
0000d0  4391              BICS     r1,r1,r2
0000d2  4a55              LDR      r2,|L4.552|
0000d4  6011              STR      r1,[r2,#0]
;;;583    			outp32(&PWMB->PIIR, BIT3);
0000d6  2108              MOVS     r1,#8
0000d8  6051              STR      r1,[r2,#4]
;;;584    			g_sDrvPWMBHandler.pfnPWM3CallBack = NULL;
0000da  2100              MOVS     r1,#0
0000dc  4a53              LDR      r2,|L4.556|
0000de  6191              STR      r1,[r2,#0x18]  ; g_sDrvPWMBHandler
;;;585    			break;
0000e0  e09b              B        |L4.538|
;;;586    		case DRVPWM_CAP0:			 		
;;;587    			if (s_i32Option)
0000e2  4953              LDR      r1,|L4.560|
0000e4  6809              LDR      r1,[r1,#0]  ; s_i32Option
0000e6  2900              CMP      r1,#0
0000e8  d008              BEQ      |L4.252|
;;;588    				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) & ~(BIT1 | BIT2));
0000ea  494d              LDR      r1,|L4.544|
0000ec  6909              LDR      r1,[r1,#0x10]
0000ee  4a51              LDR      r2,|L4.564|
0000f0  4011              ANDS     r1,r1,r2
0000f2  2206              MOVS     r2,#6
0000f4  4391              BICS     r1,r1,r2
0000f6  4a4a              LDR      r2,|L4.544|
0000f8  6111              STR      r1,[r2,#0x10]
0000fa  e007              B        |L4.268|
                  |L4.252|
;;;589    			else
;;;590    				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));	
0000fc  4948              LDR      r1,|L4.544|
0000fe  6909              LDR      r1,[r1,#0x10]
000100  4a4d              LDR      r2,|L4.568|
000102  4011              ANDS     r1,r1,r2
000104  2206              MOVS     r2,#6
000106  4391              BICS     r1,r1,r2
000108  4a45              LDR      r2,|L4.544|
00010a  6111              STR      r1,[r2,#0x10]
                  |L4.268|
;;;591    			g_sDrvPWMAHandler.pfnCAP0CallBack = NULL;	
00010c  2100              MOVS     r1,#0
00010e  4a45              LDR      r2,|L4.548|
000110  6051              STR      r1,[r2,#4]  ; g_sDrvPWMAHandler
;;;592    			break;				
000112  e082              B        |L4.538|
;;;593    		case DRVPWM_CAP1:
;;;594    			if (s_i32Option)
000114  4946              LDR      r1,|L4.560|
000116  6809              LDR      r1,[r1,#0]  ; s_i32Option
000118  2900              CMP      r1,#0
00011a  d009              BEQ      |L4.304|
;;;595    				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) & ~(BIT17 | BIT18));
00011c  4940              LDR      r1,|L4.544|
00011e  6909              LDR      r1,[r1,#0x10]
000120  4a44              LDR      r2,|L4.564|
000122  4011              ANDS     r1,r1,r2
000124  2203              MOVS     r2,#3
000126  0452              LSLS     r2,r2,#17
000128  4391              BICS     r1,r1,r2
00012a  4a3d              LDR      r2,|L4.544|
00012c  6111              STR      r1,[r2,#0x10]
00012e  e008              B        |L4.322|
                  |L4.304|
;;;596    			else
;;;597    				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
000130  493b              LDR      r1,|L4.544|
000132  6909              LDR      r1,[r1,#0x10]
000134  4a40              LDR      r2,|L4.568|
000136  4011              ANDS     r1,r1,r2
000138  2203              MOVS     r2,#3
00013a  0452              LSLS     r2,r2,#17
00013c  4391              BICS     r1,r1,r2
00013e  4a38              LDR      r2,|L4.544|
000140  6111              STR      r1,[r2,#0x10]
                  |L4.322|
;;;598    			g_sDrvPWMAHandler.pfnCAP1CallBack = NULL;	
000142  2100              MOVS     r1,#0
000144  4a37              LDR      r2,|L4.548|
000146  60d1              STR      r1,[r2,#0xc]  ; g_sDrvPWMAHandler
;;;599    			break;		
000148  e067              B        |L4.538|
;;;600    		case DRVPWM_CAP2:
;;;601    			if (s_i32Option)
00014a  4939              LDR      r1,|L4.560|
00014c  6809              LDR      r1,[r1,#0]  ; s_i32Option
00014e  2900              CMP      r1,#0
000150  d008              BEQ      |L4.356|
;;;602    				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) & ~(BIT1 | BIT2));
000152  4933              LDR      r1,|L4.544|
000154  6949              LDR      r1,[r1,#0x14]
000156  4a37              LDR      r2,|L4.564|
000158  4011              ANDS     r1,r1,r2
00015a  2206              MOVS     r2,#6
00015c  4391              BICS     r1,r1,r2
00015e  4a30              LDR      r2,|L4.544|
000160  6151              STR      r1,[r2,#0x14]
000162  e007              B        |L4.372|
                  |L4.356|
;;;603    			else
;;;604    				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));
000164  492e              LDR      r1,|L4.544|
000166  6949              LDR      r1,[r1,#0x14]
000168  4a33              LDR      r2,|L4.568|
00016a  4011              ANDS     r1,r1,r2
00016c  2206              MOVS     r2,#6
00016e  4391              BICS     r1,r1,r2
000170  4a2b              LDR      r2,|L4.544|
000172  6151              STR      r1,[r2,#0x14]
                  |L4.372|
;;;605    			g_sDrvPWMAHandler.pfnCAP2CallBack = NULL;	
000174  2100              MOVS     r1,#0
000176  4a2b              LDR      r2,|L4.548|
000178  6151              STR      r1,[r2,#0x14]  ; g_sDrvPWMAHandler
;;;606    			break;
00017a  e04e              B        |L4.538|
;;;607    		case DRVPWM_CAP3:
;;;608    			if (s_i32Option)
00017c  492c              LDR      r1,|L4.560|
00017e  6809              LDR      r1,[r1,#0]  ; s_i32Option
000180  2900              CMP      r1,#0
000182  d009              BEQ      |L4.408|
;;;609    				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) & ~(BIT17 | BIT18));
000184  4926              LDR      r1,|L4.544|
000186  6949              LDR      r1,[r1,#0x14]
000188  4a2a              LDR      r2,|L4.564|
00018a  4011              ANDS     r1,r1,r2
00018c  2203              MOVS     r2,#3
00018e  0452              LSLS     r2,r2,#17
000190  4391              BICS     r1,r1,r2
000192  4a23              LDR      r2,|L4.544|
000194  6151              STR      r1,[r2,#0x14]
000196  e008              B        |L4.426|
                  |L4.408|
;;;610    			else
;;;611    				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
000198  4921              LDR      r1,|L4.544|
00019a  6949              LDR      r1,[r1,#0x14]
00019c  4a26              LDR      r2,|L4.568|
00019e  4011              ANDS     r1,r1,r2
0001a0  2203              MOVS     r2,#3
0001a2  0452              LSLS     r2,r2,#17
0001a4  4391              BICS     r1,r1,r2
0001a6  4a1e              LDR      r2,|L4.544|
0001a8  6151              STR      r1,[r2,#0x14]
                  |L4.426|
;;;612    			g_sDrvPWMAHandler.pfnCAP3CallBack = NULL;	
0001aa  2100              MOVS     r1,#0
0001ac  4a1d              LDR      r2,|L4.548|
0001ae  61d1              STR      r1,[r2,#0x1c]  ; g_sDrvPWMAHandler
;;;613    			break;       	    							
0001b0  e033              B        |L4.538|
;;;614    		case DRVPWM_CAP4:			 		
;;;615    			outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));
0001b2  491d              LDR      r1,|L4.552|
0001b4  6909              LDR      r1,[r1,#0x10]
0001b6  4a20              LDR      r2,|L4.568|
0001b8  4011              ANDS     r1,r1,r2
0001ba  2206              MOVS     r2,#6
0001bc  4391              BICS     r1,r1,r2
0001be  4a1a              LDR      r2,|L4.552|
0001c0  6111              STR      r1,[r2,#0x10]
;;;616    			g_sDrvPWMBHandler.pfnCAP0CallBack = NULL;	
0001c2  2100              MOVS     r1,#0
0001c4  4a19              LDR      r2,|L4.556|
0001c6  6051              STR      r1,[r2,#4]  ; g_sDrvPWMBHandler
;;;617    			break;				
0001c8  e027              B        |L4.538|
;;;618    		case DRVPWM_CAP5:
;;;619    			outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
0001ca  4917              LDR      r1,|L4.552|
0001cc  6909              LDR      r1,[r1,#0x10]
0001ce  4a1a              LDR      r2,|L4.568|
0001d0  4011              ANDS     r1,r1,r2
0001d2  2203              MOVS     r2,#3
0001d4  0452              LSLS     r2,r2,#17
0001d6  4391              BICS     r1,r1,r2
0001d8  4a13              LDR      r2,|L4.552|
0001da  6111              STR      r1,[r2,#0x10]
;;;620    			g_sDrvPWMBHandler.pfnCAP1CallBack = NULL;	
0001dc  2100              MOVS     r1,#0
0001de  4a13              LDR      r2,|L4.556|
0001e0  60d1              STR      r1,[r2,#0xc]  ; g_sDrvPWMBHandler
;;;621    			break;		
0001e2  e01a              B        |L4.538|
0001e4  e00c              B        |L4.512|
0001e6  e7ff              B        |L4.488|
                  |L4.488|
;;;622    		case DRVPWM_CAP6:
;;;623    			outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));
0001e8  490f              LDR      r1,|L4.552|
0001ea  6949              LDR      r1,[r1,#0x14]
0001ec  4a12              LDR      r2,|L4.568|
0001ee  4011              ANDS     r1,r1,r2
0001f0  2206              MOVS     r2,#6
0001f2  4391              BICS     r1,r1,r2
0001f4  4a0c              LDR      r2,|L4.552|
0001f6  6151              STR      r1,[r2,#0x14]
;;;624    			g_sDrvPWMBHandler.pfnCAP2CallBack = NULL;	
0001f8  2100              MOVS     r1,#0
0001fa  4a0c              LDR      r2,|L4.556|
0001fc  6151              STR      r1,[r2,#0x14]  ; g_sDrvPWMBHandler
;;;625    			break;
0001fe  e00c              B        |L4.538|
                  |L4.512|
;;;626    		case DRVPWM_CAP7:
;;;627    			outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
000200  4909              LDR      r1,|L4.552|
000202  6949              LDR      r1,[r1,#0x14]
000204  4a0c              LDR      r2,|L4.568|
000206  4011              ANDS     r1,r1,r2
000208  2203              MOVS     r2,#3
00020a  0452              LSLS     r2,r2,#17
00020c  4391              BICS     r1,r1,r2
00020e  4a06              LDR      r2,|L4.552|
000210  6151              STR      r1,[r2,#0x14]
;;;628    			g_sDrvPWMBHandler.pfnCAP3CallBack = NULL;	
000212  2100              MOVS     r1,#0
000214  4a05              LDR      r2,|L4.556|
000216  61d1              STR      r1,[r2,#0x1c]  ; g_sDrvPWMBHandler
;;;629    			break; 
000218  bf00              NOP      
                  |L4.538|
00021a  bf00              NOP                            ;550
;;;630    	}
;;;631    }
00021c  bd00              POP      {pc}
;;;632    
                          ENDP

00021e  0000              DCW      0x0000
                  |L4.544|
                          DCD      0x40040040
                  |L4.548|
                          DCD      g_sDrvPWMAHandler
                  |L4.552|
                          DCD      0x40140040
                  |L4.556|
                          DCD      g_sDrvPWMBHandler
                  |L4.560|
                          DCD      s_i32Option
                  |L4.564|
                          DCD      0x000f000f
                  |L4.568|
                          DCD      0xffefffef

                          AREA ||i.DrvPWM_Enable||, CODE, READONLY, ALIGN=2

                  DrvPWM_Enable PROC
;;;1054   /*---------------------------------------------------------------------------------------------------------*/
;;;1055   void DrvPWM_Enable(uint8_t u8Timer, int32_t i32Enable)
000000  b510              PUSH     {r4,lr}
;;;1056   {
;;;1057   	switch (u8Timer & 0x07)
000002  0743              LSLS     r3,r0,#29
000004  0f5b              LSRS     r3,r3,#29
000006  f7fffffe          BL       __ARM_common_switch8
00000a  0805              DCB      0x08,0x05
00000c  0607081b          DCB      0x06,0x07,0x08,0x1b
000010  1c1d1e35          DCB      0x1c,0x1d,0x1e,0x35
;;;1058   	{
;;;1059   		case DRVPWM_TIMER0:
;;;1060   		case DRVPWM_TIMER1:
000014  bf00              NOP      
;;;1061   		case DRVPWM_TIMER2:
000016  bf00              NOP      
;;;1062   		case DRVPWM_TIMER3:
000018  bf00              NOP      
;;;1063   			outp32(&PWMA->PCR, (inp32(&PWMA->PCR) & ~(1 << ((u8Timer & 0x07) << 3) )) | (i32Enable?(1 << ((u8Timer & 0x07) << 3) ):0) );
00001a  4a6b              LDR      r2,|L5.456|
00001c  6892              LDR      r2,[r2,#8]
00001e  0743              LSLS     r3,r0,#29
000020  0e9c              LSRS     r4,r3,#26
000022  2301              MOVS     r3,#1
000024  40a3              LSLS     r3,r3,r4
000026  439a              BICS     r2,r2,r3
000028  2900              CMP      r1,#0
00002a  d004              BEQ      |L5.54|
00002c  0743              LSLS     r3,r0,#29
00002e  0e9c              LSRS     r4,r3,#26
000030  2301              MOVS     r3,#1
000032  40a3              LSLS     r3,r3,r4
000034  e000              B        |L5.56|
                  |L5.54|
000036  2300              MOVS     r3,#0
                  |L5.56|
000038  431a              ORRS     r2,r2,r3
00003a  4b63              LDR      r3,|L5.456|
00003c  609a              STR      r2,[r3,#8]
;;;1064   			break;
00003e  e019              B        |L5.116|
;;;1065   		case DRVPWM_TIMER4:
;;;1066   		case DRVPWM_TIMER5:
000040  bf00              NOP      
;;;1067   		case DRVPWM_TIMER6:
000042  bf00              NOP      
;;;1068   		case DRVPWM_TIMER7:
000044  bf00              NOP      
;;;1069   			outp32(&PWMB->PCR, (inp32(&PWMB->PCR) & ~(1 << (((u8Timer & 0x07)-DRVPWM_TIMER4)<< 3) )) | (i32Enable?(1 << (((u8Timer & 0x07)-DRVPWM_TIMER4) << 3) ):0) );
000046  4a61              LDR      r2,|L5.460|
000048  6892              LDR      r2,[r2,#8]
00004a  0743              LSLS     r3,r0,#29
00004c  0f5b              LSRS     r3,r3,#29
00004e  1f1b              SUBS     r3,r3,#4
000050  00dc              LSLS     r4,r3,#3
000052  2301              MOVS     r3,#1
000054  40a3              LSLS     r3,r3,r4
000056  439a              BICS     r2,r2,r3
000058  2900              CMP      r1,#0
00005a  d006              BEQ      |L5.106|
00005c  0743              LSLS     r3,r0,#29
00005e  0f5b              LSRS     r3,r3,#29
000060  1f1b              SUBS     r3,r3,#4
000062  00dc              LSLS     r4,r3,#3
000064  2301              MOVS     r3,#1
000066  40a3              LSLS     r3,r3,r4
000068  e000              B        |L5.108|
                  |L5.106|
00006a  2300              MOVS     r3,#0
                  |L5.108|
00006c  431a              ORRS     r2,r2,r3
00006e  4b57              LDR      r3,|L5.460|
000070  609a              STR      r2,[r3,#8]
;;;1070   			break;
000072  bf00              NOP      
                  |L5.116|
000074  bf00              NOP                            ;1064
;;;1071   	} 	
;;;1072   
;;;1073   	if (u8Timer & 0x10)
000076  2210              MOVS     r2,#0x10
000078  4210              TST      r0,r2
00007a  d073              BEQ      |L5.356|
;;;1074   	{
;;;1075   		switch (u8Timer)
00007c  1a83              SUBS     r3,r0,r2
00007e  f7fffffe          BL       __ARM_common_switch8
000082  0805              DCB      0x08,0x05
000084  1f3b5572          DCB      0x1f,0x3b,0x55,0x72
000088  7d8994a0          DCB      0x7d,0x89,0x94,0xa0
;;;1076   		{
;;;1077   			case DRVPWM_CAP0:
;;;1078   				if (s_i32Option)
00008c  4a50              LDR      r2,|L5.464|
00008e  6812              LDR      r2,[r2,#0]  ; s_i32Option
000090  2a00              CMP      r2,#0
000092  d00a              BEQ      |L5.170|
;;;1079   					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT3);
000094  4a4c              LDR      r2,|L5.456|
000096  3240              ADDS     r2,r2,#0x40
000098  6912              LDR      r2,[r2,#0x10]
00009a  4b4e              LDR      r3,|L5.468|
00009c  401a              ANDS     r2,r2,r3
00009e  2308              MOVS     r3,#8
0000a0  431a              ORRS     r2,r2,r3
0000a2  4b49              LDR      r3,|L5.456|
0000a4  3340              ADDS     r3,r3,#0x40
0000a6  611a              STR      r2,[r3,#0x10]
0000a8  e009              B        |L5.190|
                  |L5.170|
;;;1080   				else
;;;1081   					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT3);	
0000aa  4a47              LDR      r2,|L5.456|
0000ac  3240              ADDS     r2,r2,#0x40
0000ae  6912              LDR      r2,[r2,#0x10]
0000b0  4b49              LDR      r3,|L5.472|
0000b2  401a              ANDS     r2,r2,r3
0000b4  2308              MOVS     r3,#8
0000b6  431a              ORRS     r2,r2,r3
0000b8  4b43              LDR      r3,|L5.456|
0000ba  3340              ADDS     r3,r3,#0x40
0000bc  611a              STR      r2,[r3,#0x10]
                  |L5.190|
;;;1082   				break;
0000be  e080              B        |L5.450|
;;;1083   			case DRVPWM_CAP1:
;;;1084   				if (s_i32Option)
0000c0  4a43              LDR      r2,|L5.464|
0000c2  6812              LDR      r2,[r2,#0]  ; s_i32Option
0000c4  2a00              CMP      r2,#0
0000c6  d00b              BEQ      |L5.224|
;;;1085   					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT19);
0000c8  4a3f              LDR      r2,|L5.456|
0000ca  3240              ADDS     r2,r2,#0x40
0000cc  6912              LDR      r2,[r2,#0x10]
0000ce  4b41              LDR      r3,|L5.468|
0000d0  401a              ANDS     r2,r2,r3
0000d2  2301              MOVS     r3,#1
0000d4  04db              LSLS     r3,r3,#19
0000d6  431a              ORRS     r2,r2,r3
0000d8  4b3b              LDR      r3,|L5.456|
0000da  3340              ADDS     r3,r3,#0x40
0000dc  611a              STR      r2,[r3,#0x10]
0000de  e00a              B        |L5.246|
                  |L5.224|
;;;1086   				else
;;;1087   					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT19);	
0000e0  4a39              LDR      r2,|L5.456|
0000e2  3240              ADDS     r2,r2,#0x40
0000e4  6912              LDR      r2,[r2,#0x10]
0000e6  4b3c              LDR      r3,|L5.472|
0000e8  401a              ANDS     r2,r2,r3
0000ea  2301              MOVS     r3,#1
0000ec  04db              LSLS     r3,r3,#19
0000ee  431a              ORRS     r2,r2,r3
0000f0  4b35              LDR      r3,|L5.456|
0000f2  3340              ADDS     r3,r3,#0x40
0000f4  611a              STR      r2,[r3,#0x10]
                  |L5.246|
;;;1088   				break;
0000f6  e064              B        |L5.450|
;;;1089   			case DRVPWM_CAP2:
;;;1090   				if (s_i32Option)
0000f8  4a35              LDR      r2,|L5.464|
0000fa  6812              LDR      r2,[r2,#0]  ; s_i32Option
0000fc  2a00              CMP      r2,#0
0000fe  d00a              BEQ      |L5.278|
;;;1091   					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT3);
000100  4a31              LDR      r2,|L5.456|
000102  3240              ADDS     r2,r2,#0x40
000104  6952              LDR      r2,[r2,#0x14]
000106  4b33              LDR      r3,|L5.468|
000108  401a              ANDS     r2,r2,r3
00010a  2308              MOVS     r3,#8
00010c  431a              ORRS     r2,r2,r3
00010e  4b2e              LDR      r3,|L5.456|
000110  3340              ADDS     r3,r3,#0x40
000112  615a              STR      r2,[r3,#0x14]
000114  e009              B        |L5.298|
                  |L5.278|
;;;1092   				else
;;;1093   					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT3);		
000116  4a2c              LDR      r2,|L5.456|
000118  3240              ADDS     r2,r2,#0x40
00011a  6952              LDR      r2,[r2,#0x14]
00011c  4b2e              LDR      r3,|L5.472|
00011e  401a              ANDS     r2,r2,r3
000120  2308              MOVS     r3,#8
000122  431a              ORRS     r2,r2,r3
000124  4b28              LDR      r3,|L5.456|
000126  3340              ADDS     r3,r3,#0x40
000128  615a              STR      r2,[r3,#0x14]
                  |L5.298|
;;;1094   				break;																	  
00012a  e04a              B        |L5.450|
;;;1095   			case DRVPWM_CAP3:
;;;1096   				if (s_i32Option)
00012c  4a28              LDR      r2,|L5.464|
00012e  6812              LDR      r2,[r2,#0]  ; s_i32Option
000130  2a00              CMP      r2,#0
000132  d00b              BEQ      |L5.332|
;;;1097   					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT19);
000134  4a24              LDR      r2,|L5.456|
000136  3240              ADDS     r2,r2,#0x40
000138  6952              LDR      r2,[r2,#0x14]
00013a  4b26              LDR      r3,|L5.468|
00013c  401a              ANDS     r2,r2,r3
00013e  2301              MOVS     r3,#1
000140  04db              LSLS     r3,r3,#19
000142  431a              ORRS     r2,r2,r3
000144  4b20              LDR      r3,|L5.456|
000146  3340              ADDS     r3,r3,#0x40
000148  615a              STR      r2,[r3,#0x14]
00014a  e00a              B        |L5.354|
                  |L5.332|
;;;1098   				else
;;;1099   					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT19);
00014c  4a1e              LDR      r2,|L5.456|
00014e  3240              ADDS     r2,r2,#0x40
000150  6952              LDR      r2,[r2,#0x14]
000152  4b21              LDR      r3,|L5.472|
000154  401a              ANDS     r2,r2,r3
000156  2301              MOVS     r3,#1
000158  04db              LSLS     r3,r3,#19
00015a  431a              ORRS     r2,r2,r3
00015c  4b1a              LDR      r3,|L5.456|
00015e  3340              ADDS     r3,r3,#0x40
000160  615a              STR      r2,[r3,#0x14]
                  |L5.354|
;;;1100   				break;
000162  e02e              B        |L5.450|
                  |L5.356|
000164  e02e              B        |L5.452|
;;;1101   			case DRVPWM_CAP4:
;;;1102   				outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT3);	
000166  4a19              LDR      r2,|L5.460|
000168  3240              ADDS     r2,r2,#0x40
00016a  6912              LDR      r2,[r2,#0x10]
00016c  4b1a              LDR      r3,|L5.472|
00016e  401a              ANDS     r2,r2,r3
000170  2308              MOVS     r3,#8
000172  431a              ORRS     r2,r2,r3
000174  4b15              LDR      r3,|L5.460|
000176  3340              ADDS     r3,r3,#0x40
000178  611a              STR      r2,[r3,#0x10]
;;;1103   				break;
00017a  e022              B        |L5.450|
;;;1104   			case DRVPWM_CAP5:
;;;1105   				outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT19);	
00017c  4a13              LDR      r2,|L5.460|
00017e  3240              ADDS     r2,r2,#0x40
000180  6912              LDR      r2,[r2,#0x10]
000182  4b15              LDR      r3,|L5.472|
000184  401a              ANDS     r2,r2,r3
000186  2301              MOVS     r3,#1
000188  04db              LSLS     r3,r3,#19
00018a  431a              ORRS     r2,r2,r3
00018c  4b0f              LDR      r3,|L5.460|
00018e  3340              ADDS     r3,r3,#0x40
000190  611a              STR      r2,[r3,#0x10]
;;;1106   				break;
000192  e016              B        |L5.450|
;;;1107   			case DRVPWM_CAP6:
;;;1108   				outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT3);	
000194  4a0d              LDR      r2,|L5.460|
000196  3240              ADDS     r2,r2,#0x40
000198  6952              LDR      r2,[r2,#0x14]
00019a  4b0f              LDR      r3,|L5.472|
00019c  401a              ANDS     r2,r2,r3
00019e  2308              MOVS     r3,#8
0001a0  431a              ORRS     r2,r2,r3
0001a2  4b0a              LDR      r3,|L5.460|
0001a4  3340              ADDS     r3,r3,#0x40
0001a6  615a              STR      r2,[r3,#0x14]
;;;1109   				break;																	  
0001a8  e00b              B        |L5.450|
;;;1110   			case DRVPWM_CAP7:
;;;1111   				outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT19);				
0001aa  4a08              LDR      r2,|L5.460|
0001ac  3240              ADDS     r2,r2,#0x40
0001ae  6952              LDR      r2,[r2,#0x14]
0001b0  4b09              LDR      r3,|L5.472|
0001b2  401a              ANDS     r2,r2,r3
0001b4  2301              MOVS     r3,#1
0001b6  04db              LSLS     r3,r3,#19
0001b8  431a              ORRS     r2,r2,r3
0001ba  4b04              LDR      r3,|L5.460|
0001bc  3340              ADDS     r3,r3,#0x40
0001be  615a              STR      r2,[r3,#0x14]
;;;1112   				break;	
0001c0  bf00              NOP      
                  |L5.450|
0001c2  bf00              NOP                            ;1082
                  |L5.452|
;;;1113   		}
;;;1114   	}
;;;1115   }
0001c4  bd10              POP      {r4,pc}
;;;1116   
                          ENDP

0001c6  0000              DCW      0x0000
                  |L5.456|
                          DCD      0x40040000
                  |L5.460|
                          DCD      0x40140000
                  |L5.464|
                          DCD      s_i32Option
                  |L5.468|
                          DCD      0x000f000f
                  |L5.472|
                          DCD      0xffefffef

                          AREA ||i.DrvPWM_EnableDeadZone||, CODE, READONLY, ALIGN=2

                  DrvPWM_EnableDeadZone PROC
;;;1011   /*---------------------------------------------------------------------------------------------------------*/
;;;1012   void DrvPWM_EnableDeadZone(uint8_t u8Timer, uint8_t u8Length, int32_t i32EnableDeadZone)
000000  b530              PUSH     {r4,r5,lr}
;;;1013   {
;;;1014   	switch (u8Timer & 0x07)
000002  0743              LSLS     r3,r0,#29
000004  0f5b              LSRS     r3,r3,#29
000006  f7fffffe          BL       __ARM_common_switch8
00000a  0805              DCB      0x08,0x05
00000c  061d1e33          DCB      0x06,0x1d,0x1e,0x33
000010  344b4c61          DCB      0x34,0x4b,0x4c,0x61
;;;1015   	{
;;;1016   		case DRVPWM_TIMER0:
;;;1017   		case DRVPWM_TIMER1:
000014  bf00              NOP      
;;;1018   			PWMA->PPR.DZI01  = u8Length;
000016  4b2e              LDR      r3,|L6.208|
000018  681b              LDR      r3,[r3,#0]
00001a  24ff              MOVS     r4,#0xff
00001c  0424              LSLS     r4,r4,#16
00001e  43a3              BICS     r3,r3,r4
000020  040c              LSLS     r4,r1,#16
000022  25ff              MOVS     r5,#0xff
000024  042d              LSLS     r5,r5,#16
000026  402c              ANDS     r4,r4,r5
000028  4323              ORRS     r3,r3,r4
00002a  4c29              LDR      r4,|L6.208|
00002c  6023              STR      r3,[r4,#0]
;;;1019   			PWMA->PCR.DZEN01 = i32EnableDeadZone;
00002e  4623              MOV      r3,r4
000030  689b              LDR      r3,[r3,#8]
000032  2410              MOVS     r4,#0x10
000034  43a3              BICS     r3,r3,r4
000036  0114              LSLS     r4,r2,#4
000038  2510              MOVS     r5,#0x10
00003a  402c              ANDS     r4,r4,r5
00003c  4323              ORRS     r3,r3,r4
00003e  4c24              LDR      r4,|L6.208|
000040  60a3              STR      r3,[r4,#8]
;;;1020   			break;
000042  e043              B        |L6.204|
;;;1021   		case DRVPWM_TIMER2:
;;;1022   		case DRVPWM_TIMER3:
000044  bf00              NOP      
;;;1023   			PWMA->PPR.DZI23  = u8Length;
000046  4b22              LDR      r3,|L6.208|
000048  681b              LDR      r3,[r3,#0]
00004a  021b              LSLS     r3,r3,#8
00004c  0a1b              LSRS     r3,r3,#8
00004e  060c              LSLS     r4,r1,#24
000050  0e24              LSRS     r4,r4,#24
000052  0624              LSLS     r4,r4,#24
000054  4323              ORRS     r3,r3,r4
000056  4c1e              LDR      r4,|L6.208|
000058  6023              STR      r3,[r4,#0]
;;;1024   			PWMA->PCR.DZEN23 = i32EnableDeadZone;
00005a  4623              MOV      r3,r4
00005c  689b              LDR      r3,[r3,#8]
00005e  2420              MOVS     r4,#0x20
000060  43a3              BICS     r3,r3,r4
000062  0154              LSLS     r4,r2,#5
000064  2520              MOVS     r5,#0x20
000066  402c              ANDS     r4,r4,r5
000068  4323              ORRS     r3,r3,r4
00006a  4c19              LDR      r4,|L6.208|
00006c  60a3              STR      r3,[r4,#8]
;;;1025   			break;
00006e  e02d              B        |L6.204|
;;;1026   		case DRVPWM_TIMER4:
;;;1027   		case DRVPWM_TIMER5:
000070  bf00              NOP      
;;;1028   			PWMB->PPR.DZI01  = u8Length;
000072  4b18              LDR      r3,|L6.212|
000074  681b              LDR      r3,[r3,#0]
000076  24ff              MOVS     r4,#0xff
000078  0424              LSLS     r4,r4,#16
00007a  43a3              BICS     r3,r3,r4
00007c  040c              LSLS     r4,r1,#16
00007e  25ff              MOVS     r5,#0xff
000080  042d              LSLS     r5,r5,#16
000082  402c              ANDS     r4,r4,r5
000084  4323              ORRS     r3,r3,r4
000086  4c13              LDR      r4,|L6.212|
000088  6023              STR      r3,[r4,#0]
;;;1029   			PWMB->PCR.DZEN01 = i32EnableDeadZone;
00008a  4623              MOV      r3,r4
00008c  689b              LDR      r3,[r3,#8]
00008e  2410              MOVS     r4,#0x10
000090  43a3              BICS     r3,r3,r4
000092  0114              LSLS     r4,r2,#4
000094  2510              MOVS     r5,#0x10
000096  402c              ANDS     r4,r4,r5
000098  4323              ORRS     r3,r3,r4
00009a  4c0e              LDR      r4,|L6.212|
00009c  60a3              STR      r3,[r4,#8]
;;;1030   			break;
00009e  e015              B        |L6.204|
;;;1031   		case DRVPWM_TIMER6:
;;;1032   		case DRVPWM_TIMER7:
0000a0  bf00              NOP      
;;;1033   			PWMB->PPR.DZI23  = u8Length;
0000a2  4b0c              LDR      r3,|L6.212|
0000a4  681b              LDR      r3,[r3,#0]
0000a6  021b              LSLS     r3,r3,#8
0000a8  0a1b              LSRS     r3,r3,#8
0000aa  060c              LSLS     r4,r1,#24
0000ac  0e24              LSRS     r4,r4,#24
0000ae  0624              LSLS     r4,r4,#24
0000b0  4323              ORRS     r3,r3,r4
0000b2  4c08              LDR      r4,|L6.212|
0000b4  6023              STR      r3,[r4,#0]
;;;1034   			PWMB->PCR.DZEN23 = i32EnableDeadZone;
0000b6  4623              MOV      r3,r4
0000b8  689b              LDR      r3,[r3,#8]
0000ba  2420              MOVS     r4,#0x20
0000bc  43a3              BICS     r3,r3,r4
0000be  0154              LSLS     r4,r2,#5
0000c0  2520              MOVS     r5,#0x20
0000c2  402c              ANDS     r4,r4,r5
0000c4  4323              ORRS     r3,r3,r4
0000c6  4c03              LDR      r4,|L6.212|
0000c8  60a3              STR      r3,[r4,#8]
;;;1035   			break;
0000ca  bf00              NOP      
                  |L6.204|
0000cc  bf00              NOP                            ;1020
;;;1036   	} 	
;;;1037   }
0000ce  bd30              POP      {r4,r5,pc}
;;;1038   
                          ENDP

                  |L6.208|
                          DCD      0x40040000
                  |L6.212|
                          DCD      0x40140000

                          AREA ||i.DrvPWM_EnableInt||, CODE, READONLY, ALIGN=2

                  DrvPWM_EnableInt PROC
;;;380    /*---------------------------------------------------------------------------------------------------------*/
;;;381    void DrvPWM_EnableInt(uint8_t u8Timer, uint8_t u8Int, PFN_DRVPWM_CALLBACK pfncallback)
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;382    {
000002  4607              MOV      r7,r0
000004  4614              MOV      r4,r2
;;;383    	int32_t Rflag, Fflag;	
;;;384    
;;;385    	Rflag = u8Int & 0x01;
000006  9801              LDR      r0,[sp,#4]
000008  07c5              LSLS     r5,r0,#31
00000a  0fed              LSRS     r5,r5,#31
;;;386    	Fflag = u8Int & 0x02;
00000c  2102              MOVS     r1,#2
00000e  9801              LDR      r0,[sp,#4]
000010  4008              ANDS     r0,r0,r1
000012  4606              MOV      r6,r0
;;;387    		
;;;388    	switch (u8Timer)
000014  463b              MOV      r3,r7
000016  f7fffffe          BL       __ARM_common_switch8
00001a  180d              DCB      0x18,0x0d
00001c  4887c2fc          DCB      0x48,0x87,0xc2,0xfc
000020  fbfaf916          DCB      0xfb,0xfa,0xf9,0x16
000024  16161616          DCB      0x16,0x16,0x16,0x16
000028  16161617          DCB      0x16,0x16,0x16,0x17
00002c  5291ccf8          DCB      0x52,0x91,0xcc,0xf8
000030  f7f6f516          DCB      0xf7,0xf6,0xf5,0x16
;;;389    	{	
;;;390    		case DRVPWM_TIMER0:
;;;391    			PWMA->PIER.PWMIE0 = 1;
000034  48c7              LDR      r0,|L7.852|
000036  6800              LDR      r0,[r0,#0]
000038  0840              LSRS     r0,r0,#1
00003a  0040              LSLS     r0,r0,#1
00003c  1c40              ADDS     r0,r0,#1
00003e  49c5              LDR      r1,|L7.852|
000040  6008              STR      r0,[r1,#0]
;;;392    			g_sDrvPWMAHandler.pfnPWM0CallBack = pfncallback;
000042  48c5              LDR      r0,|L7.856|
000044  6004              STR      r4,[r0,#0]  ; g_sDrvPWMAHandler
;;;393    			break;
000046  e179              B        |L7.828|
;;;394    		case DRVPWM_CAP0:			
;;;395    			if (Rflag)
000048  2d00              CMP      r5,#0
00004a  d014              BEQ      |L7.118|
;;;396    			{
;;;397    				if (s_i32Option)
00004c  48c3              LDR      r0,|L7.860|
00004e  6800              LDR      r0,[r0,#0]  ; s_i32Option
000050  2800              CMP      r0,#0
000052  d008              BEQ      |L7.102|
;;;398    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT1);
000054  48bf              LDR      r0,|L7.852|
000056  6900              LDR      r0,[r0,#0x10]
000058  49c1              LDR      r1,|L7.864|
00005a  4008              ANDS     r0,r0,r1
00005c  2102              MOVS     r1,#2
00005e  4308              ORRS     r0,r0,r1
000060  49bc              LDR      r1,|L7.852|
000062  6108              STR      r0,[r1,#0x10]
000064  e007              B        |L7.118|
                  |L7.102|
;;;399    				else
;;;400    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT1);	
000066  48bb              LDR      r0,|L7.852|
000068  6900              LDR      r0,[r0,#0x10]
00006a  49be              LDR      r1,|L7.868|
00006c  4008              ANDS     r0,r0,r1
00006e  2102              MOVS     r1,#2
000070  4308              ORRS     r0,r0,r1
000072  49b8              LDR      r1,|L7.852|
000074  6108              STR      r0,[r1,#0x10]
                  |L7.118|
;;;401    			}
;;;402    			if (Fflag)
000076  2e00              CMP      r6,#0
000078  d014              BEQ      |L7.164|
;;;403    			{
;;;404    				if (s_i32Option)
00007a  48b8              LDR      r0,|L7.860|
00007c  6800              LDR      r0,[r0,#0]  ; s_i32Option
00007e  2800              CMP      r0,#0
000080  d008              BEQ      |L7.148|
;;;405    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT2);
000082  48b4              LDR      r0,|L7.852|
000084  6900              LDR      r0,[r0,#0x10]
000086  49b6              LDR      r1,|L7.864|
000088  4008              ANDS     r0,r0,r1
00008a  2104              MOVS     r1,#4
00008c  4308              ORRS     r0,r0,r1
00008e  49b1              LDR      r1,|L7.852|
000090  6108              STR      r0,[r1,#0x10]
000092  e007              B        |L7.164|
                  |L7.148|
;;;406    				else
;;;407    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT2);
000094  48af              LDR      r0,|L7.852|
000096  6900              LDR      r0,[r0,#0x10]
000098  49b2              LDR      r1,|L7.868|
00009a  4008              ANDS     r0,r0,r1
00009c  2104              MOVS     r1,#4
00009e  4308              ORRS     r0,r0,r1
0000a0  49ac              LDR      r1,|L7.852|
0000a2  6108              STR      r0,[r1,#0x10]
                  |L7.164|
;;;408    		    }
;;;409    			g_sDrvPWMAHandler.pfnCAP0CallBack = pfncallback;
0000a4  48ac              LDR      r0,|L7.856|
0000a6  6044              STR      r4,[r0,#4]  ; g_sDrvPWMAHandler
;;;410    			break;	
0000a8  e148              B        |L7.828|
;;;411    		case DRVPWM_TIMER1:
;;;412    			PWMA->PIER.PWMIE1 = 1;
0000aa  48aa              LDR      r0,|L7.852|
0000ac  6800              LDR      r0,[r0,#0]
0000ae  2102              MOVS     r1,#2
0000b0  4388              BICS     r0,r0,r1
0000b2  1c80              ADDS     r0,r0,#2
0000b4  49a7              LDR      r1,|L7.852|
0000b6  6008              STR      r0,[r1,#0]
;;;413    			g_sDrvPWMAHandler.pfnPWM1CallBack = pfncallback;
0000b8  48a7              LDR      r0,|L7.856|
0000ba  6084              STR      r4,[r0,#8]  ; g_sDrvPWMAHandler
;;;414    			break;
0000bc  e13e              B        |L7.828|
;;;415    		case DRVPWM_CAP1:			
;;;416    			if (Rflag)
0000be  2d00              CMP      r5,#0
0000c0  d016              BEQ      |L7.240|
;;;417    			{
;;;418    				if (s_i32Option)
0000c2  48a6              LDR      r0,|L7.860|
0000c4  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000c6  2800              CMP      r0,#0
0000c8  d009              BEQ      |L7.222|
;;;419    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT17);
0000ca  48a2              LDR      r0,|L7.852|
0000cc  6900              LDR      r0,[r0,#0x10]
0000ce  49a4              LDR      r1,|L7.864|
0000d0  4008              ANDS     r0,r0,r1
0000d2  2101              MOVS     r1,#1
0000d4  0449              LSLS     r1,r1,#17
0000d6  4308              ORRS     r0,r0,r1
0000d8  499e              LDR      r1,|L7.852|
0000da  6108              STR      r0,[r1,#0x10]
0000dc  e008              B        |L7.240|
                  |L7.222|
;;;420    				else
;;;421    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT17);			
0000de  489d              LDR      r0,|L7.852|
0000e0  6900              LDR      r0,[r0,#0x10]
0000e2  49a0              LDR      r1,|L7.868|
0000e4  4008              ANDS     r0,r0,r1
0000e6  2101              MOVS     r1,#1
0000e8  0449              LSLS     r1,r1,#17
0000ea  4308              ORRS     r0,r0,r1
0000ec  4999              LDR      r1,|L7.852|
0000ee  6108              STR      r0,[r1,#0x10]
                  |L7.240|
;;;422    			}
;;;423    			if (Fflag)
0000f0  2e00              CMP      r6,#0
0000f2  d016              BEQ      |L7.290|
;;;424    			{
;;;425    				if (s_i32Option)
0000f4  4899              LDR      r0,|L7.860|
0000f6  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000f8  2800              CMP      r0,#0
0000fa  d009              BEQ      |L7.272|
;;;426    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT18);
0000fc  4895              LDR      r0,|L7.852|
0000fe  6900              LDR      r0,[r0,#0x10]
000100  4997              LDR      r1,|L7.864|
000102  4008              ANDS     r0,r0,r1
000104  2101              MOVS     r1,#1
000106  0489              LSLS     r1,r1,#18
000108  4308              ORRS     r0,r0,r1
00010a  4992              LDR      r1,|L7.852|
00010c  6108              STR      r0,[r1,#0x10]
00010e  e008              B        |L7.290|
                  |L7.272|
;;;427    				else
;;;428    					outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT18);		    
000110  4890              LDR      r0,|L7.852|
000112  6900              LDR      r0,[r0,#0x10]
000114  4993              LDR      r1,|L7.868|
000116  4008              ANDS     r0,r0,r1
000118  2101              MOVS     r1,#1
00011a  0489              LSLS     r1,r1,#18
00011c  4308              ORRS     r0,r0,r1
00011e  498d              LDR      r1,|L7.852|
000120  6108              STR      r0,[r1,#0x10]
                  |L7.290|
;;;429    			}
;;;430    			g_sDrvPWMAHandler.pfnCAP1CallBack = pfncallback;
000122  488d              LDR      r0,|L7.856|
000124  60c4              STR      r4,[r0,#0xc]  ; g_sDrvPWMAHandler
;;;431    			break;
000126  e109              B        |L7.828|
;;;432    		case DRVPWM_TIMER2:
;;;433    			PWMA->PIER.PWMIE2 = 1;
000128  488a              LDR      r0,|L7.852|
00012a  6800              LDR      r0,[r0,#0]
00012c  2104              MOVS     r1,#4
00012e  4388              BICS     r0,r0,r1
000130  1d00              ADDS     r0,r0,#4
000132  4988              LDR      r1,|L7.852|
000134  6008              STR      r0,[r1,#0]
;;;434    			g_sDrvPWMAHandler.pfnPWM2CallBack = pfncallback;
000136  4888              LDR      r0,|L7.856|
000138  6104              STR      r4,[r0,#0x10]  ; g_sDrvPWMAHandler
;;;435    			break;
00013a  e0ff              B        |L7.828|
;;;436    		case DRVPWM_CAP2:			
;;;437    			if (Rflag)
00013c  2d00              CMP      r5,#0
00013e  d014              BEQ      |L7.362|
;;;438    			{
;;;439    				if (s_i32Option)
000140  4886              LDR      r0,|L7.860|
000142  6800              LDR      r0,[r0,#0]  ; s_i32Option
000144  2800              CMP      r0,#0
000146  d008              BEQ      |L7.346|
;;;440    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT1);
000148  4882              LDR      r0,|L7.852|
00014a  6940              LDR      r0,[r0,#0x14]
00014c  4984              LDR      r1,|L7.864|
00014e  4008              ANDS     r0,r0,r1
000150  2102              MOVS     r1,#2
000152  4308              ORRS     r0,r0,r1
000154  497f              LDR      r1,|L7.852|
000156  6148              STR      r0,[r1,#0x14]
000158  e007              B        |L7.362|
                  |L7.346|
;;;441    				else
;;;442    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT1);				
00015a  487e              LDR      r0,|L7.852|
00015c  6940              LDR      r0,[r0,#0x14]
00015e  4981              LDR      r1,|L7.868|
000160  4008              ANDS     r0,r0,r1
000162  2102              MOVS     r1,#2
000164  4308              ORRS     r0,r0,r1
000166  497b              LDR      r1,|L7.852|
000168  6148              STR      r0,[r1,#0x14]
                  |L7.362|
;;;443    			}
;;;444    			if (Fflag)
00016a  2e00              CMP      r6,#0
00016c  d014              BEQ      |L7.408|
;;;445    			{
;;;446    				if (s_i32Option)
00016e  487b              LDR      r0,|L7.860|
000170  6800              LDR      r0,[r0,#0]  ; s_i32Option
000172  2800              CMP      r0,#0
000174  d008              BEQ      |L7.392|
;;;447    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT2);
000176  4877              LDR      r0,|L7.852|
000178  6940              LDR      r0,[r0,#0x14]
00017a  4979              LDR      r1,|L7.864|
00017c  4008              ANDS     r0,r0,r1
00017e  2104              MOVS     r1,#4
000180  4308              ORRS     r0,r0,r1
000182  4974              LDR      r1,|L7.852|
000184  6148              STR      r0,[r1,#0x14]
000186  e007              B        |L7.408|
                  |L7.392|
;;;448    				else
;;;449    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT2);		    
000188  4872              LDR      r0,|L7.852|
00018a  6940              LDR      r0,[r0,#0x14]
00018c  4975              LDR      r1,|L7.868|
00018e  4008              ANDS     r0,r0,r1
000190  2104              MOVS     r1,#4
000192  4308              ORRS     r0,r0,r1
000194  496f              LDR      r1,|L7.852|
000196  6148              STR      r0,[r1,#0x14]
                  |L7.408|
;;;450    			}
;;;451    			g_sDrvPWMAHandler.pfnCAP2CallBack = pfncallback;
000198  486f              LDR      r0,|L7.856|
00019a  6144              STR      r4,[r0,#0x14]  ; g_sDrvPWMAHandler
;;;452    			break;
00019c  e0ce              B        |L7.828|
;;;453    		case DRVPWM_TIMER3:
;;;454    			PWMA->PIER.PWMIE3 = 1;
00019e  486d              LDR      r0,|L7.852|
0001a0  6800              LDR      r0,[r0,#0]
0001a2  2108              MOVS     r1,#8
0001a4  4388              BICS     r0,r0,r1
0001a6  3008              ADDS     r0,r0,#8
0001a8  496a              LDR      r1,|L7.852|
0001aa  6008              STR      r0,[r1,#0]
;;;455    			g_sDrvPWMAHandler.pfnPWM3CallBack = pfncallback;
0001ac  486a              LDR      r0,|L7.856|
0001ae  6184              STR      r4,[r0,#0x18]  ; g_sDrvPWMAHandler
;;;456    			break;
0001b0  e0c4              B        |L7.828|
;;;457    		case DRVPWM_CAP3:			
;;;458    			if (Rflag)
0001b2  2d00              CMP      r5,#0
0001b4  d016              BEQ      |L7.484|
;;;459    			{
;;;460    				if (s_i32Option)
0001b6  4869              LDR      r0,|L7.860|
0001b8  6800              LDR      r0,[r0,#0]  ; s_i32Option
0001ba  2800              CMP      r0,#0
0001bc  d009              BEQ      |L7.466|
;;;461    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT17);
0001be  4865              LDR      r0,|L7.852|
0001c0  6940              LDR      r0,[r0,#0x14]
0001c2  4967              LDR      r1,|L7.864|
0001c4  4008              ANDS     r0,r0,r1
0001c6  2101              MOVS     r1,#1
0001c8  0449              LSLS     r1,r1,#17
0001ca  4308              ORRS     r0,r0,r1
0001cc  4961              LDR      r1,|L7.852|
0001ce  6148              STR      r0,[r1,#0x14]
0001d0  e008              B        |L7.484|
                  |L7.466|
;;;462    				else
;;;463    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT17);				
0001d2  4860              LDR      r0,|L7.852|
0001d4  6940              LDR      r0,[r0,#0x14]
0001d6  4963              LDR      r1,|L7.868|
0001d8  4008              ANDS     r0,r0,r1
0001da  2101              MOVS     r1,#1
0001dc  0449              LSLS     r1,r1,#17
0001de  4308              ORRS     r0,r0,r1
0001e0  495c              LDR      r1,|L7.852|
0001e2  6148              STR      r0,[r1,#0x14]
                  |L7.484|
;;;464    			}
;;;465    			if (Fflag)
0001e4  2e00              CMP      r6,#0
0001e6  d01e              BEQ      |L7.550|
;;;466    			{
;;;467    				if (s_i32Option)
0001e8  485c              LDR      r0,|L7.860|
0001ea  6800              LDR      r0,[r0,#0]  ; s_i32Option
0001ec  2800              CMP      r0,#0
0001ee  d011              BEQ      |L7.532|
;;;468    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT18);
0001f0  4858              LDR      r0,|L7.852|
0001f2  6940              LDR      r0,[r0,#0x14]
0001f4  495a              LDR      r1,|L7.864|
0001f6  4008              ANDS     r0,r0,r1
0001f8  2101              MOVS     r1,#1
0001fa  0489              LSLS     r1,r1,#18
0001fc  4308              ORRS     r0,r0,r1
0001fe  4955              LDR      r1,|L7.852|
000200  6148              STR      r0,[r1,#0x14]
000202  e010              B        |L7.550|
000204  e081              B        |L7.778|
000206  e05f              B        |L7.712|
000208  e03b              B        |L7.642|
00020a  e019              B        |L7.576|
00020c  e073              B        |L7.758|
00020e  e051              B        |L7.692|
000210  e02d              B        |L7.622|
000212  e00b              B        |L7.556|
                  |L7.532|
;;;469    				else
;;;470    					outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT18);				
000214  484f              LDR      r0,|L7.852|
000216  6940              LDR      r0,[r0,#0x14]
000218  4952              LDR      r1,|L7.868|
00021a  4008              ANDS     r0,r0,r1
00021c  2101              MOVS     r1,#1
00021e  0489              LSLS     r1,r1,#18
000220  4308              ORRS     r0,r0,r1
000222  494c              LDR      r1,|L7.852|
000224  6148              STR      r0,[r1,#0x14]
                  |L7.550|
;;;471    			}
;;;472    			g_sDrvPWMAHandler.pfnCAP3CallBack = pfncallback;
000226  484c              LDR      r0,|L7.856|
000228  61c4              STR      r4,[r0,#0x1c]  ; g_sDrvPWMAHandler
;;;473    			break;			
00022a  e087              B        |L7.828|
                  |L7.556|
;;;474    			
;;;475    		case DRVPWM_TIMER4:
;;;476    			PWMB->PIER.PWMIE0 = 1;
00022c  484e              LDR      r0,|L7.872|
00022e  6800              LDR      r0,[r0,#0]
000230  0840              LSRS     r0,r0,#1
000232  0040              LSLS     r0,r0,#1
000234  1c40              ADDS     r0,r0,#1
000236  494c              LDR      r1,|L7.872|
000238  6008              STR      r0,[r1,#0]
;;;477    			g_sDrvPWMBHandler.pfnPWM0CallBack = pfncallback;
00023a  484c              LDR      r0,|L7.876|
00023c  6004              STR      r4,[r0,#0]  ; g_sDrvPWMBHandler
;;;478    			break;
00023e  e07d              B        |L7.828|
                  |L7.576|
;;;479    		case DRVPWM_CAP4:			
;;;480    			if (Rflag)
000240  2d00              CMP      r5,#0
000242  d007              BEQ      |L7.596|
;;;481    				outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT1);	
000244  4848              LDR      r0,|L7.872|
000246  6900              LDR      r0,[r0,#0x10]
000248  4946              LDR      r1,|L7.868|
00024a  4008              ANDS     r0,r0,r1
00024c  2102              MOVS     r1,#2
00024e  4308              ORRS     r0,r0,r1
000250  4945              LDR      r1,|L7.872|
000252  6108              STR      r0,[r1,#0x10]
                  |L7.596|
;;;482    			if (Fflag)
000254  2e00              CMP      r6,#0
000256  d007              BEQ      |L7.616|
;;;483    				outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT2);
000258  4843              LDR      r0,|L7.872|
00025a  6900              LDR      r0,[r0,#0x10]
00025c  4941              LDR      r1,|L7.868|
00025e  4008              ANDS     r0,r0,r1
000260  2104              MOVS     r1,#4
000262  4308              ORRS     r0,r0,r1
000264  4940              LDR      r1,|L7.872|
000266  6108              STR      r0,[r1,#0x10]
                  |L7.616|
;;;484    		    g_sDrvPWMBHandler.pfnCAP0CallBack = pfncallback;
000268  4840              LDR      r0,|L7.876|
00026a  6044              STR      r4,[r0,#4]  ; g_sDrvPWMBHandler
;;;485    			break;	
00026c  e066              B        |L7.828|
                  |L7.622|
;;;486    		case DRVPWM_TIMER5:
;;;487    			PWMB->PIER.PWMIE1 = 1;
00026e  483e              LDR      r0,|L7.872|
000270  6800              LDR      r0,[r0,#0]
000272  2102              MOVS     r1,#2
000274  4388              BICS     r0,r0,r1
000276  1c80              ADDS     r0,r0,#2
000278  493b              LDR      r1,|L7.872|
00027a  6008              STR      r0,[r1,#0]
;;;488    			g_sDrvPWMBHandler.pfnPWM1CallBack = pfncallback;
00027c  483b              LDR      r0,|L7.876|
00027e  6084              STR      r4,[r0,#8]  ; g_sDrvPWMBHandler
;;;489    			break;
000280  e05c              B        |L7.828|
                  |L7.642|
;;;490    		case DRVPWM_CAP5:			
;;;491    		    if (Rflag)
000282  2d00              CMP      r5,#0
000284  d008              BEQ      |L7.664|
;;;492    				outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT17);
000286  4838              LDR      r0,|L7.872|
000288  6900              LDR      r0,[r0,#0x10]
00028a  4936              LDR      r1,|L7.868|
00028c  4008              ANDS     r0,r0,r1
00028e  2101              MOVS     r1,#1
000290  0449              LSLS     r1,r1,#17
000292  4308              ORRS     r0,r0,r1
000294  4934              LDR      r1,|L7.872|
000296  6108              STR      r0,[r1,#0x10]
                  |L7.664|
;;;493    			if (Fflag)
000298  2e00              CMP      r6,#0
00029a  d008              BEQ      |L7.686|
;;;494    				outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT18);
00029c  4832              LDR      r0,|L7.872|
00029e  6900              LDR      r0,[r0,#0x10]
0002a0  4930              LDR      r1,|L7.868|
0002a2  4008              ANDS     r0,r0,r1
0002a4  2101              MOVS     r1,#1
0002a6  0489              LSLS     r1,r1,#18
0002a8  4308              ORRS     r0,r0,r1
0002aa  492f              LDR      r1,|L7.872|
0002ac  6108              STR      r0,[r1,#0x10]
                  |L7.686|
;;;495    			g_sDrvPWMBHandler.pfnCAP1CallBack = pfncallback;
0002ae  482f              LDR      r0,|L7.876|
0002b0  60c4              STR      r4,[r0,#0xc]  ; g_sDrvPWMBHandler
;;;496    			break;
0002b2  e043              B        |L7.828|
                  |L7.692|
;;;497    		case DRVPWM_TIMER6:
;;;498    			PWMB->PIER.PWMIE2 = 1;
0002b4  482c              LDR      r0,|L7.872|
0002b6  6800              LDR      r0,[r0,#0]
0002b8  2104              MOVS     r1,#4
0002ba  4388              BICS     r0,r0,r1
0002bc  1d00              ADDS     r0,r0,#4
0002be  492a              LDR      r1,|L7.872|
0002c0  6008              STR      r0,[r1,#0]
;;;499    			g_sDrvPWMBHandler.pfnPWM2CallBack = pfncallback;
0002c2  482a              LDR      r0,|L7.876|
0002c4  6104              STR      r4,[r0,#0x10]  ; g_sDrvPWMBHandler
;;;500    			break;
0002c6  e039              B        |L7.828|
                  |L7.712|
;;;501    		case DRVPWM_CAP6:			
;;;502    		    if (Rflag)
0002c8  2d00              CMP      r5,#0
0002ca  d007              BEQ      |L7.732|
;;;503    				outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT1);
0002cc  4826              LDR      r0,|L7.872|
0002ce  6940              LDR      r0,[r0,#0x14]
0002d0  4924              LDR      r1,|L7.868|
0002d2  4008              ANDS     r0,r0,r1
0002d4  2102              MOVS     r1,#2
0002d6  4308              ORRS     r0,r0,r1
0002d8  4923              LDR      r1,|L7.872|
0002da  6148              STR      r0,[r1,#0x14]
                  |L7.732|
;;;504    			if (Fflag)
0002dc  2e00              CMP      r6,#0
0002de  d007              BEQ      |L7.752|
;;;505    				outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT2);
0002e0  4821              LDR      r0,|L7.872|
0002e2  6940              LDR      r0,[r0,#0x14]
0002e4  491f              LDR      r1,|L7.868|
0002e6  4008              ANDS     r0,r0,r1
0002e8  2104              MOVS     r1,#4
0002ea  4308              ORRS     r0,r0,r1
0002ec  491e              LDR      r1,|L7.872|
0002ee  6148              STR      r0,[r1,#0x14]
                  |L7.752|
;;;506    			g_sDrvPWMBHandler.pfnCAP2CallBack = pfncallback;
0002f0  481e              LDR      r0,|L7.876|
0002f2  6144              STR      r4,[r0,#0x14]  ; g_sDrvPWMBHandler
;;;507    			break;
0002f4  e022              B        |L7.828|
                  |L7.758|
;;;508    		case DRVPWM_TIMER7:
;;;509    			PWMB->PIER.PWMIE3 = 1;
0002f6  481c              LDR      r0,|L7.872|
0002f8  6800              LDR      r0,[r0,#0]
0002fa  2108              MOVS     r1,#8
0002fc  4388              BICS     r0,r0,r1
0002fe  3008              ADDS     r0,r0,#8
000300  4919              LDR      r1,|L7.872|
000302  6008              STR      r0,[r1,#0]
;;;510    			g_sDrvPWMBHandler.pfnPWM3CallBack = pfncallback;
000304  4819              LDR      r0,|L7.876|
000306  6184              STR      r4,[r0,#0x18]  ; g_sDrvPWMBHandler
;;;511    			break;
000308  e018              B        |L7.828|
                  |L7.778|
;;;512    		case DRVPWM_CAP7:			
;;;513    			if (Rflag)
00030a  2d00              CMP      r5,#0
00030c  d008              BEQ      |L7.800|
;;;514    				outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT17);
00030e  4816              LDR      r0,|L7.872|
000310  6940              LDR      r0,[r0,#0x14]
000312  4914              LDR      r1,|L7.868|
000314  4008              ANDS     r0,r0,r1
000316  2101              MOVS     r1,#1
000318  0449              LSLS     r1,r1,#17
00031a  4308              ORRS     r0,r0,r1
00031c  4912              LDR      r1,|L7.872|
00031e  6148              STR      r0,[r1,#0x14]
                  |L7.800|
;;;515    			if (Fflag)
000320  2e00              CMP      r6,#0
000322  d008              BEQ      |L7.822|
;;;516    				outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT18);
000324  4810              LDR      r0,|L7.872|
000326  6940              LDR      r0,[r0,#0x14]
000328  490e              LDR      r1,|L7.868|
00032a  4008              ANDS     r0,r0,r1
00032c  2101              MOVS     r1,#1
00032e  0489              LSLS     r1,r1,#18
000330  4308              ORRS     r0,r0,r1
000332  490d              LDR      r1,|L7.872|
000334  6148              STR      r0,[r1,#0x14]
                  |L7.822|
;;;517    		    g_sDrvPWMBHandler.pfnCAP3CallBack = pfncallback;
000336  480d              LDR      r0,|L7.876|
000338  61c4              STR      r4,[r0,#0x1c]  ; g_sDrvPWMBHandler
;;;518    			break;				
00033a  bf00              NOP      
                  |L7.828|
00033c  bf00              NOP                            ;393
;;;519    	}							
;;;520    		
;;;521    	if (u8Timer & 0x04)
00033e  2004              MOVS     r0,#4
000340  4207              TST      r7,r0
000342  d003              BEQ      |L7.844|
;;;522    		NVIC_EnableIRQ(PWMB_IRQn);
000344  2007              MOVS     r0,#7
000346  f7fffffe          BL       NVIC_EnableIRQ
00034a  e002              B        |L7.850|
                  |L7.844|
;;;523    	else
;;;524    		NVIC_EnableIRQ(PWMA_IRQn);			 
00034c  2006              MOVS     r0,#6
00034e  f7fffffe          BL       NVIC_EnableIRQ
                  |L7.850|
;;;525    }
000352  bdfe              POP      {r1-r7,pc}
;;;526    
                          ENDP

                  |L7.852|
                          DCD      0x40040040
                  |L7.856|
                          DCD      g_sDrvPWMAHandler
                  |L7.860|
                          DCD      s_i32Option
                  |L7.864|
                          DCD      0x000f000f
                  |L7.868|
                          DCD      0xffefffef
                  |L7.872|
                          DCD      0x40140040
                  |L7.876|
                          DCD      g_sDrvPWMBHandler

                          AREA ||i.DrvPWM_GetCaptureIntStatus||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetCaptureIntStatus PROC
;;;841    /*---------------------------------------------------------------------------------------------------------*/
;;;842    int32_t DrvPWM_GetCaptureIntStatus(uint8_t u8Capture, uint8_t u8IntType)
000000  b500              PUSH     {lr}
;;;843    {	
000002  4602              MOV      r2,r0
;;;844    	int32_t status;
;;;845    
;;;846    	status = 0;	
000004  2000              MOVS     r0,#0
;;;847    
;;;848    	switch (u8Capture)
000006  4613              MOV      r3,r2
000008  3b10              SUBS     r3,r3,#0x10
00000a  f7fffffe          BL       __ARM_common_switch8
00000e  0805              DCB      0x08,0x05
000010  121f2c39          DCB      0x12,0x1f,0x2c,0x39
000014  4653606d          DCB      0x46,0x53,0x60,0x6d
;;;849    	{
;;;850    		case DRVPWM_CAP0:
;;;851    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR0.CRLRI0 : PWMA->CCR0.CFLRI0;
000018  2906              CMP      r1,#6
00001a  d104              BNE      |L8.38|
00001c  4b33              LDR      r3,|L8.236|
00001e  691b              LDR      r3,[r3,#0x10]
000020  065b              LSLS     r3,r3,#25
000022  0fdb              LSRS     r3,r3,#31
000024  e003              B        |L8.46|
                  |L8.38|
000026  4b31              LDR      r3,|L8.236|
000028  691b              LDR      r3,[r3,#0x10]
00002a  061b              LSLS     r3,r3,#24
00002c  0fdb              LSRS     r3,r3,#31
                  |L8.46|
00002e  4618              MOV      r0,r3
;;;852    			break;
000030  e05a              B        |L8.232|
;;;853    		case DRVPWM_CAP1:
;;;854    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR0.CRLRI1 : PWMA->CCR0.CFLRI1;
000032  2906              CMP      r1,#6
000034  d104              BNE      |L8.64|
000036  4b2d              LDR      r3,|L8.236|
000038  691b              LDR      r3,[r3,#0x10]
00003a  025b              LSLS     r3,r3,#9
00003c  0fdb              LSRS     r3,r3,#31
00003e  e003              B        |L8.72|
                  |L8.64|
000040  4b2a              LDR      r3,|L8.236|
000042  691b              LDR      r3,[r3,#0x10]
000044  021b              LSLS     r3,r3,#8
000046  0fdb              LSRS     r3,r3,#31
                  |L8.72|
000048  4618              MOV      r0,r3
;;;855    			break;
00004a  e04d              B        |L8.232|
;;;856    		case DRVPWM_CAP2:
;;;857    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR2.CRLRI2 : PWMA->CCR2.CFLRI2;
00004c  2906              CMP      r1,#6
00004e  d104              BNE      |L8.90|
000050  4b26              LDR      r3,|L8.236|
000052  695b              LDR      r3,[r3,#0x14]
000054  065b              LSLS     r3,r3,#25
000056  0fdb              LSRS     r3,r3,#31
000058  e003              B        |L8.98|
                  |L8.90|
00005a  4b24              LDR      r3,|L8.236|
00005c  695b              LDR      r3,[r3,#0x14]
00005e  061b              LSLS     r3,r3,#24
000060  0fdb              LSRS     r3,r3,#31
                  |L8.98|
000062  4618              MOV      r0,r3
;;;858    			break;																	  
000064  e040              B        |L8.232|
;;;859    		case DRVPWM_CAP3:
;;;860    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR2.CRLRI3 : PWMA->CCR2.CFLRI3;
000066  2906              CMP      r1,#6
000068  d104              BNE      |L8.116|
00006a  4b20              LDR      r3,|L8.236|
00006c  695b              LDR      r3,[r3,#0x14]
00006e  025b              LSLS     r3,r3,#9
000070  0fdb              LSRS     r3,r3,#31
000072  e003              B        |L8.124|
                  |L8.116|
000074  4b1d              LDR      r3,|L8.236|
000076  695b              LDR      r3,[r3,#0x14]
000078  021b              LSLS     r3,r3,#8
00007a  0fdb              LSRS     r3,r3,#31
                  |L8.124|
00007c  4618              MOV      r0,r3
;;;861    			break;
00007e  e033              B        |L8.232|
;;;862    		case DRVPWM_CAP4:
;;;863    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR0.CRLRI0 : PWMB->CCR0.CFLRI0;
000080  2906              CMP      r1,#6
000082  d104              BNE      |L8.142|
000084  4b1a              LDR      r3,|L8.240|
000086  691b              LDR      r3,[r3,#0x10]
000088  065b              LSLS     r3,r3,#25
00008a  0fdb              LSRS     r3,r3,#31
00008c  e003              B        |L8.150|
                  |L8.142|
00008e  4b18              LDR      r3,|L8.240|
000090  691b              LDR      r3,[r3,#0x10]
000092  061b              LSLS     r3,r3,#24
000094  0fdb              LSRS     r3,r3,#31
                  |L8.150|
000096  4618              MOV      r0,r3
;;;864    			break;
000098  e026              B        |L8.232|
;;;865    		case DRVPWM_CAP5:
;;;866    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR0.CRLRI1 : PWMB->CCR0.CFLRI1;
00009a  2906              CMP      r1,#6
00009c  d104              BNE      |L8.168|
00009e  4b14              LDR      r3,|L8.240|
0000a0  691b              LDR      r3,[r3,#0x10]
0000a2  025b              LSLS     r3,r3,#9
0000a4  0fdb              LSRS     r3,r3,#31
0000a6  e003              B        |L8.176|
                  |L8.168|
0000a8  4b11              LDR      r3,|L8.240|
0000aa  691b              LDR      r3,[r3,#0x10]
0000ac  021b              LSLS     r3,r3,#8
0000ae  0fdb              LSRS     r3,r3,#31
                  |L8.176|
0000b0  4618              MOV      r0,r3
;;;867    			break;
0000b2  e019              B        |L8.232|
;;;868    		case DRVPWM_CAP6:
;;;869    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR2.CRLRI2 : PWMB->CCR2.CFLRI2;
0000b4  2906              CMP      r1,#6
0000b6  d104              BNE      |L8.194|
0000b8  4b0d              LDR      r3,|L8.240|
0000ba  695b              LDR      r3,[r3,#0x14]
0000bc  065b              LSLS     r3,r3,#25
0000be  0fdb              LSRS     r3,r3,#31
0000c0  e003              B        |L8.202|
                  |L8.194|
0000c2  4b0b              LDR      r3,|L8.240|
0000c4  695b              LDR      r3,[r3,#0x14]
0000c6  061b              LSLS     r3,r3,#24
0000c8  0fdb              LSRS     r3,r3,#31
                  |L8.202|
0000ca  4618              MOV      r0,r3
;;;870    			break;																	  
0000cc  e00c              B        |L8.232|
;;;871    		case DRVPWM_CAP7:
;;;872    			status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR2.CRLRI3 : PWMB->CCR2.CFLRI3;
0000ce  2906              CMP      r1,#6
0000d0  d104              BNE      |L8.220|
0000d2  4b07              LDR      r3,|L8.240|
0000d4  695b              LDR      r3,[r3,#0x14]
0000d6  025b              LSLS     r3,r3,#9
0000d8  0fdb              LSRS     r3,r3,#31
0000da  e003              B        |L8.228|
                  |L8.220|
0000dc  4b04              LDR      r3,|L8.240|
0000de  695b              LDR      r3,[r3,#0x14]
0000e0  021b              LSLS     r3,r3,#8
0000e2  0fdb              LSRS     r3,r3,#31
                  |L8.228|
0000e4  4618              MOV      r0,r3
;;;873    			break;
0000e6  bf00              NOP      
                  |L8.232|
0000e8  bf00              NOP                            ;852
;;;874    	}
;;;875    	
;;;876    	return status;
;;;877    }
0000ea  bd00              POP      {pc}
;;;878    
                          ENDP

                  |L8.236|
                          DCD      0x40040040
                  |L8.240|
                          DCD      0x40140040

                          AREA ||i.DrvPWM_GetFallingCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetFallingCounter PROC
;;;811    /*---------------------------------------------------------------------------------------------------------*/
;;;812    uint16_t DrvPWM_GetFallingCounter(uint8_t u8Capture)
000000  4601              MOV      r1,r0
;;;813    {
;;;814    	uint32_t u32Reg = 0;
000002  2200              MOVS     r2,#0
;;;815    	
;;;816    	if (u8Capture >= DRVPWM_CAP4)
000004  2914              CMP      r1,#0x14
000006  db06              BLT      |L9.22|
;;;817    	{
;;;818    		u32Reg = *((__IO uint32_t *) (PWMB_CFLR0 + ((u8Capture - DRVPWM_CAP4) << 3)));
000008  4608              MOV      r0,r1
00000a  3814              SUBS     r0,r0,#0x14
00000c  00c0              LSLS     r0,r0,#3
00000e  4b05              LDR      r3,|L9.36|
000010  18c0              ADDS     r0,r0,r3
000012  69c2              LDR      r2,[r0,#0x1c]
000014  e004              B        |L9.32|
                  |L9.22|
;;;819    	}
;;;820    	else
;;;821    	{
;;;822    		u32Reg = *((__IO uint32_t *) (PWMA_CFLR0 + ((u8Capture & 0x7) << 3)));	
000016  0748              LSLS     r0,r1,#29
000018  0e80              LSRS     r0,r0,#26
00001a  4b03              LDR      r3,|L9.40|
00001c  18c0              ADDS     r0,r0,r3
00001e  69c2              LDR      r2,[r0,#0x1c]
                  |L9.32|
;;;823    	}
;;;824    
;;;825    	return u32Reg;
000020  b290              UXTH     r0,r2
;;;826    }
000022  4770              BX       lr
;;;827    
                          ENDP

                  |L9.36|
                          DCD      0x40140040
                  |L9.40|
                          DCD      0x40040040

                          AREA ||i.DrvPWM_GetIntFlag||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetIntFlag PROC
;;;718    /*---------------------------------------------------------------------------------------------------------*/
;;;719    int32_t DrvPWM_GetIntFlag(uint8_t u8Timer)
000000  b510              PUSH     {r4,lr}
;;;720    {
000002  4601              MOV      r1,r0
;;;721    	int32_t status = 0;
000004  2000              MOVS     r0,#0
;;;722    	
;;;723    	switch (u8Timer)
000006  460b              MOV      r3,r1
000008  f7fffffe          BL       __ARM_common_switch8
00000c  180d0e0f          DCB      0x18,0x0d,0x0e,0x0f
000010  101b1c1d          DCB      0x10,0x1b,0x1c,0x1d
000014  1e525252          DCB      0x1e,0x52,0x52,0x52
000018  52525252          DCB      0x52,0x52,0x52,0x52
00001c  522a2f34          DCB      0x52,0x2a,0x2f,0x34
000020  393e4348          DCB      0x39,0x3e,0x43,0x48
000024  4d52              DCB      0x4d,0x52
;;;724    	{
;;;725    		case DRVPWM_TIMER0:
;;;726    		case DRVPWM_TIMER1:
000026  bf00              NOP      
;;;727    		case DRVPWM_TIMER2:
000028  bf00              NOP      
;;;728    		case DRVPWM_TIMER3:
00002a  bf00              NOP      
;;;729    			status = ( inp32(&PWMA->PIIR) & (1<<u8Timer) )? 1 : 0;
00002c  4a21              LDR      r2,|L10.180|
00002e  6852              LDR      r2,[r2,#4]
000030  2301              MOVS     r3,#1
000032  408b              LSLS     r3,r3,r1
000034  421a              TST      r2,r3
000036  d001              BEQ      |L10.60|
000038  2201              MOVS     r2,#1
00003a  e000              B        |L10.62|
                  |L10.60|
00003c  2200              MOVS     r2,#0
                  |L10.62|
00003e  4610              MOV      r0,r2
;;;730    			break;
000040  e036              B        |L10.176|
;;;731    		case DRVPWM_TIMER4:
;;;732    		case DRVPWM_TIMER5:
000042  bf00              NOP      
;;;733    		case DRVPWM_TIMER6:
000044  bf00              NOP      
;;;734    		case DRVPWM_TIMER7:
000046  bf00              NOP      
;;;735    			status = ( inp32(&PWMB->PIIR) & (1<<(u8Timer-DRVPWM_TIMER4)) )? 1 : 0;
000048  4a1b              LDR      r2,|L10.184|
00004a  6852              LDR      r2,[r2,#4]
00004c  1f0b              SUBS     r3,r1,#4
00004e  2401              MOVS     r4,#1
000050  409c              LSLS     r4,r4,r3
000052  4222              TST      r2,r4
000054  d001              BEQ      |L10.90|
000056  2201              MOVS     r2,#1
000058  e000              B        |L10.92|
                  |L10.90|
00005a  2200              MOVS     r2,#0
                  |L10.92|
00005c  4610              MOV      r0,r2
;;;736    			break;
00005e  e027              B        |L10.176|
;;;737    
;;;738    		case DRVPWM_CAP0:
;;;739    			status = PWMA->CCR0.CAPIF0;
000060  4a14              LDR      r2,|L10.180|
000062  6912              LDR      r2,[r2,#0x10]
000064  06d2              LSLS     r2,r2,#27
000066  0fd0              LSRS     r0,r2,#31
;;;740    			break;
000068  e022              B        |L10.176|
;;;741    		case DRVPWM_CAP1:
;;;742    			status = PWMA->CCR0.CAPIF1;				
00006a  4a12              LDR      r2,|L10.180|
00006c  6912              LDR      r2,[r2,#0x10]
00006e  02d2              LSLS     r2,r2,#11
000070  0fd0              LSRS     r0,r2,#31
;;;743    			break;
000072  e01d              B        |L10.176|
;;;744    		case DRVPWM_CAP2:
;;;745    			status = PWMA->CCR2.CAPIF2;
000074  4a0f              LDR      r2,|L10.180|
000076  6952              LDR      r2,[r2,#0x14]
000078  06d2              LSLS     r2,r2,#27
00007a  0fd0              LSRS     r0,r2,#31
;;;746    			break;																	  
00007c  e018              B        |L10.176|
;;;747    		case DRVPWM_CAP3:
;;;748    			status = PWMA->CCR2.CAPIF3;
00007e  4a0d              LDR      r2,|L10.180|
000080  6952              LDR      r2,[r2,#0x14]
000082  02d2              LSLS     r2,r2,#11
000084  0fd0              LSRS     r0,r2,#31
;;;749    			break;
000086  e013              B        |L10.176|
;;;750    		case DRVPWM_CAP4:
;;;751    			status = PWMB->CCR0.CAPIF0;
000088  4a0b              LDR      r2,|L10.184|
00008a  6912              LDR      r2,[r2,#0x10]
00008c  06d2              LSLS     r2,r2,#27
00008e  0fd0              LSRS     r0,r2,#31
;;;752    			break;
000090  e00e              B        |L10.176|
;;;753    		case DRVPWM_CAP5:
;;;754    			status = PWMB->CCR0.CAPIF1;				
000092  4a09              LDR      r2,|L10.184|
000094  6912              LDR      r2,[r2,#0x10]
000096  02d2              LSLS     r2,r2,#11
000098  0fd0              LSRS     r0,r2,#31
;;;755    			break;
00009a  e009              B        |L10.176|
;;;756    		case DRVPWM_CAP6:
;;;757    			status = PWMB->CCR2.CAPIF2;
00009c  4a06              LDR      r2,|L10.184|
00009e  6952              LDR      r2,[r2,#0x14]
0000a0  06d2              LSLS     r2,r2,#27
0000a2  0fd0              LSRS     r0,r2,#31
;;;758    			break;																	  
0000a4  e004              B        |L10.176|
;;;759    		case DRVPWM_CAP7:
;;;760    			status = PWMB->CCR2.CAPIF3;
0000a6  4a04              LDR      r2,|L10.184|
0000a8  6952              LDR      r2,[r2,#0x14]
0000aa  02d2              LSLS     r2,r2,#11
0000ac  0fd0              LSRS     r0,r2,#31
;;;761    	 		break;
0000ae  bf00              NOP      
                  |L10.176|
0000b0  bf00              NOP                            ;730
;;;762    	}	
;;;763    
;;;764    	return status;		
;;;765    }
0000b2  bd10              POP      {r4,pc}
;;;766    
                          ENDP

                  |L10.180|
                          DCD      0x40040040
                  |L10.184|
                          DCD      0x40140040

                          AREA ||i.DrvPWM_GetRisingCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetRisingCounter PROC
;;;781    /*---------------------------------------------------------------------------------------------------------*/
;;;782    uint16_t DrvPWM_GetRisingCounter(uint8_t u8Capture)
000000  4601              MOV      r1,r0
;;;783    {
;;;784    	uint32_t u32Reg = 0;
000002  2200              MOVS     r2,#0
;;;785    	
;;;786    	if (u8Capture >= DRVPWM_CAP4)
000004  2914              CMP      r1,#0x14
000006  db06              BLT      |L11.22|
;;;787    	{
;;;788    		u32Reg = *((__IO uint32_t *) (PWMB_CRLR0 + ((u8Capture - DRVPWM_CAP4) << 3)));
000008  4608              MOV      r0,r1
00000a  3814              SUBS     r0,r0,#0x14
00000c  00c0              LSLS     r0,r0,#3
00000e  4b05              LDR      r3,|L11.36|
000010  18c0              ADDS     r0,r0,r3
000012  6982              LDR      r2,[r0,#0x18]
000014  e004              B        |L11.32|
                  |L11.22|
;;;789    	}
;;;790    	else
;;;791    	{
;;;792    		u32Reg = *((__IO uint32_t *) (PWMA_CRLR0 + ((u8Capture & 0x7) << 3)));	
000016  0748              LSLS     r0,r1,#29
000018  0e80              LSRS     r0,r0,#26
00001a  4b03              LDR      r3,|L11.40|
00001c  18c0              ADDS     r0,r0,r3
00001e  6982              LDR      r2,[r0,#0x18]
                  |L11.32|
;;;793    	}
;;;794    
;;;795    	return u32Reg;
000020  b290              UXTH     r0,r2
;;;796    }
000022  4770              BX       lr
;;;797    
                          ENDP

                  |L11.36|
                          DCD      0x40140040
                  |L11.40|
                          DCD      0x40040040

                          AREA ||i.DrvPWM_GetTimerCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetTimerCounter PROC
;;;343    /*---------------------------------------------------------------------------------------------------------*/
;;;344    uint32_t DrvPWM_GetTimerCounter(uint8_t u8Timer)
000000  4601              MOV      r1,r0
;;;345    {
;;;346    	uint32_t u32Reg = 0;
000002  bf00              NOP      
;;;347    	
;;;348    	u8Timer &= 0x0F;
000004  0709              LSLS     r1,r1,#28
000006  0f09              LSRS     r1,r1,#28
;;;349    	
;;;350    	if (u8Timer >= DRVPWM_TIMER4)
000008  2904              CMP      r1,#4
00000a  db06              BLT      |L12.26|
;;;351    	{
;;;352    		u32Reg = *((__IO uint32_t *) (PWMB_PDR0 + (u8Timer - DRVPWM_TIMER4) * 12));
00000c  1f0a              SUBS     r2,r1,#4
00000e  230c              MOVS     r3,#0xc
000010  435a              MULS     r2,r3,r2
000012  4b06              LDR      r3,|L12.44|
000014  18d2              ADDS     r2,r2,r3
000016  6950              LDR      r0,[r2,#0x14]
000018  e006              B        |L12.40|
                  |L12.26|
;;;353    	}
;;;354    	else
;;;355    	{
;;;356    		u32Reg = *((__IO uint32_t *) (PWMA_PDR0 + (u8Timer & 0x7) * 12));	
00001a  074a              LSLS     r2,r1,#29
00001c  0f52              LSRS     r2,r2,#29
00001e  230c              MOVS     r3,#0xc
000020  435a              MULS     r2,r3,r2
000022  4b03              LDR      r3,|L12.48|
000024  18d2              ADDS     r2,r2,r3
000026  6950              LDR      r0,[r2,#0x14]
                  |L12.40|
;;;357    	}
;;;358    
;;;359    	return u32Reg;
;;;360    }
000028  4770              BX       lr
;;;361    
                          ENDP

00002a  0000              DCW      0x0000
                  |L12.44|
                          DCD      0x40140000
                  |L12.48|
                          DCD      0x40040000

                          AREA ||i.DrvPWM_GetVersion||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetVersion PROC
;;;50     /*---------------------------------------------------------------------------------------------------------*/
;;;51     uint32_t DrvPWM_GetVersion(void)
000000  4800              LDR      r0,|L13.4|
;;;52     {
;;;53     	return DRVPWM_VERSION_NUM;
;;;54     }
000002  4770              BX       lr
;;;55     
                          ENDP

                  |L13.4|
                          DCD      0x00010202

                          AREA ||i.DrvPWM_IsTimerEnabled||, CODE, READONLY, ALIGN=2

                  DrvPWM_IsTimerEnabled PROC
;;;278    /*---------------------------------------------------------------------------------------------------------*/
;;;279    int32_t DrvPWM_IsTimerEnabled(uint8_t u8Timer)
000000  b510              PUSH     {r4,lr}
;;;280    {
000002  4601              MOV      r1,r0
;;;281    	int32_t status;
;;;282    
;;;283    	status = 0;
000004  2000              MOVS     r0,#0
;;;284    	
;;;285    	switch (u8Timer)
000006  460b              MOV      r3,r1
000008  f7fffffe          BL       __ARM_common_switch8
00000c  08050607          DCB      0x08,0x05,0x06,0x07
000010  08141516          DCB      0x08,0x14,0x15,0x16
000014  1724              DCB      0x17,0x24
;;;286    	{
;;;287    		case DRVPWM_TIMER0:
;;;288    		case DRVPWM_TIMER1:
000016  bf00              NOP      
;;;289    		case DRVPWM_TIMER2:
000018  bf00              NOP      
;;;290    		case DRVPWM_TIMER3:
00001a  bf00              NOP      
;;;291    			status = ( inp32(&PWMA->PCR) & (1 << (u8Timer<<3) ) )? 1 : 0;
00001c  4a0e              LDR      r2,|L14.88|
00001e  6892              LDR      r2,[r2,#8]
000020  00cc              LSLS     r4,r1,#3
000022  2301              MOVS     r3,#1
000024  40a3              LSLS     r3,r3,r4
000026  421a              TST      r2,r3
000028  d001              BEQ      |L14.46|
00002a  2201              MOVS     r2,#1
00002c  e000              B        |L14.48|
                  |L14.46|
00002e  2200              MOVS     r2,#0
                  |L14.48|
000030  4610              MOV      r0,r2
;;;292    			break;		
000032  e00f              B        |L14.84|
;;;293    		case DRVPWM_TIMER4:
;;;294    		case DRVPWM_TIMER5:
000034  bf00              NOP      
;;;295    		case DRVPWM_TIMER6:
000036  bf00              NOP      
;;;296    		case DRVPWM_TIMER7:
000038  bf00              NOP      
;;;297    			status = ( inp32(&PWMB->PCR) & (1 << ((u8Timer-DRVPWM_TIMER4)<<3) ) )? 1 : 0;
00003a  4a08              LDR      r2,|L14.92|
00003c  6892              LDR      r2,[r2,#8]
00003e  1f0b              SUBS     r3,r1,#4
000040  00dc              LSLS     r4,r3,#3
000042  2301              MOVS     r3,#1
000044  40a3              LSLS     r3,r3,r4
000046  421a              TST      r2,r3
000048  d001              BEQ      |L14.78|
00004a  2201              MOVS     r2,#1
00004c  e000              B        |L14.80|
                  |L14.78|
00004e  2200              MOVS     r2,#0
                  |L14.80|
000050  4610              MOV      r0,r2
;;;298    			break;	
000052  bf00              NOP      
                  |L14.84|
000054  bf00              NOP                            ;292
;;;299    	}
;;;300    	return status;
;;;301    }
000056  bd10              POP      {r4,pc}
;;;302    
                          ENDP

                  |L14.88|
                          DCD      0x40040000
                  |L14.92|
                          DCD      0x40140000

                          AREA ||i.DrvPWM_Open||, CODE, READONLY, ALIGN=2

                  DrvPWM_Open PROC
;;;960    /*---------------------------------------------------------------------------------------------------------*/
;;;961    void DrvPWM_Open(void)
000000  480c              LDR      r0,|L15.52|
;;;962    { 
;;;963    	outp32(&SYSCLK->APBCLK, inp32(&SYSCLK->APBCLK) | 0x00F00000);
000002  6880              LDR      r0,[r0,#8]
000004  210f              MOVS     r1,#0xf
000006  0509              LSLS     r1,r1,#20
000008  4308              ORRS     r0,r0,r1
00000a  490a              LDR      r1,|L15.52|
00000c  6088              STR      r0,[r1,#8]
;;;964    	outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) | 0x00300000);
00000e  2005              MOVS     r0,#5
000010  0700              LSLS     r0,r0,#28
000012  68c0              LDR      r0,[r0,#0xc]
000014  2103              MOVS     r1,#3
000016  0509              LSLS     r1,r1,#20
000018  4308              ORRS     r0,r0,r1
00001a  2105              MOVS     r1,#5
00001c  0709              LSLS     r1,r1,#28
00001e  60c8              STR      r0,[r1,#0xc]
;;;965    	outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) & ~0x00300000);
000020  4608              MOV      r0,r1
000022  68c0              LDR      r0,[r0,#0xc]
000024  2103              MOVS     r1,#3
000026  0509              LSLS     r1,r1,#20
000028  4388              BICS     r0,r0,r1
00002a  2105              MOVS     r1,#5
00002c  0709              LSLS     r1,r1,#28
00002e  60c8              STR      r0,[r1,#0xc]
;;;966    }
000030  4770              BX       lr
;;;967    
                          ENDP

000032  0000              DCW      0x0000
                  |L15.52|
                          DCD      0x50000200

                          AREA ||i.DrvPWM_SelectClearLatchFlagOption||, CODE, READONLY, ALIGN=2

                  DrvPWM_SelectClearLatchFlagOption PROC
;;;1564   /*---------------------------------------------------------------------------------------------------------*/
;;;1565   int32_t DrvPWM_SelectClearLatchFlagOption(int32_t i32option)
000000  4601              MOV      r1,r0
;;;1566   {
;;;1567   	PWMA->PBCR.BCn = 0;
000002  480d              LDR      r0,|L16.56|
000004  6bc0              LDR      r0,[r0,#0x3c]
000006  0840              LSRS     r0,r0,#1
000008  0040              LSLS     r0,r0,#1
00000a  4a0b              LDR      r2,|L16.56|
00000c  63d0              STR      r0,[r2,#0x3c]
;;;1568   	if (PWMA->PBCR.BCn)
00000e  4610              MOV      r0,r2
000010  6bc0              LDR      r0,[r0,#0x3c]
000012  07c0              LSLS     r0,r0,#31
000014  0fc0              LSRS     r0,r0,#31
000016  d001              BEQ      |L16.28|
;;;1569   	{
;;;1570   		return E_DRVPWM_ERR_NO_SUPPORT;
000018  4808              LDR      r0,|L16.60|
                  |L16.26|
;;;1571   	}
;;;1572   	else
;;;1573   	{
;;;1574   	    PWMA->PBCR.BCn = i32option;
;;;1575   	    s_i32Option = i32option;		
;;;1576   		return 0;
;;;1577   	}
;;;1578   }
00001a  4770              BX       lr
                  |L16.28|
00001c  4806              LDR      r0,|L16.56|
00001e  6bc0              LDR      r0,[r0,#0x3c]         ;1574
000020  0840              LSRS     r0,r0,#1              ;1574
000022  0040              LSLS     r0,r0,#1              ;1574
000024  07ca              LSLS     r2,r1,#31             ;1574
000026  0fd2              LSRS     r2,r2,#31             ;1574
000028  4310              ORRS     r0,r0,r2              ;1574
00002a  4a03              LDR      r2,|L16.56|
00002c  63d0              STR      r0,[r2,#0x3c]         ;1574
00002e  4804              LDR      r0,|L16.64|
000030  6001              STR      r1,[r0,#0]            ;1575  ; s_i32Option
000032  2000              MOVS     r0,#0                 ;1576
000034  e7f1              B        |L16.26|
;;;1579   
                          ENDP

000036  0000              DCW      0x0000
                  |L16.56|
                          DCD      0x40040000
                  |L16.60|
                          DCD      0xffff9102
                  |L16.64|
                          DCD      s_i32Option

                          AREA ||i.DrvPWM_SelectClockSource||, CODE, READONLY, ALIGN=2

                  DrvPWM_SelectClockSource PROC
;;;1525   /*---------------------------------------------------------------------------------------------------------*/
;;;1526   void DrvPWM_SelectClockSource(uint8_t u8Timer, uint8_t u8ClockSourceSelector)
000000  b510              PUSH     {r4,lr}
;;;1527   {
;;;1528   	switch (u8Timer & 0x07)
000002  0743              LSLS     r3,r0,#29
000004  0f5b              LSRS     r3,r3,#29
000006  f7fffffe          BL       __ARM_common_switch8
00000a  0805              DCB      0x08,0x05
00000c  0613141f          DCB      0x06,0x13,0x14,0x1f
000010  202b2c37          DCB      0x20,0x2b,0x2c,0x37
;;;1529   	{
;;;1530   		case DRVPWM_TIMER0:
;;;1531   		case DRVPWM_TIMER1:
000014  bf00              NOP      
;;;1532   			SYSCLK->CLKSEL1.PWM01_S = u8ClockSourceSelector;				
000016  4a19              LDR      r2,|L17.124|
000018  6952              LDR      r2,[r2,#0x14]
00001a  2303              MOVS     r3,#3
00001c  071b              LSLS     r3,r3,#28
00001e  439a              BICS     r2,r2,r3
000020  070b              LSLS     r3,r1,#28
000022  2403              MOVS     r4,#3
000024  0724              LSLS     r4,r4,#28
000026  4023              ANDS     r3,r3,r4
000028  431a              ORRS     r2,r2,r3
00002a  4b14              LDR      r3,|L17.124|
00002c  615a              STR      r2,[r3,#0x14]
;;;1533   			break;
00002e  e023              B        |L17.120|
;;;1534   		case DRVPWM_TIMER2:
;;;1535   		case DRVPWM_TIMER3:
000030  bf00              NOP      
;;;1536   			SYSCLK->CLKSEL1.PWM23_S = u8ClockSourceSelector;
000032  4a12              LDR      r2,|L17.124|
000034  6952              LDR      r2,[r2,#0x14]
000036  0092              LSLS     r2,r2,#2
000038  0892              LSRS     r2,r2,#2
00003a  078b              LSLS     r3,r1,#30
00003c  0f9b              LSRS     r3,r3,#30
00003e  079b              LSLS     r3,r3,#30
000040  431a              ORRS     r2,r2,r3
000042  4b0e              LDR      r3,|L17.124|
000044  615a              STR      r2,[r3,#0x14]
;;;1537   			break;		
000046  e017              B        |L17.120|
;;;1538   		case DRVPWM_TIMER4:
;;;1539   		case DRVPWM_TIMER5:
000048  bf00              NOP      
;;;1540   			SYSCLK->CLKSEL2.PWM45_S = u8ClockSourceSelector;				
00004a  4a0c              LDR      r2,|L17.124|
00004c  69d2              LDR      r2,[r2,#0x1c]
00004e  2330              MOVS     r3,#0x30
000050  439a              BICS     r2,r2,r3
000052  010b              LSLS     r3,r1,#4
000054  2430              MOVS     r4,#0x30
000056  4023              ANDS     r3,r3,r4
000058  431a              ORRS     r2,r2,r3
00005a  4b08              LDR      r3,|L17.124|
00005c  61da              STR      r2,[r3,#0x1c]
;;;1541   			break;
00005e  e00b              B        |L17.120|
;;;1542   		case DRVPWM_TIMER6:
;;;1543   		case DRVPWM_TIMER7:
000060  bf00              NOP      
;;;1544   			SYSCLK->CLKSEL2.PWM67_S = u8ClockSourceSelector;
000062  4a06              LDR      r2,|L17.124|
000064  69d2              LDR      r2,[r2,#0x1c]
000066  23c0              MOVS     r3,#0xc0
000068  439a              BICS     r2,r2,r3
00006a  018b              LSLS     r3,r1,#6
00006c  24c0              MOVS     r4,#0xc0
00006e  4023              ANDS     r3,r3,r4
000070  431a              ORRS     r2,r2,r3
000072  4b02              LDR      r3,|L17.124|
000074  61da              STR      r2,[r3,#0x1c]
;;;1545   			break;	
000076  bf00              NOP      
                  |L17.120|
000078  bf00              NOP                            ;1533
;;;1546   	}
;;;1547   }
00007a  bd10              POP      {r4,pc}
;;;1548   
                          ENDP

                  |L17.124|
                          DCD      0x50000200

                          AREA ||i.DrvPWM_SetTimerClk||, CODE, READONLY, ALIGN=2

                  DrvPWM_SetTimerClk PROC
;;;1148   /*---------------------------------------------------------------------------------------------------------*/
;;;1149   uint32_t DrvPWM_SetTimerClk(uint8_t u8Timer, S_DRVPWM_TIME_DATA_T *sPt)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1150   {
000002  b089              SUB      sp,sp,#0x24
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;1151   	uint32_t 	u32Frequency;
;;;1152   	uint32_t	u32Freqout;
;;;1153   	uint16_t	u16Duty, u16cnrData, u16cmrData;
;;;1154   	uint8_t	    u8EngineClk = 0;
000008  2000              MOVS     r0,#0
00000a  9003              STR      r0,[sp,#0xc]
;;;1155   		
;;;1156   	switch (u8Timer & 0x07)
00000c  0763              LSLS     r3,r4,#29
00000e  0f5b              LSRS     r3,r3,#29
000010  f7fffffe          BL       __ARM_common_switch8
000014  0805060c          DCB      0x08,0x05,0x06,0x0c
000018  0d121319          DCB      0x0d,0x12,0x13,0x19
00001c  1a20              DCB      0x1a,0x20
;;;1157   	{
;;;1158   		case DRVPWM_TIMER0:
;;;1159   		case DRVPWM_TIMER1:
00001e  bf00              NOP      
;;;1160   			u8EngineClk = SYSCLK->CLKSEL1.PWM01_S;				
000020  48fc              LDR      r0,|L18.1044|
000022  6940              LDR      r0,[r0,#0x14]
000024  0080              LSLS     r0,r0,#2
000026  0f80              LSRS     r0,r0,#30
000028  9003              STR      r0,[sp,#0xc]
;;;1161   			break;
00002a  e013              B        |L18.84|
;;;1162   		case DRVPWM_TIMER2:
;;;1163   		case DRVPWM_TIMER3:
00002c  bf00              NOP      
;;;1164   			u8EngineClk = SYSCLK->CLKSEL1.PWM23_S;
00002e  48f9              LDR      r0,|L18.1044|
000030  6940              LDR      r0,[r0,#0x14]
000032  0f80              LSRS     r0,r0,#30
000034  9003              STR      r0,[sp,#0xc]
;;;1165   			break;		
000036  e00d              B        |L18.84|
;;;1166   		case DRVPWM_TIMER4:
;;;1167   		case DRVPWM_TIMER5:
000038  bf00              NOP      
;;;1168   			u8EngineClk = SYSCLK->CLKSEL2.PWM45_S;				
00003a  48f6              LDR      r0,|L18.1044|
00003c  69c0              LDR      r0,[r0,#0x1c]
00003e  0680              LSLS     r0,r0,#26
000040  0f80              LSRS     r0,r0,#30
000042  9003              STR      r0,[sp,#0xc]
;;;1169   			break;
000044  e006              B        |L18.84|
;;;1170   		case DRVPWM_TIMER6:
;;;1171   		case DRVPWM_TIMER7:
000046  bf00              NOP      
;;;1172   			u8EngineClk = SYSCLK->CLKSEL2.PWM67_S;
000048  48f2              LDR      r0,|L18.1044|
00004a  69c0              LDR      r0,[r0,#0x1c]
00004c  0600              LSLS     r0,r0,#24
00004e  0f80              LSRS     r0,r0,#30
000050  9003              STR      r0,[sp,#0xc]
;;;1173   			break;	
000052  bf00              NOP      
                  |L18.84|
000054  bf00              NOP                            ;1161
;;;1174   	}
;;;1175   
;;;1176   
;;;1177   	if (u8EngineClk == 0)		 /* external 12MHz crystal clock	*/
000056  9803              LDR      r0,[sp,#0xc]
000058  2800              CMP      r0,#0
00005a  d102              BNE      |L18.98|
;;;1178   	{
;;;1179   		u32Freqout = __XTAL;	
00005c  48ee              LDR      r0,|L18.1048|
00005e  9007              STR      r0,[sp,#0x1c]
000060  e00e              B        |L18.128|
                  |L18.98|
;;;1180   	}
;;;1181   	else if(u8EngineClk == 1)    /* external 32KHz crystal clock */
000062  9803              LDR      r0,[sp,#0xc]
000064  2801              CMP      r0,#1
000066  d102              BNE      |L18.110|
;;;1182   	{
;;;1183   		u32Freqout = __RTC_XTAL;
000068  03c0              LSLS     r0,r0,#15
00006a  9007              STR      r0,[sp,#0x1c]
00006c  e008              B        |L18.128|
                  |L18.110|
;;;1184   	}
;;;1185   	else if(u8EngineClk == 2)	 /* HCLK clock */
00006e  9803              LDR      r0,[sp,#0xc]
000070  2802              CMP      r0,#2
000072  d103              BNE      |L18.124|
;;;1186   	{
;;;1187   		u32Freqout = SystemCoreClock;
000074  48e9              LDR      r0,|L18.1052|
000076  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000078  9007              STR      r0,[sp,#0x1c]
00007a  e001              B        |L18.128|
                  |L18.124|
;;;1188   	}
;;;1189   	else						 /* internal 22MHz oscillator clock */
;;;1190   	{
;;;1191   	 	u32Freqout = __IRC22M;	
00007c  48e8              LDR      r0,|L18.1056|
00007e  9007              STR      r0,[sp,#0x1c]
                  |L18.128|
;;;1192   	}
;;;1193   
;;;1194   	switch (u8Timer)
000080  4623              MOV      r3,r4
000082  f7fffffe          BL       __ARM_common_switch8
000086  180d              DCB      0x18,0x0d
000088  0e0f1025          DCB      0x0e,0x0f,0x10,0x25
00008c  262728d8          DCB      0x26,0x27,0x28,0xd8
000090  d8d8d8d8          DCB      0xd8,0xd8,0xd8,0xd8
000094  d8d8d83e          DCB      0xd8,0xd8,0xd8,0x3e
000098  58748eaa          DCB      0x58,0x74,0x8e,0xaa
00009c  b5c1ccd8          DCB      0xb5,0xc1,0xcc,0xd8
;;;1195   	{
;;;1196   		case DRVPWM_TIMER0:
;;;1197   		case DRVPWM_TIMER1:
0000a0  bf00              NOP      
;;;1198   		case DRVPWM_TIMER2:
0000a2  bf00              NOP      
;;;1199   		case DRVPWM_TIMER3:
0000a4  bf00              NOP      
;;;1200   			outp32(&PWMA->PCR, (inp32(&PWMA->PCR) & ~(1 << (((u8Timer ) << 3) + 2) )) |(sPt->i32Inverter?(1 << ((u8Timer << 3) + 2)):0));
0000a6  48df              LDR      r0,|L18.1060|
0000a8  6882              LDR      r2,[r0,#8]
0000aa  00e0              LSLS     r0,r4,#3
0000ac  1c80              ADDS     r0,r0,#2
0000ae  2101              MOVS     r1,#1
0000b0  4081              LSLS     r1,r1,r0
0000b2  4610              MOV      r0,r2
0000b4  4388              BICS     r0,r0,r1
0000b6  68e9              LDR      r1,[r5,#0xc]
0000b8  2900              CMP      r1,#0
0000ba  d004              BEQ      |L18.198|
0000bc  00e2              LSLS     r2,r4,#3
0000be  1c92              ADDS     r2,r2,#2
0000c0  2101              MOVS     r1,#1
0000c2  4091              LSLS     r1,r1,r2
0000c4  e000              B        |L18.200|
                  |L18.198|
0000c6  2100              MOVS     r1,#0
                  |L18.200|
0000c8  4308              ORRS     r0,r0,r1
0000ca  49d6              LDR      r1,|L18.1060|
0000cc  6088              STR      r0,[r1,#8]
;;;1201   			break;
0000ce  e0b2              B        |L18.566|
;;;1202   		case DRVPWM_TIMER4:
;;;1203   		case DRVPWM_TIMER5:
0000d0  bf00              NOP      
;;;1204   		case DRVPWM_TIMER6:
0000d2  bf00              NOP      
;;;1205   		case DRVPWM_TIMER7:
0000d4  bf00              NOP      
;;;1206   			outp32(&PWMB->PCR, (inp32(&PWMB->PCR) & ~(1 << (((u8Timer-DRVPWM_TIMER4) << 3) + 2) )) |(sPt->i32Inverter?(1 << (((u8Timer-DRVPWM_TIMER4) << 3) + 2)):0));
0000d6  48d4              LDR      r0,|L18.1064|
0000d8  6880              LDR      r0,[r0,#8]
0000da  1f21              SUBS     r1,r4,#4
0000dc  00ca              LSLS     r2,r1,#3
0000de  1c92              ADDS     r2,r2,#2
0000e0  2101              MOVS     r1,#1
0000e2  4091              LSLS     r1,r1,r2
0000e4  4388              BICS     r0,r0,r1
0000e6  68e9              LDR      r1,[r5,#0xc]
0000e8  2900              CMP      r1,#0
0000ea  d005              BEQ      |L18.248|
0000ec  1f21              SUBS     r1,r4,#4
0000ee  00ca              LSLS     r2,r1,#3
0000f0  1c92              ADDS     r2,r2,#2
0000f2  2101              MOVS     r1,#1
0000f4  4091              LSLS     r1,r1,r2
0000f6  e000              B        |L18.250|
                  |L18.248|
0000f8  2100              MOVS     r1,#0
                  |L18.250|
0000fa  4308              ORRS     r0,r0,r1
0000fc  49ca              LDR      r1,|L18.1064|
0000fe  6088              STR      r0,[r1,#8]
;;;1207   			break;
000100  e099              B        |L18.566|
;;;1208   
;;;1209   		case DRVPWM_CAP0:
;;;1210   			if (s_i32Option)
000102  48ca              LDR      r0,|L18.1068|
000104  6800              LDR      r0,[r0,#0]  ; s_i32Option
000106  2800              CMP      r0,#0
000108  d00a              BEQ      |L18.288|
;;;1211   				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT0);
00010a  48c6              LDR      r0,|L18.1060|
00010c  3040              ADDS     r0,r0,#0x40
00010e  6900              LDR      r0,[r0,#0x10]
000110  49c7              LDR      r1,|L18.1072|
000112  4008              ANDS     r0,r0,r1
000114  2101              MOVS     r1,#1
000116  4308              ORRS     r0,r0,r1
000118  49c2              LDR      r1,|L18.1060|
00011a  3140              ADDS     r1,r1,#0x40
00011c  6108              STR      r0,[r1,#0x10]
00011e  e009              B        |L18.308|
                  |L18.288|
;;;1212   			else
;;;1213   				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT0);	
000120  48c0              LDR      r0,|L18.1060|
000122  3040              ADDS     r0,r0,#0x40
000124  6900              LDR      r0,[r0,#0x10]
000126  49c3              LDR      r1,|L18.1076|
000128  4008              ANDS     r0,r0,r1
00012a  2101              MOVS     r1,#1
00012c  4308              ORRS     r0,r0,r1
00012e  49bd              LDR      r1,|L18.1060|
000130  3140              ADDS     r1,r1,#0x40
000132  6108              STR      r0,[r1,#0x10]
                  |L18.308|
;;;1214   			break;
000134  e07f              B        |L18.566|
;;;1215   		case DRVPWM_CAP1:
;;;1216   			if (s_i32Option)
000136  48bd              LDR      r0,|L18.1068|
000138  6800              LDR      r0,[r0,#0]  ; s_i32Option
00013a  2800              CMP      r0,#0
00013c  d00b              BEQ      |L18.342|
;;;1217   				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT16);
00013e  48b9              LDR      r0,|L18.1060|
000140  3040              ADDS     r0,r0,#0x40
000142  6900              LDR      r0,[r0,#0x10]
000144  49ba              LDR      r1,|L18.1072|
000146  4008              ANDS     r0,r0,r1
000148  2101              MOVS     r1,#1
00014a  0409              LSLS     r1,r1,#16
00014c  4308              ORRS     r0,r0,r1
00014e  49b5              LDR      r1,|L18.1060|
000150  3140              ADDS     r1,r1,#0x40
000152  6108              STR      r0,[r1,#0x10]
000154  e00a              B        |L18.364|
                  |L18.342|
;;;1218   			else
;;;1219   				outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT16);	
000156  48b3              LDR      r0,|L18.1060|
000158  3040              ADDS     r0,r0,#0x40
00015a  6900              LDR      r0,[r0,#0x10]
00015c  49b5              LDR      r1,|L18.1076|
00015e  4008              ANDS     r0,r0,r1
000160  2101              MOVS     r1,#1
000162  0409              LSLS     r1,r1,#16
000164  4308              ORRS     r0,r0,r1
000166  49af              LDR      r1,|L18.1060|
000168  3140              ADDS     r1,r1,#0x40
00016a  6108              STR      r0,[r1,#0x10]
                  |L18.364|
;;;1220   			break;
00016c  e063              B        |L18.566|
;;;1221   		case DRVPWM_CAP2:
;;;1222   			if (s_i32Option)
00016e  48af              LDR      r0,|L18.1068|
000170  6800              LDR      r0,[r0,#0]  ; s_i32Option
000172  2800              CMP      r0,#0
000174  d00a              BEQ      |L18.396|
;;;1223   				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT0);
000176  48ab              LDR      r0,|L18.1060|
000178  3040              ADDS     r0,r0,#0x40
00017a  6940              LDR      r0,[r0,#0x14]
00017c  49ac              LDR      r1,|L18.1072|
00017e  4008              ANDS     r0,r0,r1
000180  2101              MOVS     r1,#1
000182  4308              ORRS     r0,r0,r1
000184  49a7              LDR      r1,|L18.1060|
000186  3140              ADDS     r1,r1,#0x40
000188  6148              STR      r0,[r1,#0x14]
00018a  e009              B        |L18.416|
                  |L18.396|
;;;1224   			else
;;;1225   				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT0);	
00018c  48a5              LDR      r0,|L18.1060|
00018e  3040              ADDS     r0,r0,#0x40
000190  6940              LDR      r0,[r0,#0x14]
000192  49a8              LDR      r1,|L18.1076|
000194  4008              ANDS     r0,r0,r1
000196  2101              MOVS     r1,#1
000198  4308              ORRS     r0,r0,r1
00019a  49a2              LDR      r1,|L18.1060|
00019c  3140              ADDS     r1,r1,#0x40
00019e  6148              STR      r0,[r1,#0x14]
                  |L18.416|
;;;1226   			break;
0001a0  e049              B        |L18.566|
;;;1227   		case DRVPWM_CAP3:
;;;1228   			if (s_i32Option)
0001a2  48a2              LDR      r0,|L18.1068|
0001a4  6800              LDR      r0,[r0,#0]  ; s_i32Option
0001a6  2800              CMP      r0,#0
0001a8  d00b              BEQ      |L18.450|
;;;1229   				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT16);
0001aa  489e              LDR      r0,|L18.1060|
0001ac  3040              ADDS     r0,r0,#0x40
0001ae  6940              LDR      r0,[r0,#0x14]
0001b0  499f              LDR      r1,|L18.1072|
0001b2  4008              ANDS     r0,r0,r1
0001b4  2101              MOVS     r1,#1
0001b6  0409              LSLS     r1,r1,#16
0001b8  4308              ORRS     r0,r0,r1
0001ba  499a              LDR      r1,|L18.1060|
0001bc  3140              ADDS     r1,r1,#0x40
0001be  6148              STR      r0,[r1,#0x14]
0001c0  e00a              B        |L18.472|
                  |L18.450|
;;;1230   			else
;;;1231   				outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT16);
0001c2  4898              LDR      r0,|L18.1060|
0001c4  3040              ADDS     r0,r0,#0x40
0001c6  6940              LDR      r0,[r0,#0x14]
0001c8  499a              LDR      r1,|L18.1076|
0001ca  4008              ANDS     r0,r0,r1
0001cc  2101              MOVS     r1,#1
0001ce  0409              LSLS     r1,r1,#16
0001d0  4308              ORRS     r0,r0,r1
0001d2  4994              LDR      r1,|L18.1060|
0001d4  3140              ADDS     r1,r1,#0x40
0001d6  6148              STR      r0,[r1,#0x14]
                  |L18.472|
;;;1232   			break;
0001d8  e02d              B        |L18.566|
;;;1233   		case DRVPWM_CAP4:
;;;1234   			outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT0);
0001da  4893              LDR      r0,|L18.1064|
0001dc  3040              ADDS     r0,r0,#0x40
0001de  6900              LDR      r0,[r0,#0x10]
0001e0  4994              LDR      r1,|L18.1076|
0001e2  4008              ANDS     r0,r0,r1
0001e4  2101              MOVS     r1,#1
0001e6  4308              ORRS     r0,r0,r1
0001e8  498f              LDR      r1,|L18.1064|
0001ea  3140              ADDS     r1,r1,#0x40
0001ec  6108              STR      r0,[r1,#0x10]
;;;1235   			break;
0001ee  e022              B        |L18.566|
;;;1236   		case DRVPWM_CAP5:
;;;1237   			outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT16);
0001f0  488d              LDR      r0,|L18.1064|
0001f2  3040              ADDS     r0,r0,#0x40
0001f4  6900              LDR      r0,[r0,#0x10]
0001f6  498f              LDR      r1,|L18.1076|
0001f8  4008              ANDS     r0,r0,r1
0001fa  2101              MOVS     r1,#1
0001fc  0409              LSLS     r1,r1,#16
0001fe  4308              ORRS     r0,r0,r1
000200  4989              LDR      r1,|L18.1064|
000202  3140              ADDS     r1,r1,#0x40
000204  6108              STR      r0,[r1,#0x10]
;;;1238   			break;
000206  e016              B        |L18.566|
;;;1239   		case DRVPWM_CAP6:
;;;1240   			outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT0);
000208  4887              LDR      r0,|L18.1064|
00020a  3040              ADDS     r0,r0,#0x40
00020c  6940              LDR      r0,[r0,#0x14]
00020e  4989              LDR      r1,|L18.1076|
000210  4008              ANDS     r0,r0,r1
000212  2101              MOVS     r1,#1
000214  4308              ORRS     r0,r0,r1
000216  4984              LDR      r1,|L18.1064|
000218  3140              ADDS     r1,r1,#0x40
00021a  6148              STR      r0,[r1,#0x14]
;;;1241   			break;
00021c  e00b              B        |L18.566|
;;;1242   		case DRVPWM_CAP7:
;;;1243   			outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT16);
00021e  4882              LDR      r0,|L18.1064|
000220  3040              ADDS     r0,r0,#0x40
000222  6940              LDR      r0,[r0,#0x14]
000224  4983              LDR      r1,|L18.1076|
000226  4008              ANDS     r0,r0,r1
000228  2101              MOVS     r1,#1
00022a  0409              LSLS     r1,r1,#16
00022c  4308              ORRS     r0,r0,r1
00022e  497e              LDR      r1,|L18.1064|
000230  3140              ADDS     r1,r1,#0x40
000232  6148              STR      r0,[r1,#0x14]
;;;1244   			break;
000234  bf00              NOP      
                  |L18.566|
000236  bf00              NOP                            ;1201
;;;1245   	} 
;;;1246   
;;;1247   	switch (u8Timer & 0x07)
000238  0763              LSLS     r3,r4,#29
00023a  0f5b              LSRS     r3,r3,#29
00023c  f7fffffe          BL       __ARM_common_switch8
000240  08050607          DCB      0x08,0x05,0x06,0x07
000244  081e1f20          DCB      0x08,0x1e,0x1f,0x20
000248  213c              DCB      0x21,0x3c
;;;1248   	{
;;;1249   		case DRVPWM_TIMER0:
;;;1250   		case DRVPWM_TIMER1:
00024a  bf00              NOP      
;;;1251   		case DRVPWM_TIMER2:
00024c  bf00              NOP      
;;;1252   		case DRVPWM_TIMER3:
00024e  bf00              NOP      
;;;1253   			outp32(&PWMA->PCR, (inp32(&PWMA->PCR) & ~(1 <<(((u8Timer & 0x07) << 3) + 3))) | ( sPt->u8Mode? (1 <<(((u8Timer & 0x07) << 3) + 3)):0));
000250  4874              LDR      r0,|L18.1060|
000252  6880              LDR      r0,[r0,#8]
000254  0761              LSLS     r1,r4,#29
000256  0e8a              LSRS     r2,r1,#26
000258  1cd2              ADDS     r2,r2,#3
00025a  2101              MOVS     r1,#1
00025c  4091              LSLS     r1,r1,r2
00025e  4388              BICS     r0,r0,r1
000260  7829              LDRB     r1,[r5,#0]
000262  2900              CMP      r1,#0
000264  d005              BEQ      |L18.626|
000266  0761              LSLS     r1,r4,#29
000268  0e8a              LSRS     r2,r1,#26
00026a  1cd2              ADDS     r2,r2,#3
00026c  2101              MOVS     r1,#1
00026e  4091              LSLS     r1,r1,r2
000270  e000              B        |L18.628|
                  |L18.626|
000272  2100              MOVS     r1,#0
                  |L18.628|
000274  4308              ORRS     r0,r0,r1
000276  496b              LDR      r1,|L18.1060|
000278  6088              STR      r0,[r1,#8]
;;;1254   			break;
00027a  e01d              B        |L18.696|
;;;1255   		case DRVPWM_TIMER4:
;;;1256   		case DRVPWM_TIMER5:
00027c  bf00              NOP      
;;;1257   		case DRVPWM_TIMER6:
00027e  bf00              NOP      
;;;1258   		case DRVPWM_TIMER7:
000280  bf00              NOP      
;;;1259   			outp32(&PWMB->PCR, (inp32(&PWMB->PCR) & ~(1 <<((((u8Timer & 0x07)-DRVPWM_TIMER4) << 3) + 3))) | ( sPt->u8Mode? (1 <<((((u8Timer & 0x07)-DRVPWM_TIMER4) << 3) + 3)):0));			
000282  4869              LDR      r0,|L18.1064|
000284  6882              LDR      r2,[r0,#8]
000286  0760              LSLS     r0,r4,#29
000288  0f40              LSRS     r0,r0,#29
00028a  1f00              SUBS     r0,r0,#4
00028c  00c0              LSLS     r0,r0,#3
00028e  1cc0              ADDS     r0,r0,#3
000290  2101              MOVS     r1,#1
000292  4081              LSLS     r1,r1,r0
000294  4610              MOV      r0,r2
000296  4388              BICS     r0,r0,r1
000298  7829              LDRB     r1,[r5,#0]
00029a  2900              CMP      r1,#0
00029c  d007              BEQ      |L18.686|
00029e  0761              LSLS     r1,r4,#29
0002a0  0f49              LSRS     r1,r1,#29
0002a2  1f09              SUBS     r1,r1,#4
0002a4  00ca              LSLS     r2,r1,#3
0002a6  1cd2              ADDS     r2,r2,#3
0002a8  2101              MOVS     r1,#1
0002aa  4091              LSLS     r1,r1,r2
0002ac  e000              B        |L18.688|
                  |L18.686|
0002ae  2100              MOVS     r1,#0
                  |L18.688|
0002b0  4308              ORRS     r0,r0,r1
0002b2  495d              LDR      r1,|L18.1064|
0002b4  6088              STR      r0,[r1,#8]
;;;1260   			break;
0002b6  bf00              NOP      
                  |L18.696|
0002b8  bf00              NOP                            ;1254
;;;1261   	} 
;;;1262   			
;;;1263   	
;;;1264   	if (sPt->u32Frequency == 0)
0002ba  6868              LDR      r0,[r5,#4]
0002bc  2800              CMP      r0,#0
0002be  d172              BNE      |L18.934|
;;;1265   	{	
;;;1266   		uint8_t	u8Divider = 1;
0002c0  2001              MOVS     r0,#1
0002c2  9002              STR      r0,[sp,#8]
;;;1267   		uint32_t u32duty;
;;;1268   		
;;;1269   		switch (u8Timer & 0x07)
0002c4  0763              LSLS     r3,r4,#29
0002c6  0f5b              LSRS     r3,r3,#29
0002c8  f7fffffe          BL       __ARM_common_switch8
0002cc  0805060f          DCB      0x08,0x05,0x06,0x0f
0002d0  101e1f28          DCB      0x10,0x1e,0x1f,0x28
0002d4  2937              DCB      0x29,0x37
;;;1270   		{
;;;1271   			case DRVPWM_TIMER0:
;;;1272   			case DRVPWM_TIMER1:
0002d6  bf00              NOP      
;;;1273   				PWMA->PPR.CP01 = sPt->u8PreScale;
0002d8  4852              LDR      r0,|L18.1060|
0002da  6800              LDR      r0,[r0,#0]
0002dc  0a00              LSRS     r0,r0,#8
0002de  0200              LSLS     r0,r0,#8
0002e0  78e9              LDRB     r1,[r5,#3]
0002e2  4308              ORRS     r0,r0,r1
0002e4  494f              LDR      r1,|L18.1060|
0002e6  6008              STR      r0,[r1,#0]
;;;1274   				break;
0002e8  e027              B        |L18.826|
;;;1275   			case DRVPWM_TIMER2:
;;;1276   			case DRVPWM_TIMER3:
0002ea  bf00              NOP      
;;;1277   				PWMA->PPR.CP23 = sPt->u8PreScale;
0002ec  484d              LDR      r0,|L18.1060|
0002ee  6800              LDR      r0,[r0,#0]
0002f0  21ff              MOVS     r1,#0xff
0002f2  0209              LSLS     r1,r1,#8
0002f4  4388              BICS     r0,r0,r1
0002f6  78e9              LDRB     r1,[r5,#3]
0002f8  0209              LSLS     r1,r1,#8
0002fa  22ff              MOVS     r2,#0xff
0002fc  0212              LSLS     r2,r2,#8
0002fe  4011              ANDS     r1,r1,r2
000300  4308              ORRS     r0,r0,r1
000302  4948              LDR      r1,|L18.1060|
000304  6008              STR      r0,[r1,#0]
;;;1278   				break;
000306  e018              B        |L18.826|
;;;1279   			case DRVPWM_TIMER4:
;;;1280   			case DRVPWM_TIMER5:
000308  bf00              NOP      
;;;1281   				PWMB->PPR.CP01 = sPt->u8PreScale;
00030a  4847              LDR      r0,|L18.1064|
00030c  6800              LDR      r0,[r0,#0]
00030e  0a00              LSRS     r0,r0,#8
000310  0200              LSLS     r0,r0,#8
000312  78e9              LDRB     r1,[r5,#3]
000314  4308              ORRS     r0,r0,r1
000316  4944              LDR      r1,|L18.1064|
000318  6008              STR      r0,[r1,#0]
;;;1282   				break;
00031a  e00e              B        |L18.826|
;;;1283   			case DRVPWM_TIMER6:
;;;1284   			case DRVPWM_TIMER7:
00031c  bf00              NOP      
;;;1285   				PWMB->PPR.CP23 = sPt->u8PreScale;
00031e  4842              LDR      r0,|L18.1064|
000320  6800              LDR      r0,[r0,#0]
000322  21ff              MOVS     r1,#0xff
000324  0209              LSLS     r1,r1,#8
000326  4388              BICS     r0,r0,r1
000328  78e9              LDRB     r1,[r5,#3]
00032a  0209              LSLS     r1,r1,#8
00032c  22ff              MOVS     r2,#0xff
00032e  0212              LSLS     r2,r2,#8
000330  4011              ANDS     r1,r1,r2
000332  4308              ORRS     r0,r0,r1
000334  493c              LDR      r1,|L18.1064|
000336  6008              STR      r0,[r1,#0]
;;;1286   				break;
000338  bf00              NOP      
                  |L18.826|
00033a  bf00              NOP                            ;1274
;;;1287   		} 
;;;1288   		
;;;1289   		u32duty = sPt->u32Duty * sPt->u8HighPulseRatio / 100 - 1;
00033c  786a              LDRB     r2,[r5,#1]
00033e  68a9              LDR      r1,[r5,#8]
000340  4351              MULS     r1,r2,r1
000342  4608              MOV      r0,r1
000344  2164              MOVS     r1,#0x64
000346  f7fffffe          BL       __aeabi_uidivmod
00034a  1e46              SUBS     r6,r0,#1
;;;1290   		
;;;1291   		switch (u8Timer & 0x07)
00034c  0763              LSLS     r3,r4,#29
00034e  0f5b              LSRS     r3,r3,#29
000350  f7fffffe          BL       __ARM_common_switch8
000354  08050607          DCB      0x08,0x05,0x06,0x07
000358  082a2b2c          DCB      0x08,0x2a,0x2b,0x2c
00035c  2d54              DCB      0x2d,0x54
;;;1292   		{
;;;1293   			case DRVPWM_TIMER0:
;;;1294   			case DRVPWM_TIMER1:
00035e  bf00              NOP      
;;;1295   			case DRVPWM_TIMER2:
000360  bf00              NOP      
;;;1296   			case DRVPWM_TIMER3:
000362  bf00              NOP      
;;;1297   				outp32(&PWMA->CSR, (inp32(&PWMA->CSR) & ~(0x7 << ((u8Timer & 0x07)<<2) )) | ((sPt->u8ClockSelector & 0x7) << ((u8Timer & 0x07)<<2)));	
000364  482f              LDR      r0,|L18.1060|
000366  6840              LDR      r0,[r0,#4]
000368  0761              LSLS     r1,r4,#29
00036a  0eca              LSRS     r2,r1,#27
00036c  2107              MOVS     r1,#7
00036e  4091              LSLS     r1,r1,r2
000370  4388              BICS     r0,r0,r1
000372  78a9              LDRB     r1,[r5,#2]
000374  0749              LSLS     r1,r1,#29
000376  0f49              LSRS     r1,r1,#29
000378  0762              LSLS     r2,r4,#29
00037a  0ed2              LSRS     r2,r2,#27
00037c  4091              LSLS     r1,r1,r2
00037e  4308              ORRS     r0,r0,r1
000380  4928              LDR      r1,|L18.1060|
000382  6048              STR      r0,[r1,#4]
;;;1298   				outp32(PWMA_CNR0 + (u8Timer & 0x07) * 12, (sPt->u32Duty - 1));
000384  68a8              LDR      r0,[r5,#8]
000386  1e40              SUBS     r0,r0,#1
000388  0761              LSLS     r1,r4,#29
00038a  0f49              LSRS     r1,r1,#29
00038c  220c              MOVS     r2,#0xc
00038e  4351              MULS     r1,r2,r1
000390  4a24              LDR      r2,|L18.1060|
000392  1889              ADDS     r1,r1,r2
000394  60c8              STR      r0,[r1,#0xc]
;;;1299   				outp32(PWMA_CMR0 + (u8Timer & 0x07) * 12, u32duty);						
000396  0760              LSLS     r0,r4,#29
000398  0f40              LSRS     r0,r0,#29
00039a  210c              MOVS     r1,#0xc
00039c  4348              MULS     r0,r1,r0
00039e  4611              MOV      r1,r2
0003a0  1840              ADDS     r0,r0,r1
0003a2  6106              STR      r6,[r0,#0x10]
;;;1300   				break;
0003a4  e02a              B        |L18.1020|
                  |L18.934|
0003a6  e063              B        |L18.1136|
;;;1301   			case DRVPWM_TIMER4:
;;;1302   			case DRVPWM_TIMER5:
0003a8  bf00              NOP      
;;;1303   			case DRVPWM_TIMER6:
0003aa  bf00              NOP      
;;;1304   			case DRVPWM_TIMER7:
0003ac  bf00              NOP      
;;;1305   				outp32(&PWMB->CSR, (inp32(&PWMB->CSR) & ~(0x7 << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2) )) | ((sPt->u8ClockSelector & 0x7) << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2)));	
0003ae  481e              LDR      r0,|L18.1064|
0003b0  6840              LDR      r0,[r0,#4]
0003b2  0761              LSLS     r1,r4,#29
0003b4  0f49              LSRS     r1,r1,#29
0003b6  1f09              SUBS     r1,r1,#4
0003b8  008a              LSLS     r2,r1,#2
0003ba  2107              MOVS     r1,#7
0003bc  4091              LSLS     r1,r1,r2
0003be  4388              BICS     r0,r0,r1
0003c0  78a9              LDRB     r1,[r5,#2]
0003c2  0749              LSLS     r1,r1,#29
0003c4  0f49              LSRS     r1,r1,#29
0003c6  0762              LSLS     r2,r4,#29
0003c8  0f52              LSRS     r2,r2,#29
0003ca  1f12              SUBS     r2,r2,#4
0003cc  0092              LSLS     r2,r2,#2
0003ce  4091              LSLS     r1,r1,r2
0003d0  4308              ORRS     r0,r0,r1
0003d2  4915              LDR      r1,|L18.1064|
0003d4  6048              STR      r0,[r1,#4]
;;;1306   				outp32(PWMB_CNR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, (sPt->u32Duty - 1));
0003d6  68a9              LDR      r1,[r5,#8]
0003d8  1e49              SUBS     r1,r1,#1
0003da  0760              LSLS     r0,r4,#29
0003dc  0f40              LSRS     r0,r0,#29
0003de  1f00              SUBS     r0,r0,#4
0003e0  220c              MOVS     r2,#0xc
0003e2  4350              MULS     r0,r2,r0
0003e4  4a10              LDR      r2,|L18.1064|
0003e6  1880              ADDS     r0,r0,r2
0003e8  60c1              STR      r1,[r0,#0xc]
;;;1307   				outp32(PWMB_CMR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, u32duty);						
0003ea  0760              LSLS     r0,r4,#29
0003ec  0f40              LSRS     r0,r0,#29
0003ee  1f00              SUBS     r0,r0,#4
0003f0  210c              MOVS     r1,#0xc
0003f2  4348              MULS     r0,r1,r0
0003f4  4611              MOV      r1,r2
0003f6  1840              ADDS     r0,r0,r1
0003f8  6106              STR      r6,[r0,#0x10]
;;;1308   				break;
0003fa  bf00              NOP      
                  |L18.1020|
0003fc  bf00              NOP                            ;1300
;;;1309   		}
;;;1310   				
;;;1311   		switch (sPt->u8ClockSelector)
0003fe  78ab              LDRB     r3,[r5,#2]
000400  f7fffffe          BL       __ARM_common_switch8
000404  051a1d20          DCB      0x05,0x1a,0x1d,0x20
000408  23042600          DCB      0x23,0x04,0x26,0x00
;;;1312   		{
;;;1313   			case DRVPWM_CLOCK_DIV_1:
;;;1314   				u8Divider = 1;
00040c  2001              MOVS     r0,#1
00040e  9002              STR      r0,[sp,#8]
;;;1315   				break;
000410  e01e              B        |L18.1104|
000412  0000              DCW      0x0000
                  |L18.1044|
                          DCD      0x50000200
                  |L18.1048|
                          DCD      0x00b71b00
                  |L18.1052|
                          DCD      SystemCoreClock
                  |L18.1056|
                          DCD      0x01518000
                  |L18.1060|
                          DCD      0x40040000
                  |L18.1064|
                          DCD      0x40140000
                  |L18.1068|
                          DCD      s_i32Option
                  |L18.1072|
                          DCD      0x000f000f
                  |L18.1076|
                          DCD      0xffefffef
;;;1316   			case DRVPWM_CLOCK_DIV_2:
;;;1317   				u8Divider = 2;			
000438  2002              MOVS     r0,#2
00043a  9002              STR      r0,[sp,#8]
;;;1318   				break;			
00043c  e008              B        |L18.1104|
;;;1319   			case DRVPWM_CLOCK_DIV_4:
;;;1320   				u8Divider = 4;			
00043e  2004              MOVS     r0,#4
000440  9002              STR      r0,[sp,#8]
;;;1321   				break;			
000442  e005              B        |L18.1104|
;;;1322   			case DRVPWM_CLOCK_DIV_8:
;;;1323   				u8Divider = 8;			
000444  2008              MOVS     r0,#8
000446  9002              STR      r0,[sp,#8]
;;;1324   				break;			
000448  e002              B        |L18.1104|
;;;1325   			case DRVPWM_CLOCK_DIV_16: 
;;;1326   				u8Divider = 16;			
00044a  2010              MOVS     r0,#0x10
00044c  9002              STR      r0,[sp,#8]
;;;1327   				break;		
00044e  bf00              NOP      
                  |L18.1104|
000450  bf00              NOP                            ;1315
;;;1328   		}		
;;;1329   		
;;;1330   		u32Frequency = u32Freqout / (sPt->u8PreScale + 1) / u8Divider / sPt->u32Duty;
000452  78e8              LDRB     r0,[r5,#3]
000454  1c41              ADDS     r1,r0,#1
000456  9807              LDR      r0,[sp,#0x1c]
000458  f7fffffe          BL       __aeabi_uidivmod
00045c  9001              STR      r0,[sp,#4]
00045e  9902              LDR      r1,[sp,#8]
000460  f7fffffe          BL       __aeabi_uidivmod
000464  4607              MOV      r7,r0
000466  68a9              LDR      r1,[r5,#8]
000468  f7fffffe          BL       __aeabi_uidivmod
00046c  9008              STR      r0,[sp,#0x20]
;;;1331   	}
00046e  e135              B        |L18.1756|
                  |L18.1136|
;;;1332   	else
;;;1333   	{
;;;1334   		uint8_t	 u8Divider;
;;;1335   		uint16_t u16PreScale;
;;;1336   		
;;;1337   		u32Frequency =  u32Freqout / sPt->u32Frequency;		
000470  6869              LDR      r1,[r5,#4]
000472  9807              LDR      r0,[sp,#0x1c]
000474  f7fffffe          BL       __aeabi_uidivmod
000478  9008              STR      r0,[sp,#0x20]
;;;1338   		
;;;1339   		if (u32Frequency > 0x10000000)
00047a  2101              MOVS     r1,#1
00047c  0709              LSLS     r1,r1,#28
00047e  9808              LDR      r0,[sp,#0x20]
000480  4288              CMP      r0,r1
000482  d902              BLS      |L18.1162|
;;;1340   			return 0;
000484  2000              MOVS     r0,#0
                  |L18.1158|
;;;1341   			
;;;1342   		u8Divider = 1;			
;;;1343   			
;;;1344   		if (u32Frequency < 0x20000)
;;;1345   			u16PreScale = 2;	
;;;1346   		else
;;;1347   		{
;;;1348   			u16PreScale = u32Frequency / 65536;	
;;;1349   							
;;;1350   			if (u32Frequency / u16PreScale > 65536)
;;;1351   				u16PreScale++;
;;;1352   			
;;;1353   			if (u16PreScale > 256)
;;;1354   			{
;;;1355   				uint8_t u8i = 0;
;;;1356   				
;;;1357   				u16PreScale = 256;
;;;1358   				u32Frequency = u32Frequency / u16PreScale;
;;;1359   				
;;;1360   				u8Divider = u32Frequency / 65536;				
;;;1361   				
;;;1362   				if(u32Frequency / u8Divider > 65536)
;;;1363   					u8Divider++;				
;;;1364   				
;;;1365   				while(1)	
;;;1366   				{
;;;1367   					if((1 << u8i++) > u8Divider)
;;;1368   						break;
;;;1369   				}
;;;1370   				
;;;1371   				u8Divider = 1 << (u8i - 1);
;;;1372   				
;;;1373   				if (u8Divider > 16)
;;;1374   					return 0;	
;;;1375   					
;;;1376   				u32Frequency = u32Frequency * u16PreScale;						
;;;1377   			}		
;;;1378   					
;;;1379   		}
;;;1380   		u16Duty = (uint16_t )(u32Frequency/u16PreScale/u8Divider);
;;;1381   		
;;;1382   		u32Frequency = (u32Freqout / u16PreScale / u8Divider) / u16Duty;	
;;;1383   				
;;;1384   		switch (u8Timer & 0x07)
;;;1385   		{
;;;1386   			case DRVPWM_TIMER0:
;;;1387   			case DRVPWM_TIMER1:
;;;1388   				PWMA->PPR.CP01 = u16PreScale - 1;
;;;1389   				break;
;;;1390   			case DRVPWM_TIMER2:
;;;1391   			case DRVPWM_TIMER3:
;;;1392   				PWMA->PPR.CP23 = u16PreScale - 1;
;;;1393   				break;
;;;1394   			case DRVPWM_TIMER4:
;;;1395   			case DRVPWM_TIMER5:
;;;1396   				PWMB->PPR.CP01 = u16PreScale - 1;
;;;1397   				break;
;;;1398   			case DRVPWM_TIMER6:
;;;1399   			case DRVPWM_TIMER7:
;;;1400   				PWMB->PPR.CP23 = u16PreScale - 1;
;;;1401   				break;
;;;1402   		}
;;;1403   		
;;;1404   		switch(u8Divider)
;;;1405   		{
;;;1406   			case 1:
;;;1407   				u8Divider = DRVPWM_CLOCK_DIV_1;
;;;1408   				break;
;;;1409   			case 2:
;;;1410   				u8Divider = DRVPWM_CLOCK_DIV_2;			
;;;1411   				break;			
;;;1412   			case 4:
;;;1413   				u8Divider = DRVPWM_CLOCK_DIV_4;			
;;;1414   				break;			
;;;1415   			case 8:
;;;1416   				u8Divider = DRVPWM_CLOCK_DIV_8;			
;;;1417   				break;			
;;;1418   			case 16:
;;;1419   				u8Divider = DRVPWM_CLOCK_DIV_16;			
;;;1420   				break;		
;;;1421   		}				
;;;1422   					
;;;1423   		if (u8Timer & 0x10)
;;;1424   		{
;;;1425   			u16cnrData = sPt->u32Duty - 1; 
;;;1426   			u16cmrData = sPt->u32Duty * sPt->u8HighPulseRatio / 100 - 1;		
;;;1427   		}
;;;1428   		else
;;;1429   		{
;;;1430   		 	u16cnrData = u16Duty - 1;
;;;1431   			u16cmrData = u16Duty * sPt->u8HighPulseRatio / 100 - 1;
;;;1432   		}
;;;1433   		
;;;1434   		switch (u8Timer & 0x07)
;;;1435   		{
;;;1436   			case DRVPWM_TIMER0:
;;;1437   			case DRVPWM_TIMER1:
;;;1438   			case DRVPWM_TIMER2:
;;;1439   			case DRVPWM_TIMER3:
;;;1440   		        outp32(&PWMA->CSR, (inp32(&PWMA->CSR) & ~(0x7 << ((u8Timer & 0x07)<<2) )) | ((u8Divider & 0x7) << ((u8Timer & 0x07)<<2)));	
;;;1441   			    outp32(PWMA_CNR0 + (u8Timer & 0x07) * 12, u16cnrData);			
;;;1442   			    outp32(PWMA_CMR0 + (u8Timer & 0x07) * 12, u16cmrData);					
;;;1443   				break;
;;;1444   			case DRVPWM_TIMER4:
;;;1445   			case DRVPWM_TIMER5:
;;;1446   			case DRVPWM_TIMER6:
;;;1447   			case DRVPWM_TIMER7:
;;;1448   		        outp32(&PWMB->CSR, (inp32(&PWMB->CSR) & ~(0x7 << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2) )) | ((u8Divider & 0x7) << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2)));	
;;;1449   			    outp32(PWMB_CNR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, u16cnrData);			
;;;1450   			    outp32(PWMB_CMR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, u16cmrData);								
;;;1451   				break;
;;;1452   		}
;;;1453   	}
;;;1454   	
;;;1455   	return u32Frequency;
;;;1456   }
000486  b009              ADD      sp,sp,#0x24
000488  bdf0              POP      {r4-r7,pc}
                  |L18.1162|
00048a  2701              MOVS     r7,#1                 ;1342
00048c  0479              LSLS     r1,r7,#17             ;1344
00048e  9808              LDR      r0,[sp,#0x20]         ;1344
000490  4288              CMP      r0,r1                 ;1344
000492  d201              BCS      |L18.1176|
000494  2602              MOVS     r6,#2                 ;1345
000496  e03d              B        |L18.1300|
                  |L18.1176|
000498  9808              LDR      r0,[sp,#0x20]         ;1348
00049a  0c06              LSRS     r6,r0,#16             ;1348
00049c  4631              MOV      r1,r6                 ;1350
00049e  9808              LDR      r0,[sp,#0x20]         ;1350
0004a0  f7fffffe          BL       __aeabi_uidivmod
0004a4  2101              MOVS     r1,#1                 ;1350
0004a6  0409              LSLS     r1,r1,#16             ;1350
0004a8  4288              CMP      r0,r1                 ;1350
0004aa  d901              BLS      |L18.1200|
0004ac  1c70              ADDS     r0,r6,#1              ;1351
0004ae  b286              UXTH     r6,r0                 ;1351
                  |L18.1200|
0004b0  20ff              MOVS     r0,#0xff              ;1353
0004b2  3001              ADDS     r0,#1                 ;1353
0004b4  4286              CMP      r6,r0                 ;1353
0004b6  dd2d              BLE      |L18.1300|
0004b8  2000              MOVS     r0,#0                 ;1355
0004ba  9002              STR      r0,[sp,#8]            ;1355
0004bc  26ff              MOVS     r6,#0xff              ;1357
0004be  3601              ADDS     r6,#1                 ;1357
0004c0  4631              MOV      r1,r6                 ;1358
0004c2  9808              LDR      r0,[sp,#0x20]         ;1358
0004c4  f7fffffe          BL       __aeabi_uidivmod
0004c8  9008              STR      r0,[sp,#0x20]         ;1358
0004ca  9808              LDR      r0,[sp,#0x20]         ;1360
0004cc  0200              LSLS     r0,r0,#8              ;1360
0004ce  0e07              LSRS     r7,r0,#24             ;1360
0004d0  4639              MOV      r1,r7                 ;1362
0004d2  9808              LDR      r0,[sp,#0x20]         ;1362
0004d4  f7fffffe          BL       __aeabi_uidivmod
0004d8  0231              LSLS     r1,r6,#8              ;1362
0004da  4288              CMP      r0,r1                 ;1362
0004dc  d901              BLS      |L18.1250|
0004de  1c78              ADDS     r0,r7,#1              ;1363
0004e0  b2c7              UXTB     r7,r0                 ;1363
                  |L18.1250|
0004e2  e008              B        |L18.1270|
                  |L18.1252|
0004e4  9802              LDR      r0,[sp,#8]            ;1367
0004e6  1c41              ADDS     r1,r0,#1              ;1367
0004e8  b2c9              UXTB     r1,r1                 ;1367
0004ea  9102              STR      r1,[sp,#8]            ;1367
0004ec  2101              MOVS     r1,#1                 ;1367
0004ee  4081              LSLS     r1,r1,r0              ;1367
0004f0  42b9              CMP      r1,r7                 ;1367
0004f2  dd00              BLE      |L18.1270|
0004f4  e000              B        |L18.1272|
                  |L18.1270|
0004f6  e7f5              B        |L18.1252|
                  |L18.1272|
0004f8  bf00              NOP                            ;1368
0004fa  9802              LDR      r0,[sp,#8]            ;1371
0004fc  1e40              SUBS     r0,r0,#1              ;1371
0004fe  2101              MOVS     r1,#1                 ;1371
000500  4081              LSLS     r1,r1,r0              ;1371
000502  b2cf              UXTB     r7,r1                 ;1371
000504  2f10              CMP      r7,#0x10              ;1373
000506  dd01              BLE      |L18.1292|
000508  2000              MOVS     r0,#0                 ;1374
00050a  e7bc              B        |L18.1158|
                  |L18.1292|
00050c  9808              LDR      r0,[sp,#0x20]         ;1376
00050e  4370              MULS     r0,r6,r0              ;1376
000510  9008              STR      r0,[sp,#0x20]         ;1376
000512  bf00              NOP                            ;1377
                  |L18.1300|
000514  4631              MOV      r1,r6                 ;1380
000516  9808              LDR      r0,[sp,#0x20]         ;1380
000518  f7fffffe          BL       __aeabi_uidivmod
00051c  4639              MOV      r1,r7                 ;1380
00051e  9002              STR      r0,[sp,#8]            ;1380
000520  f7fffffe          BL       __aeabi_uidivmod
000524  b280              UXTH     r0,r0                 ;1380
000526  9006              STR      r0,[sp,#0x18]         ;1380
000528  4631              MOV      r1,r6                 ;1382
00052a  9807              LDR      r0,[sp,#0x1c]         ;1382
00052c  f7fffffe          BL       __aeabi_uidivmod
000530  4639              MOV      r1,r7                 ;1382
000532  9001              STR      r0,[sp,#4]            ;1382
000534  f7fffffe          BL       __aeabi_uidivmod
000538  9002              STR      r0,[sp,#8]            ;1382
00053a  9906              LDR      r1,[sp,#0x18]         ;1382
00053c  f7fffffe          BL       __aeabi_uidivmod
000540  9008              STR      r0,[sp,#0x20]         ;1382
000542  0763              LSLS     r3,r4,#29             ;1384
000544  0f5b              LSRS     r3,r3,#29             ;1384
000546  f7fffffe          BL       __ARM_common_switch8
00054a  0805              DCB      0x08,0x05
00054c  0610111f          DCB      0x06,0x10,0x11,0x1f
000550  202a2b39          DCB      0x20,0x2a,0x2b,0x39
000554  bf00              NOP                            ;1387
000556  4862              LDR      r0,|L18.1760|
000558  6800              LDR      r0,[r0,#0]            ;1388
00055a  0a00              LSRS     r0,r0,#8              ;1388
00055c  0200              LSLS     r0,r0,#8              ;1388
00055e  1e71              SUBS     r1,r6,#1              ;1388
000560  b2c9              UXTB     r1,r1                 ;1388
000562  4308              ORRS     r0,r0,r1              ;1388
000564  495e              LDR      r1,|L18.1760|
000566  6008              STR      r0,[r1,#0]            ;1388
000568  e028              B        |L18.1468|
00056a  bf00              NOP                            ;1391
00056c  485c              LDR      r0,|L18.1760|
00056e  6800              LDR      r0,[r0,#0]            ;1392
000570  21ff              MOVS     r1,#0xff              ;1392
000572  0209              LSLS     r1,r1,#8              ;1392
000574  4388              BICS     r0,r0,r1              ;1392
000576  1e71              SUBS     r1,r6,#1              ;1392
000578  0209              LSLS     r1,r1,#8              ;1392
00057a  22ff              MOVS     r2,#0xff              ;1392
00057c  0212              LSLS     r2,r2,#8              ;1392
00057e  4011              ANDS     r1,r1,r2              ;1392
000580  4308              ORRS     r0,r0,r1              ;1392
000582  4957              LDR      r1,|L18.1760|
000584  6008              STR      r0,[r1,#0]            ;1392
000586  e019              B        |L18.1468|
000588  bf00              NOP                            ;1395
00058a  4856              LDR      r0,|L18.1764|
00058c  6800              LDR      r0,[r0,#0]            ;1396
00058e  0a00              LSRS     r0,r0,#8              ;1396
000590  0200              LSLS     r0,r0,#8              ;1396
000592  1e71              SUBS     r1,r6,#1              ;1396
000594  b2c9              UXTB     r1,r1                 ;1396
000596  4308              ORRS     r0,r0,r1              ;1396
000598  4952              LDR      r1,|L18.1764|
00059a  6008              STR      r0,[r1,#0]            ;1396
00059c  e00e              B        |L18.1468|
00059e  bf00              NOP                            ;1399
0005a0  4850              LDR      r0,|L18.1764|
0005a2  6800              LDR      r0,[r0,#0]            ;1400
0005a4  21ff              MOVS     r1,#0xff              ;1400
0005a6  0209              LSLS     r1,r1,#8              ;1400
0005a8  4388              BICS     r0,r0,r1              ;1400
0005aa  1e71              SUBS     r1,r6,#1              ;1400
0005ac  0209              LSLS     r1,r1,#8              ;1400
0005ae  22ff              MOVS     r2,#0xff              ;1400
0005b0  0212              LSLS     r2,r2,#8              ;1400
0005b2  4011              ANDS     r1,r1,r2              ;1400
0005b4  4308              ORRS     r0,r0,r1              ;1400
0005b6  494b              LDR      r1,|L18.1764|
0005b8  6008              STR      r0,[r1,#0]            ;1400
0005ba  bf00              NOP                            ;1401
                  |L18.1468|
0005bc  bf00              NOP                            ;1389
0005be  2f04              CMP      r7,#4                 ;1404
0005c0  d00e              BEQ      |L18.1504|
0005c2  dc04              BGT      |L18.1486|
0005c4  2f01              CMP      r7,#1                 ;1404
0005c6  d007              BEQ      |L18.1496|
0005c8  2f02              CMP      r7,#2                 ;1404
0005ca  d10f              BNE      |L18.1516|
0005cc  e006              B        |L18.1500|
                  |L18.1486|
0005ce  2f08              CMP      r7,#8                 ;1404
0005d0  d008              BEQ      |L18.1508|
0005d2  2f10              CMP      r7,#0x10              ;1404
0005d4  d10a              BNE      |L18.1516|
0005d6  e007              B        |L18.1512|
                  |L18.1496|
0005d8  2704              MOVS     r7,#4                 ;1407
0005da  e007              B        |L18.1516|
                  |L18.1500|
0005dc  2700              MOVS     r7,#0                 ;1410
0005de  e005              B        |L18.1516|
                  |L18.1504|
0005e0  2701              MOVS     r7,#1                 ;1413
0005e2  e003              B        |L18.1516|
                  |L18.1508|
0005e4  2702              MOVS     r7,#2                 ;1416
0005e6  e001              B        |L18.1516|
                  |L18.1512|
0005e8  2703              MOVS     r7,#3                 ;1419
0005ea  bf00              NOP                            ;1420
                  |L18.1516|
0005ec  bf00              NOP                            ;1408
0005ee  2010              MOVS     r0,#0x10              ;1423
0005f0  4204              TST      r4,r0                 ;1423
0005f2  d00e              BEQ      |L18.1554|
0005f4  68a8              LDR      r0,[r5,#8]            ;1425
0005f6  1e40              SUBS     r0,r0,#1              ;1425
0005f8  b280              UXTH     r0,r0                 ;1425
0005fa  9005              STR      r0,[sp,#0x14]         ;1425
0005fc  786a              LDRB     r2,[r5,#1]            ;1426
0005fe  68a9              LDR      r1,[r5,#8]            ;1426
000600  4351              MULS     r1,r2,r1              ;1426
000602  4608              MOV      r0,r1                 ;1426
000604  2164              MOVS     r1,#0x64              ;1426
000606  f7fffffe          BL       __aeabi_uidivmod
00060a  1e40              SUBS     r0,r0,#1              ;1426
00060c  b280              UXTH     r0,r0                 ;1426
00060e  9004              STR      r0,[sp,#0x10]         ;1426
000610  e00d              B        |L18.1582|
                  |L18.1554|
000612  9806              LDR      r0,[sp,#0x18]         ;1430
000614  1e40              SUBS     r0,r0,#1              ;1430
000616  b280              UXTH     r0,r0                 ;1430
000618  9005              STR      r0,[sp,#0x14]         ;1430
00061a  7869              LDRB     r1,[r5,#1]            ;1431
00061c  9a06              LDR      r2,[sp,#0x18]         ;1431
00061e  4351              MULS     r1,r2,r1              ;1431
000620  4608              MOV      r0,r1                 ;1431
000622  2164              MOVS     r1,#0x64              ;1431
000624  f7fffffe          BL       __aeabi_idivmod
000628  1e40              SUBS     r0,r0,#1              ;1431
00062a  b280              UXTH     r0,r0                 ;1431
00062c  9004              STR      r0,[sp,#0x10]         ;1431
                  |L18.1582|
00062e  0763              LSLS     r3,r4,#29             ;1434
000630  0f5b              LSRS     r3,r3,#29             ;1434
000632  f7fffffe          BL       __ARM_common_switch8
000636  0805              DCB      0x08,0x05
000638  06070828          DCB      0x06,0x07,0x08,0x28
00063c  292a2b51          DCB      0x29,0x2a,0x2b,0x51
000640  bf00              NOP                            ;1437
000642  bf00              NOP                            ;1438
000644  bf00              NOP                            ;1439
000646  4826              LDR      r0,|L18.1760|
000648  6840              LDR      r0,[r0,#4]            ;1440
00064a  0761              LSLS     r1,r4,#29             ;1440
00064c  0eca              LSRS     r2,r1,#27             ;1440
00064e  2107              MOVS     r1,#7                 ;1440
000650  4091              LSLS     r1,r1,r2              ;1440
000652  4388              BICS     r0,r0,r1              ;1440
000654  0779              LSLS     r1,r7,#29             ;1440
000656  0f49              LSRS     r1,r1,#29             ;1440
000658  0762              LSLS     r2,r4,#29             ;1440
00065a  0ed2              LSRS     r2,r2,#27             ;1440
00065c  4091              LSLS     r1,r1,r2              ;1440
00065e  4308              ORRS     r0,r0,r1              ;1440
000660  491f              LDR      r1,|L18.1760|
000662  6048              STR      r0,[r1,#4]            ;1440
000664  0761              LSLS     r1,r4,#29             ;1441
000666  0f49              LSRS     r1,r1,#29             ;1441
000668  220c              MOVS     r2,#0xc               ;1441
00066a  4351              MULS     r1,r2,r1              ;1441
00066c  4a1c              LDR      r2,|L18.1760|
00066e  1889              ADDS     r1,r1,r2              ;1441
000670  9805              LDR      r0,[sp,#0x14]         ;1441
000672  60c8              STR      r0,[r1,#0xc]          ;1441
000674  0761              LSLS     r1,r4,#29             ;1442
000676  0f49              LSRS     r1,r1,#29             ;1442
000678  220c              MOVS     r2,#0xc               ;1442
00067a  4351              MULS     r1,r2,r1              ;1442
00067c  4a18              LDR      r2,|L18.1760|
00067e  1889              ADDS     r1,r1,r2              ;1442
000680  9804              LDR      r0,[sp,#0x10]         ;1442
000682  6108              STR      r0,[r1,#0x10]         ;1442
000684  e028              B        |L18.1752|
000686  bf00              NOP                            ;1445
000688  bf00              NOP                            ;1446
00068a  bf00              NOP                            ;1447
00068c  4815              LDR      r0,|L18.1764|
00068e  6840              LDR      r0,[r0,#4]            ;1448
000690  0761              LSLS     r1,r4,#29             ;1448
000692  0f49              LSRS     r1,r1,#29             ;1448
000694  1f09              SUBS     r1,r1,#4              ;1448
000696  008a              LSLS     r2,r1,#2              ;1448
000698  2107              MOVS     r1,#7                 ;1448
00069a  4091              LSLS     r1,r1,r2              ;1448
00069c  4388              BICS     r0,r0,r1              ;1448
00069e  0779              LSLS     r1,r7,#29             ;1448
0006a0  0f49              LSRS     r1,r1,#29             ;1448
0006a2  0762              LSLS     r2,r4,#29             ;1448
0006a4  0f52              LSRS     r2,r2,#29             ;1448
0006a6  1f12              SUBS     r2,r2,#4              ;1448
0006a8  0092              LSLS     r2,r2,#2              ;1448
0006aa  4091              LSLS     r1,r1,r2              ;1448
0006ac  4308              ORRS     r0,r0,r1              ;1448
0006ae  490d              LDR      r1,|L18.1764|
0006b0  6048              STR      r0,[r1,#4]            ;1448
0006b2  0760              LSLS     r0,r4,#29             ;1449
0006b4  0f40              LSRS     r0,r0,#29             ;1449
0006b6  1f00              SUBS     r0,r0,#4              ;1449
0006b8  220c              MOVS     r2,#0xc               ;1449
0006ba  4350              MULS     r0,r2,r0              ;1449
0006bc  4a09              LDR      r2,|L18.1764|
0006be  1880              ADDS     r0,r0,r2              ;1449
0006c0  9905              LDR      r1,[sp,#0x14]         ;1449
0006c2  60c1              STR      r1,[r0,#0xc]          ;1449
0006c4  0760              LSLS     r0,r4,#29             ;1450
0006c6  0f40              LSRS     r0,r0,#29             ;1450
0006c8  1f00              SUBS     r0,r0,#4              ;1450
0006ca  220c              MOVS     r2,#0xc               ;1450
0006cc  4350              MULS     r0,r2,r0              ;1450
0006ce  4a05              LDR      r2,|L18.1764|
0006d0  1880              ADDS     r0,r0,r2              ;1450
0006d2  9904              LDR      r1,[sp,#0x10]         ;1450
0006d4  6101              STR      r1,[r0,#0x10]         ;1450
0006d6  bf00              NOP                            ;1451
                  |L18.1752|
0006d8  bf00              NOP                            ;1443
0006da  bf00              NOP                            ;1453
                  |L18.1756|
0006dc  9808              LDR      r0,[sp,#0x20]         ;1455
0006de  e6d2              B        |L18.1158|
;;;1457   
                          ENDP

                  |L18.1760|
                          DCD      0x40040000
                  |L18.1764|
                          DCD      0x40140000

                          AREA ||i.DrvPWM_SetTimerCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_SetTimerCounter PROC
;;;316    /*---------------------------------------------------------------------------------------------------------*/
;;;317    void DrvPWM_SetTimerCounter(uint8_t u8Timer, uint16_t u16Counter)
000000  0700              LSLS     r0,r0,#28
;;;318    {	
;;;319    	u8Timer &= 0x0F;
000002  0f00              LSRS     r0,r0,#28
;;;320    	
;;;321    	if (u8Timer >= DRVPWM_TIMER4)
000004  2804              CMP      r0,#4
000006  db06              BLT      |L19.22|
;;;322    	{
;;;323    		*((__IO uint32_t *) (PWMB_CNR0 + (u8Timer - DRVPWM_TIMER4) * 12)) = u16Counter;
000008  1f02              SUBS     r2,r0,#4
00000a  230c              MOVS     r3,#0xc
00000c  435a              MULS     r2,r3,r2
00000e  4b06              LDR      r3,|L19.40|
000010  18d2              ADDS     r2,r2,r3
000012  60d1              STR      r1,[r2,#0xc]
000014  e006              B        |L19.36|
                  |L19.22|
;;;324    	}
;;;325    	else
;;;326    	{
;;;327    		*((__IO uint32_t *) (PWMA_CNR0 + (u8Timer & 0x7) * 12)) = u16Counter;	
000016  0742              LSLS     r2,r0,#29
000018  0f52              LSRS     r2,r2,#29
00001a  230c              MOVS     r3,#0xc
00001c  435a              MULS     r2,r3,r2
00001e  4b03              LDR      r3,|L19.44|
000020  18d2              ADDS     r2,r2,r3
000022  60d1              STR      r1,[r2,#0xc]
                  |L19.36|
;;;328    	}
;;;329    }
000024  4770              BX       lr
;;;330    
                          ENDP

000026  0000              DCW      0x0000
                  |L19.40|
                          DCD      0x40140000
                  |L19.44|
                          DCD      0x40040000

                          AREA ||i.DrvPWM_SetTimerIO||, CODE, READONLY, ALIGN=2

                  DrvPWM_SetTimerIO PROC
;;;1473   /*---------------------------------------------------------------------------------------------------------*/
;;;1474   void DrvPWM_SetTimerIO(uint8_t u8Timer, int32_t i32Enable)
000000  b510              PUSH     {r4,lr}
;;;1475   {
;;;1476   	if (i32Enable)
000002  2900              CMP      r1,#0
000004  d02d              BEQ      |L20.98|
;;;1477   	{
;;;1478   		if (u8Timer & 0x10)
000006  2210              MOVS     r2,#0x10
000008  4210              TST      r0,r2
00000a  d016              BEQ      |L20.58|
;;;1479   		{
;;;1480   			if (u8Timer & 0x04)
00000c  2204              MOVS     r2,#4
00000e  4210              TST      r0,r2
000010  d009              BEQ      |L20.38|
;;;1481   			 	PWMB->CAPENR = PWMB->CAPENR | (1 << (u8Timer - DRVPWM_CAP4));
000012  4a2b              LDR      r2,|L20.192|
000014  6b92              LDR      r2,[r2,#0x38]
000016  4603              MOV      r3,r0
000018  3b14              SUBS     r3,r3,#0x14
00001a  2401              MOVS     r4,#1
00001c  409c              LSLS     r4,r4,r3
00001e  4322              ORRS     r2,r2,r4
000020  4b27              LDR      r3,|L20.192|
000022  639a              STR      r2,[r3,#0x38]
000024  e04a              B        |L20.188|
                  |L20.38|
;;;1482   			else
;;;1483   				PWMA->CAPENR = PWMA->CAPENR | (1 << (u8Timer & 0x07));			
000026  4a27              LDR      r2,|L20.196|
000028  6b92              LDR      r2,[r2,#0x38]
00002a  0744              LSLS     r4,r0,#29
00002c  0f64              LSRS     r4,r4,#29
00002e  2301              MOVS     r3,#1
000030  40a3              LSLS     r3,r3,r4
000032  431a              ORRS     r2,r2,r3
000034  4b23              LDR      r3,|L20.196|
000036  639a              STR      r2,[r3,#0x38]
000038  e040              B        |L20.188|
                  |L20.58|
;;;1484   		}
;;;1485   		else
;;;1486   		{
;;;1487   			if (u8Timer & 0x04)
00003a  2204              MOVS     r2,#4
00003c  4210              TST      r0,r2
00003e  d008              BEQ      |L20.82|
;;;1488   			 	outp32(&PWMB->POE, inp32(&PWMB->POE)  | (1 << (u8Timer-DRVPWM_TIMER4)));
000040  4a1f              LDR      r2,|L20.192|
000042  6bd2              LDR      r2,[r2,#0x3c]
000044  1f03              SUBS     r3,r0,#4
000046  2401              MOVS     r4,#1
000048  409c              LSLS     r4,r4,r3
00004a  4322              ORRS     r2,r2,r4
00004c  4b1c              LDR      r3,|L20.192|
00004e  63da              STR      r2,[r3,#0x3c]
000050  e034              B        |L20.188|
                  |L20.82|
;;;1489   			else
;;;1490   				outp32(&PWMA->POE, inp32(&PWMA->POE)  | (1 << u8Timer));	
000052  4a1c              LDR      r2,|L20.196|
000054  6bd2              LDR      r2,[r2,#0x3c]
000056  2301              MOVS     r3,#1
000058  4083              LSLS     r3,r3,r0
00005a  431a              ORRS     r2,r2,r3
00005c  4b19              LDR      r3,|L20.196|
00005e  63da              STR      r2,[r3,#0x3c]
000060  e02c              B        |L20.188|
                  |L20.98|
;;;1491   		}
;;;1492   	}
;;;1493   	else
;;;1494   	{
;;;1495   		if (u8Timer & 0x10)			
000062  2210              MOVS     r2,#0x10
000064  4210              TST      r0,r2
000066  d016              BEQ      |L20.150|
;;;1496   		{
;;;1497   			if (u8Timer & 0x04)
000068  2204              MOVS     r2,#4
00006a  4210              TST      r0,r2
00006c  d009              BEQ      |L20.130|
;;;1498   				PWMB->CAPENR = PWMB->CAPENR & ~(1 << (u8Timer - DRVPWM_CAP4));
00006e  4a14              LDR      r2,|L20.192|
000070  6b92              LDR      r2,[r2,#0x38]
000072  4603              MOV      r3,r0
000074  3b14              SUBS     r3,r3,#0x14
000076  2401              MOVS     r4,#1
000078  409c              LSLS     r4,r4,r3
00007a  43a2              BICS     r2,r2,r4
00007c  4b10              LDR      r3,|L20.192|
00007e  639a              STR      r2,[r3,#0x38]
000080  e01c              B        |L20.188|
                  |L20.130|
;;;1499   			else
;;;1500   				PWMA->CAPENR = PWMA->CAPENR & ~(1 << (u8Timer & 0x07));			
000082  4a10              LDR      r2,|L20.196|
000084  6b92              LDR      r2,[r2,#0x38]
000086  0744              LSLS     r4,r0,#29
000088  0f64              LSRS     r4,r4,#29
00008a  2301              MOVS     r3,#1
00008c  40a3              LSLS     r3,r3,r4
00008e  439a              BICS     r2,r2,r3
000090  4b0c              LDR      r3,|L20.196|
000092  639a              STR      r2,[r3,#0x38]
000094  e012              B        |L20.188|
                  |L20.150|
;;;1501   		}
;;;1502   		else
;;;1503   		{
;;;1504   			if (u8Timer & 0x04)
000096  2204              MOVS     r2,#4
000098  4210              TST      r0,r2
00009a  d008              BEQ      |L20.174|
;;;1505   			 	outp32(&PWMB->POE, inp32(&PWMB->POE)  & ~(1 << (u8Timer-DRVPWM_TIMER4)));
00009c  4a08              LDR      r2,|L20.192|
00009e  6bd3              LDR      r3,[r2,#0x3c]
0000a0  1f04              SUBS     r4,r0,#4
0000a2  2201              MOVS     r2,#1
0000a4  40a2              LSLS     r2,r2,r4
0000a6  4393              BICS     r3,r3,r2
0000a8  4a05              LDR      r2,|L20.192|
0000aa  63d3              STR      r3,[r2,#0x3c]
0000ac  e006              B        |L20.188|
                  |L20.174|
;;;1506   			else
;;;1507   				outp32(&PWMA->POE, inp32(&PWMA->POE)  & ~(1 << u8Timer));			
0000ae  4a05              LDR      r2,|L20.196|
0000b0  6bd2              LDR      r2,[r2,#0x3c]
0000b2  2301              MOVS     r3,#1
0000b4  4083              LSLS     r3,r3,r0
0000b6  439a              BICS     r2,r2,r3
0000b8  4b02              LDR      r3,|L20.196|
0000ba  63da              STR      r2,[r3,#0x3c]
                  |L20.188|
;;;1508   		}
;;;1509   	}
;;;1510   }
0000bc  bd10              POP      {r4,pc}
;;;1511   
                          ENDP

0000be  0000              DCW      0x0000
                  |L20.192|
                          DCD      0x40140040
                  |L20.196|
                          DCD      0x40040040

                          AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

                  NVIC_DisableIRQ PROC
;;;809     */
;;;810    static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
000000  06c2              LSLS     r2,r0,#27
;;;811    {
;;;812      NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
000002  0ed2              LSRS     r2,r2,#27
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a01              LDR      r2,|L21.16|
00000a  6011              STR      r1,[r2,#0]
;;;813    }
00000c  4770              BX       lr
;;;814    
                          ENDP

00000e  0000              DCW      0x0000
                  |L21.16|
                          DCD      0xe000e180

                          AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=2

                  NVIC_EnableIRQ PROC
;;;796     */
;;;797    static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
000000  06c2              LSLS     r2,r0,#27
;;;798    {
;;;799      NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
000002  0ed2              LSRS     r2,r2,#27
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a01              LDR      r2,|L22.16|
00000a  6011              STR      r1,[r2,#0]
;;;800    }
00000c  4770              BX       lr
;;;801    
                          ENDP

00000e  0000              DCW      0x0000
                  |L22.16|
                          DCD      0xe000e100

                          AREA ||i.PWMA_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWMA_IRQHandler PROC
;;;66     /*---------------------------------------------------------------------------------------------------------*/
;;;67     void PWMA_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;68     {    
;;;69     	uint32_t u32pwmIntFlag, u32CapIntFlag0, u32CapIntFlag1;
;;;70     	
;;;71     	/* Handle PWMA Timer function */	
;;;72     	u32pwmIntFlag = *((__IO uint32_t *) &PWMA->PIIR);
000002  4853              LDR      r0,|L23.336|
000004  6844              LDR      r4,[r0,#4]
;;;73     	
;;;74     	if (u32pwmIntFlag & BIT0)
000006  07e0              LSLS     r0,r4,#31
000008  0fc0              LSRS     r0,r0,#31
00000a  d009              BEQ      |L23.32|
;;;75     	{
;;;76     		*((__IO uint32_t *) &PWMA->PIIR) = BIT0;		 
00000c  2001              MOVS     r0,#1
00000e  4950              LDR      r1,|L23.336|
000010  6048              STR      r0,[r1,#4]
;;;77     		if (g_sDrvPWMAHandler.pfnPWM0CallBack != NULL)
000012  4850              LDR      r0,|L23.340|
000014  6800              LDR      r0,[r0,#0]  ; g_sDrvPWMAHandler
000016  2800              CMP      r0,#0
000018  d002              BEQ      |L23.32|
;;;78     		{                           
;;;79             	g_sDrvPWMAHandler.pfnPWM0CallBack();
00001a  494e              LDR      r1,|L23.340|
00001c  6808              LDR      r0,[r1,#0]  ; g_sDrvPWMAHandler
00001e  4780              BLX      r0
                  |L23.32|
;;;80     		}	
;;;81     	}	
;;;82     
;;;83     	if (u32pwmIntFlag & BIT1)
000020  2002              MOVS     r0,#2
000022  4204              TST      r4,r0
000024  d008              BEQ      |L23.56|
;;;84     	{
;;;85     		*((__IO uint32_t *) &PWMA->PIIR) = BIT1;		 
000026  494a              LDR      r1,|L23.336|
000028  6048              STR      r0,[r1,#4]
;;;86     		if (g_sDrvPWMAHandler.pfnPWM1CallBack != NULL)
00002a  484a              LDR      r0,|L23.340|
00002c  6880              LDR      r0,[r0,#8]  ; g_sDrvPWMAHandler
00002e  2800              CMP      r0,#0
000030  d002              BEQ      |L23.56|
;;;87     		{                           
;;;88             	g_sDrvPWMAHandler.pfnPWM1CallBack();
000032  4948              LDR      r1,|L23.340|
000034  6888              LDR      r0,[r1,#8]  ; g_sDrvPWMAHandler
000036  4780              BLX      r0
                  |L23.56|
;;;89     		}	
;;;90     	}	
;;;91     	
;;;92     	if (u32pwmIntFlag & BIT2)
000038  2004              MOVS     r0,#4
00003a  4204              TST      r4,r0
00003c  d008              BEQ      |L23.80|
;;;93     	{
;;;94     		*((__IO uint32_t *) &PWMA->PIIR) = BIT2;		 
00003e  4944              LDR      r1,|L23.336|
000040  6048              STR      r0,[r1,#4]
;;;95     		if (g_sDrvPWMAHandler.pfnPWM2CallBack != NULL)
000042  4844              LDR      r0,|L23.340|
000044  6900              LDR      r0,[r0,#0x10]  ; g_sDrvPWMAHandler
000046  2800              CMP      r0,#0
000048  d002              BEQ      |L23.80|
;;;96     		{                           
;;;97             	g_sDrvPWMAHandler.pfnPWM2CallBack();
00004a  4942              LDR      r1,|L23.340|
00004c  6908              LDR      r0,[r1,#0x10]  ; g_sDrvPWMAHandler
00004e  4780              BLX      r0
                  |L23.80|
;;;98     		}	
;;;99     	}
;;;100    
;;;101    	if (u32pwmIntFlag & BIT3)
000050  2008              MOVS     r0,#8
000052  4204              TST      r4,r0
000054  d008              BEQ      |L23.104|
;;;102    	{
;;;103    		*((__IO uint32_t *) &PWMA->PIIR) = BIT3;		 
000056  493e              LDR      r1,|L23.336|
000058  6048              STR      r0,[r1,#4]
;;;104    		if (g_sDrvPWMAHandler.pfnPWM3CallBack != NULL)
00005a  483e              LDR      r0,|L23.340|
00005c  6980              LDR      r0,[r0,#0x18]  ; g_sDrvPWMAHandler
00005e  2800              CMP      r0,#0
000060  d002              BEQ      |L23.104|
;;;105    		{                           
;;;106            	g_sDrvPWMAHandler.pfnPWM3CallBack();
000062  493c              LDR      r1,|L23.340|
000064  6988              LDR      r0,[r1,#0x18]  ; g_sDrvPWMAHandler
000066  4780              BLX      r0
                  |L23.104|
;;;107    		}	
;;;108    	}
;;;109    	
;;;110    	/* Handle PWMA Capture function */
;;;111        u32CapIntFlag0 = *((__IO uint32_t *) &PWMA->CCR0);
000068  4839              LDR      r0,|L23.336|
00006a  6905              LDR      r5,[r0,#0x10]
;;;112    	u32CapIntFlag1 = *((__IO uint32_t *) &PWMA->CCR2);
00006c  6946              LDR      r6,[r0,#0x14]
;;;113    
;;;114    	if (u32CapIntFlag0 & BIT4) 
00006e  2010              MOVS     r0,#0x10
000070  4205              TST      r5,r0
000072  d018              BEQ      |L23.166|
;;;115        {
;;;116            if (s_i32Option)
000074  4838              LDR      r0,|L23.344|
000076  6800              LDR      r0,[r0,#0]  ; s_i32Option
000078  2800              CMP      r0,#0
00007a  d006              BEQ      |L23.138|
;;;117    			outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT4));
00007c  4834              LDR      r0,|L23.336|
00007e  6900              LDR      r0,[r0,#0x10]
000080  4936              LDR      r1,|L23.348|
000082  4008              ANDS     r0,r0,r1
000084  4932              LDR      r1,|L23.336|
000086  6108              STR      r0,[r1,#0x10]
000088  e006              B        |L23.152|
                  |L23.138|
;;;118    		else
;;;119    			outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT20);	
00008a  4831              LDR      r0,|L23.336|
00008c  6900              LDR      r0,[r0,#0x10]
00008e  2101              MOVS     r1,#1
000090  0509              LSLS     r1,r1,#20
000092  4388              BICS     r0,r0,r1
000094  492e              LDR      r1,|L23.336|
000096  6108              STR      r0,[r1,#0x10]
                  |L23.152|
;;;120    
;;;121    		if (g_sDrvPWMAHandler.pfnCAP0CallBack != NULL)
000098  482e              LDR      r0,|L23.340|
00009a  6840              LDR      r0,[r0,#4]  ; g_sDrvPWMAHandler
00009c  2800              CMP      r0,#0
00009e  d002              BEQ      |L23.166|
;;;122            {
;;;123            	g_sDrvPWMAHandler.pfnCAP0CallBack();
0000a0  492c              LDR      r1,|L23.340|
0000a2  6848              LDR      r0,[r1,#4]  ; g_sDrvPWMAHandler
0000a4  4780              BLX      r0
                  |L23.166|
;;;124            }
;;;125    	}
;;;126    	
;;;127    	if (u32CapIntFlag0 & BIT20) 
0000a6  2001              MOVS     r0,#1
0000a8  0500              LSLS     r0,r0,#20
0000aa  4205              TST      r5,r0
0000ac  d017              BEQ      |L23.222|
;;;128        {
;;;129            if (s_i32Option)
0000ae  482a              LDR      r0,|L23.344|
0000b0  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000b2  2800              CMP      r0,#0
0000b4  d006              BEQ      |L23.196|
;;;130    			outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT20));
0000b6  4826              LDR      r0,|L23.336|
0000b8  6900              LDR      r0,[r0,#0x10]
0000ba  4929              LDR      r1,|L23.352|
0000bc  4008              ANDS     r0,r0,r1
0000be  4924              LDR      r1,|L23.336|
0000c0  6108              STR      r0,[r1,#0x10]
0000c2  e005              B        |L23.208|
                  |L23.196|
;;;131    		else
;;;132    			outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT4);		
0000c4  4822              LDR      r0,|L23.336|
0000c6  6900              LDR      r0,[r0,#0x10]
0000c8  2110              MOVS     r1,#0x10
0000ca  4388              BICS     r0,r0,r1
0000cc  4920              LDR      r1,|L23.336|
0000ce  6108              STR      r0,[r1,#0x10]
                  |L23.208|
;;;133    
;;;134    		if (g_sDrvPWMAHandler.pfnCAP1CallBack != NULL)
0000d0  4820              LDR      r0,|L23.340|
0000d2  68c0              LDR      r0,[r0,#0xc]  ; g_sDrvPWMAHandler
0000d4  2800              CMP      r0,#0
0000d6  d002              BEQ      |L23.222|
;;;135            {
;;;136            	g_sDrvPWMAHandler.pfnCAP1CallBack();
0000d8  491e              LDR      r1,|L23.340|
0000da  68c8              LDR      r0,[r1,#0xc]  ; g_sDrvPWMAHandler
0000dc  4780              BLX      r0
                  |L23.222|
;;;137            }
;;;138    	}
;;;139    
;;;140    	if (u32CapIntFlag1 & BIT4) 
0000de  2010              MOVS     r0,#0x10
0000e0  4206              TST      r6,r0
0000e2  d018              BEQ      |L23.278|
;;;141        {
;;;142            if (s_i32Option)
0000e4  481c              LDR      r0,|L23.344|
0000e6  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000e8  2800              CMP      r0,#0
0000ea  d006              BEQ      |L23.250|
;;;143    			outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT4));
0000ec  4818              LDR      r0,|L23.336|
0000ee  6940              LDR      r0,[r0,#0x14]
0000f0  491a              LDR      r1,|L23.348|
0000f2  4008              ANDS     r0,r0,r1
0000f4  4916              LDR      r1,|L23.336|
0000f6  6148              STR      r0,[r1,#0x14]
0000f8  e006              B        |L23.264|
                  |L23.250|
;;;144    		else
;;;145    			outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT20);
0000fa  4815              LDR      r0,|L23.336|
0000fc  6940              LDR      r0,[r0,#0x14]
0000fe  2101              MOVS     r1,#1
000100  0509              LSLS     r1,r1,#20
000102  4388              BICS     r0,r0,r1
000104  4912              LDR      r1,|L23.336|
000106  6148              STR      r0,[r1,#0x14]
                  |L23.264|
;;;146    
;;;147    		if (g_sDrvPWMAHandler.pfnCAP2CallBack != NULL)
000108  4812              LDR      r0,|L23.340|
00010a  6940              LDR      r0,[r0,#0x14]  ; g_sDrvPWMAHandler
00010c  2800              CMP      r0,#0
00010e  d002              BEQ      |L23.278|
;;;148            {
;;;149            	g_sDrvPWMAHandler.pfnCAP2CallBack();
000110  4910              LDR      r1,|L23.340|
000112  6948              LDR      r0,[r1,#0x14]  ; g_sDrvPWMAHandler
000114  4780              BLX      r0
                  |L23.278|
;;;150            }
;;;151    	}
;;;152    	
;;;153    	if (u32CapIntFlag1 & BIT20) 
000116  2001              MOVS     r0,#1
000118  0500              LSLS     r0,r0,#20
00011a  4206              TST      r6,r0
00011c  d017              BEQ      |L23.334|
;;;154        {
;;;155            if (s_i32Option)
00011e  480e              LDR      r0,|L23.344|
000120  6800              LDR      r0,[r0,#0]  ; s_i32Option
000122  2800              CMP      r0,#0
000124  d006              BEQ      |L23.308|
;;;156    			outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT20));
000126  480a              LDR      r0,|L23.336|
000128  6940              LDR      r0,[r0,#0x14]
00012a  490d              LDR      r1,|L23.352|
00012c  4008              ANDS     r0,r0,r1
00012e  4908              LDR      r1,|L23.336|
000130  6148              STR      r0,[r1,#0x14]
000132  e005              B        |L23.320|
                  |L23.308|
;;;157    		else
;;;158    			outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT4);
000134  4806              LDR      r0,|L23.336|
000136  6940              LDR      r0,[r0,#0x14]
000138  2110              MOVS     r1,#0x10
00013a  4388              BICS     r0,r0,r1
00013c  4904              LDR      r1,|L23.336|
00013e  6148              STR      r0,[r1,#0x14]
                  |L23.320|
;;;159    					
;;;160    		if (g_sDrvPWMAHandler.pfnCAP3CallBack != NULL)
000140  4804              LDR      r0,|L23.340|
000142  69c0              LDR      r0,[r0,#0x1c]  ; g_sDrvPWMAHandler
000144  2800              CMP      r0,#0
000146  d002              BEQ      |L23.334|
;;;161            {
;;;162            	g_sDrvPWMAHandler.pfnCAP3CallBack();
000148  4902              LDR      r1,|L23.340|
00014a  69c8              LDR      r0,[r1,#0x1c]  ; g_sDrvPWMAHandler
00014c  4780              BLX      r0
                  |L23.334|
;;;163            }
;;;164    	}
;;;165    }
00014e  bd70              POP      {r4-r6,pc}
;;;166    
                          ENDP

                  |L23.336|
                          DCD      0x40040040
                  |L23.340|
                          DCD      g_sDrvPWMAHandler
                  |L23.344|
                          DCD      s_i32Option
                  |L23.348|
                          DCD      0x000f001f
                  |L23.352|
                          DCD      0x001f000f

                          AREA ||i.PWMB_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWMB_IRQHandler PROC
;;;177    /*---------------------------------------------------------------------------------------------------------*/
;;;178    void PWMB_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;179    {    
;;;180    	uint32_t u32pwmIntFlag, u32CapIntFlag0, u32CapIntFlag1;
;;;181    
;;;182    	/* Handle PWMB Timer function */
;;;183    	u32pwmIntFlag = *((__IO uint32_t *) &PWMB->PIIR);
000002  483d              LDR      r0,|L24.248|
000004  6844              LDR      r4,[r0,#4]
;;;184    	
;;;185    	if (u32pwmIntFlag & BIT0)
000006  07e0              LSLS     r0,r4,#31
000008  0fc0              LSRS     r0,r0,#31
00000a  d009              BEQ      |L24.32|
;;;186    	{
;;;187    		*((__IO uint32_t *) &PWMB->PIIR) = BIT0;		 
00000c  2001              MOVS     r0,#1
00000e  493a              LDR      r1,|L24.248|
000010  6048              STR      r0,[r1,#4]
;;;188    		if (g_sDrvPWMBHandler.pfnPWM0CallBack != NULL)
000012  483a              LDR      r0,|L24.252|
000014  6800              LDR      r0,[r0,#0]  ; g_sDrvPWMBHandler
000016  2800              CMP      r0,#0
000018  d002              BEQ      |L24.32|
;;;189    		{                           
;;;190            	g_sDrvPWMBHandler.pfnPWM0CallBack();
00001a  4938              LDR      r1,|L24.252|
00001c  6808              LDR      r0,[r1,#0]  ; g_sDrvPWMBHandler
00001e  4780              BLX      r0
                  |L24.32|
;;;191    		}	
;;;192    	}	
;;;193    
;;;194    	if (u32pwmIntFlag & BIT1)
000020  2002              MOVS     r0,#2
000022  4204              TST      r4,r0
000024  d008              BEQ      |L24.56|
;;;195    	{
;;;196    		*((__IO uint32_t *) &PWMB->PIIR) = BIT1;		 
000026  4934              LDR      r1,|L24.248|
000028  6048              STR      r0,[r1,#4]
;;;197    		if (g_sDrvPWMBHandler.pfnPWM1CallBack != NULL)
00002a  4834              LDR      r0,|L24.252|
00002c  6880              LDR      r0,[r0,#8]  ; g_sDrvPWMBHandler
00002e  2800              CMP      r0,#0
000030  d002              BEQ      |L24.56|
;;;198    		{                           
;;;199            	g_sDrvPWMBHandler.pfnPWM1CallBack();
000032  4932              LDR      r1,|L24.252|
000034  6888              LDR      r0,[r1,#8]  ; g_sDrvPWMBHandler
000036  4780              BLX      r0
                  |L24.56|
;;;200    		}	
;;;201    	}	
;;;202    	
;;;203    	if (u32pwmIntFlag & BIT2)
000038  2004              MOVS     r0,#4
00003a  4204              TST      r4,r0
00003c  d008              BEQ      |L24.80|
;;;204    	{
;;;205    		*((__IO uint32_t *) &PWMB->PIIR) = BIT2;		 
00003e  492e              LDR      r1,|L24.248|
000040  6048              STR      r0,[r1,#4]
;;;206    		if (g_sDrvPWMBHandler.pfnPWM2CallBack != NULL)
000042  482e              LDR      r0,|L24.252|
000044  6900              LDR      r0,[r0,#0x10]  ; g_sDrvPWMBHandler
000046  2800              CMP      r0,#0
000048  d002              BEQ      |L24.80|
;;;207    		{                           
;;;208            	g_sDrvPWMBHandler.pfnPWM2CallBack();
00004a  492c              LDR      r1,|L24.252|
00004c  6908              LDR      r0,[r1,#0x10]  ; g_sDrvPWMBHandler
00004e  4780              BLX      r0
                  |L24.80|
;;;209    		}	
;;;210    	}
;;;211    
;;;212    	if (u32pwmIntFlag & BIT3)
000050  2008              MOVS     r0,#8
000052  4204              TST      r4,r0
000054  d008              BEQ      |L24.104|
;;;213    	{
;;;214    		*((__IO uint32_t *) &PWMB->PIIR) = BIT3;		 
000056  4928              LDR      r1,|L24.248|
000058  6048              STR      r0,[r1,#4]
;;;215    		if (g_sDrvPWMBHandler.pfnPWM3CallBack != NULL)
00005a  4828              LDR      r0,|L24.252|
00005c  6980              LDR      r0,[r0,#0x18]  ; g_sDrvPWMBHandler
00005e  2800              CMP      r0,#0
000060  d002              BEQ      |L24.104|
;;;216    		{                           
;;;217            	g_sDrvPWMBHandler.pfnPWM3CallBack();
000062  4926              LDR      r1,|L24.252|
000064  6988              LDR      r0,[r1,#0x18]  ; g_sDrvPWMBHandler
000066  4780              BLX      r0
                  |L24.104|
;;;218    		}	
;;;219    	}
;;;220    
;;;221        /* Handle PWMB Capture function */
;;;222        u32CapIntFlag0 = *((__IO uint32_t *) &PWMB->CCR0);
000068  4823              LDR      r0,|L24.248|
00006a  6905              LDR      r5,[r0,#0x10]
;;;223    	u32CapIntFlag1 = *((__IO uint32_t *) &PWMB->CCR2);
00006c  6946              LDR      r6,[r0,#0x14]
;;;224    
;;;225    	if (u32CapIntFlag0 & BIT4) 
00006e  2010              MOVS     r0,#0x10
000070  4205              TST      r5,r0
000072  d00d              BEQ      |L24.144|
;;;226        {
;;;227    		outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT20);	
000074  4820              LDR      r0,|L24.248|
000076  6900              LDR      r0,[r0,#0x10]
000078  2101              MOVS     r1,#1
00007a  0509              LSLS     r1,r1,#20
00007c  4388              BICS     r0,r0,r1
00007e  491e              LDR      r1,|L24.248|
000080  6108              STR      r0,[r1,#0x10]
;;;228    		
;;;229    		if (g_sDrvPWMBHandler.pfnCAP0CallBack != NULL)
000082  481e              LDR      r0,|L24.252|
000084  6840              LDR      r0,[r0,#4]  ; g_sDrvPWMBHandler
000086  2800              CMP      r0,#0
000088  d002              BEQ      |L24.144|
;;;230            {
;;;231            	g_sDrvPWMBHandler.pfnCAP0CallBack();
00008a  491c              LDR      r1,|L24.252|
00008c  6848              LDR      r0,[r1,#4]  ; g_sDrvPWMBHandler
00008e  4780              BLX      r0
                  |L24.144|
;;;232            }
;;;233    	}
;;;234    	
;;;235    	if (u32CapIntFlag0 & BIT20) 
000090  2001              MOVS     r0,#1
000092  0500              LSLS     r0,r0,#20
000094  4205              TST      r5,r0
000096  d00c              BEQ      |L24.178|
;;;236        {
;;;237    		outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT4);
000098  4817              LDR      r0,|L24.248|
00009a  6900              LDR      r0,[r0,#0x10]
00009c  2110              MOVS     r1,#0x10
00009e  4388              BICS     r0,r0,r1
0000a0  4915              LDR      r1,|L24.248|
0000a2  6108              STR      r0,[r1,#0x10]
;;;238    					
;;;239    		if (g_sDrvPWMBHandler.pfnCAP1CallBack != NULL)
0000a4  4815              LDR      r0,|L24.252|
0000a6  68c0              LDR      r0,[r0,#0xc]  ; g_sDrvPWMBHandler
0000a8  2800              CMP      r0,#0
0000aa  d002              BEQ      |L24.178|
;;;240            {
;;;241            	g_sDrvPWMBHandler.pfnCAP1CallBack();
0000ac  4913              LDR      r1,|L24.252|
0000ae  68c8              LDR      r0,[r1,#0xc]  ; g_sDrvPWMBHandler
0000b0  4780              BLX      r0
                  |L24.178|
;;;242            }
;;;243    	}
;;;244    
;;;245    	if (u32CapIntFlag1 & BIT4) 
0000b2  2010              MOVS     r0,#0x10
0000b4  4206              TST      r6,r0
0000b6  d00d              BEQ      |L24.212|
;;;246        {
;;;247    		outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT20);
0000b8  480f              LDR      r0,|L24.248|
0000ba  6940              LDR      r0,[r0,#0x14]
0000bc  2101              MOVS     r1,#1
0000be  0509              LSLS     r1,r1,#20
0000c0  4388              BICS     r0,r0,r1
0000c2  490d              LDR      r1,|L24.248|
0000c4  6148              STR      r0,[r1,#0x14]
;;;248    					
;;;249    		if (g_sDrvPWMBHandler.pfnCAP2CallBack != NULL)
0000c6  480d              LDR      r0,|L24.252|
0000c8  6940              LDR      r0,[r0,#0x14]  ; g_sDrvPWMBHandler
0000ca  2800              CMP      r0,#0
0000cc  d002              BEQ      |L24.212|
;;;250            {
;;;251            	g_sDrvPWMBHandler.pfnCAP2CallBack();
0000ce  490b              LDR      r1,|L24.252|
0000d0  6948              LDR      r0,[r1,#0x14]  ; g_sDrvPWMBHandler
0000d2  4780              BLX      r0
                  |L24.212|
;;;252            }
;;;253    	}
;;;254    	
;;;255    	if (u32CapIntFlag1 & BIT20) 
0000d4  2001              MOVS     r0,#1
0000d6  0500              LSLS     r0,r0,#20
0000d8  4206              TST      r6,r0
0000da  d00c              BEQ      |L24.246|
;;;256        {
;;;257    		outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT4);
0000dc  4806              LDR      r0,|L24.248|
0000de  6940              LDR      r0,[r0,#0x14]
0000e0  2110              MOVS     r1,#0x10
0000e2  4388              BICS     r0,r0,r1
0000e4  4904              LDR      r1,|L24.248|
0000e6  6148              STR      r0,[r1,#0x14]
;;;258    					
;;;259    		if (g_sDrvPWMBHandler.pfnCAP3CallBack != NULL)
0000e8  4804              LDR      r0,|L24.252|
0000ea  69c0              LDR      r0,[r0,#0x1c]  ; g_sDrvPWMBHandler
0000ec  2800              CMP      r0,#0
0000ee  d002              BEQ      |L24.246|
;;;260            {
;;;261            	g_sDrvPWMBHandler.pfnCAP3CallBack();
0000f0  4902              LDR      r1,|L24.252|
0000f2  69c8              LDR      r0,[r1,#0x1c]  ; g_sDrvPWMBHandler
0000f4  4780              BLX      r0
                  |L24.246|
;;;262            }
;;;263    	}
;;;264    }
0000f6  bd70              POP      {r4-r6,pc}
;;;265    
                          ENDP

                  |L24.248|
                          DCD      0x40140040
                  |L24.252|
                          DCD      g_sDrvPWMBHandler

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_sDrvPWMAHandler
                          %        32
                  g_sDrvPWMBHandler
                          %        32

                          AREA ||.data||, DATA, ALIGN=2

                  s_i32Option
                          DCD      0x00000000

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L152.16|
00000e  461d              MOV      r5,r3
                  |L152.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP

