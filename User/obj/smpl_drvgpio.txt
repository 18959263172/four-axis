; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\smpl_drvgpio.o --depend=.\obj\smpl_drvgpio.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0 -I..\CMSIS\NUC1xx -I..\BSP_Lib\Inc\Driver -I..\BSP_Lib\Inc\NUC1xx-LB_002 -I..\BSP_Lib\Inc\System -I..\BSP_Lib\Inc\USB -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\?ST\STM32F10x -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\smpl_drvgpio.crf Smpl_DrvGPIO.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;11     
;;;12     int main (void)
000000  b50e              PUSH     {r1-r3,lr}
;;;13     {
;;;14     	unsigned int temp=0;
000002  2500              MOVS     r5,#0
;;;15     	unsigned char temp_H=0;
000004  2600              MOVS     r6,#0
;;;16     	unsigned char temp_L=0;
000006  2700              MOVS     r7,#0
;;;17     	unsigned char i=0;
000008  2400              MOVS     r4,#0
;;;18     
;;;19     	UNLOCKREG();														 //  芯片注册解锁
00000a  2059              MOVS     r0,#0x59
00000c  4938              LDR      r1,|L1.240|
00000e  6008              STR      r0,[r1,#0]
000010  2016              MOVS     r0,#0x16
000012  6008              STR      r0,[r1,#0]
000014  2088              MOVS     r0,#0x88
000016  6008              STR      r0,[r1,#0]
;;;20         SYSCLK->PWRCON.XTL12M_EN = 1;										 //  设定12M外部晶振
000018  4836              LDR      r0,|L1.244|
00001a  6800              LDR      r0,[r0,#0]
00001c  0840              LSRS     r0,r0,#1
00001e  0040              LSLS     r0,r0,#1
000020  1c40              ADDS     r0,r0,#1
000022  4934              LDR      r1,|L1.244|
000024  6008              STR      r0,[r1,#0]
;;;21     
;;;22         DrvSYS_Delay(5000);													 //  等待时钟就绪
000026  4834              LDR      r0,|L1.248|
000028  f7fffffe          BL       DrvSYS_Delay
;;;23     	LOCKREG();															 //向“0x5000_0100”写入任何值，就可以重锁保护寄存器 
00002c  2000              MOVS     r0,#0
00002e  4930              LDR      r1,|L1.240|
000030  6008              STR      r0,[r1,#0]
;;;24     
;;;25     //---------------------------------------------------------				 //  串口初始化
;;;26     
;;;27     	{
;;;28     			STR_UART_T param;
;;;29     				
;;;30     			DrvSYS_SelectIPClockSource(E_SYS_UART_CLKSRC, 0);			 //	 使能UART时钟
000032  2100              MOVS     r1,#0
000034  2006              MOVS     r0,#6
000036  f7fffffe          BL       DrvSYS_SelectIPClockSource
;;;31     			DrvGPIO_InitFunction(E_FUNC_UART0);							 //	 复用功能引脚设置
00003a  201a              MOVS     r0,#0x1a
00003c  f7fffffe          BL       DrvGPIO_InitFunction
;;;32     			
;;;33     		    param.u32BaudRate        = 115200;							 //	 波特率
000040  20e1              MOVS     r0,#0xe1
000042  0240              LSLS     r0,r0,#9
000044  9000              STR      r0,[sp,#0]
;;;34     		    param.u8cDataBits        = DRVUART_DATABITS_8;				 //	 数据位
000046  2103              MOVS     r1,#3
000048  4668              MOV      r0,sp
00004a  7101              STRB     r1,[r0,#4]
;;;35     		    param.u8cStopBits        = DRVUART_STOPBITS_1;				 //	 停止位
00004c  2100              MOVS     r1,#0
00004e  7141              STRB     r1,[r0,#5]
;;;36     		    param.u8cParity          = DRVUART_PARITY_NONE;				 //	 校验位
000050  7181              STRB     r1,[r0,#6]
;;;37     		    param.u8cRxTriggerLevel  = DRVUART_FIFO_1BYTES;				 //	 FIFO存储深度 1 字节
000052  71c1              STRB     r1,[r0,#7]
;;;38     		    param.u8TimeOut        	 = 0;								 //	 FIFO超时设定
000054  7201              STRB     r1,[r0,#8]
;;;39     		    DrvUART_Open(UART_PORT0, &param);							 //	 串口开启、结构体整体赋值
000056  4669              MOV      r1,sp
000058  2000              MOVS     r0,#0
00005a  f7fffffe          BL       DrvUART_Open
;;;40     	
;;;41     	}
;;;42     
;;;43     //---------------------------------------------------------
;;;44        
;;;45     	printf("\n\n");														 //  具体参看第一讲实验内容
00005e  a027              ADR      r0,|L1.252|
000060  f7fffffe          BL       __2printf
;;;46         printf("================================================\n");
000064  a026              ADR      r0,|L1.256|
000066  f7fffffe          BL       __2printf
;;;47         printf("        菜农新唐M0助学板范例                    \n");
00006a  a032              ADR      r0,|L1.308|
00006c  f7fffffe          BL       __2printf
;;;48         printf("        实验四：  18B20      实验               \n");
000070  a03d              ADR      r0,|L1.360|
000072  f7fffffe          BL       __2printf
;;;49         printf("        烈火狂龙  论坛ID: plc_avr               \n");
000076  a049              ADR      r0,|L1.412|
000078  f7fffffe          BL       __2printf
;;;50         printf("================================================\n");
00007c  a020              ADR      r0,|L1.256|
00007e  f7fffffe          BL       __2printf
;;;51     	printf("\n\n");
000082  a01e              ADR      r0,|L1.252|
000084  f7fffffe          BL       __2printf
;;;52     
;;;53         printf("     DS18B20 读取ID及温度试验\n");
000088  a051              ADR      r0,|L1.464|
00008a  f7fffffe          BL       __2printf
;;;54     	printf("\n\n");
00008e  a01b              ADR      r0,|L1.252|
000090  f7fffffe          BL       __2printf
;;;55     
;;;56     
;;;57     	while(1)
000094  e02b              B        |L1.238|
                  |L1.150|
;;;58     		{
;;;59     
;;;60     			get_rom(DS18B20_ID);
000096  4856              LDR      r0,|L1.496|
000098  f7fffffe          BL       get_rom
;;;61     			printf("本机DS18B20 的64位ID ---> ");
00009c  a055              ADR      r0,|L1.500|
00009e  f7fffffe          BL       __2printf
;;;62     			for(i=0;i<8;i++)
0000a2  2400              MOVS     r4,#0
0000a4  e006              B        |L1.180|
                  |L1.166|
;;;63     			   printf(" 0x%x ",DS18B20_ID[i]);
0000a6  4852              LDR      r0,|L1.496|
0000a8  5d01              LDRB     r1,[r0,r4]
0000aa  a059              ADR      r0,|L1.528|
0000ac  f7fffffe          BL       __2printf
0000b0  1c60              ADDS     r0,r4,#1              ;62
0000b2  b2c4              UXTB     r4,r0                 ;62
                  |L1.180|
0000b4  2c08              CMP      r4,#8                 ;62
0000b6  dbf6              BLT      |L1.166|
;;;64     
;;;65     			printf("      当前温度：");
0000b8  a057              ADR      r0,|L1.536|
0000ba  f7fffffe          BL       __2printf
;;;66     			temp  = readTempDS18B20();
0000be  f7fffffe          BL       readTempDS18B20
0000c2  4605              MOV      r5,r0
;;;67     			temp_H  =	temp/100;
0000c4  2164              MOVS     r1,#0x64
0000c6  4628              MOV      r0,r5
0000c8  f7fffffe          BL       __aeabi_uidivmod
0000cc  b2c6              UXTB     r6,r0
;;;68     			temp_L  =   temp%100;
0000ce  2164              MOVS     r1,#0x64
0000d0  4628              MOV      r0,r5
0000d2  f7fffffe          BL       __aeabi_uidivmod
0000d6  b2cf              UXTB     r7,r1
;;;69                 printf("%d",temp_H);
0000d8  4631              MOV      r1,r6
0000da  a054              ADR      r0,|L1.556|
0000dc  f7fffffe          BL       __2printf
;;;70     			printf(".%d 度\n",temp_L);
0000e0  4639              MOV      r1,r7
0000e2  a053              ADR      r0,|L1.560|
0000e4  f7fffffe          BL       __2printf
;;;71     
;;;72     			DrvSYS_Delay(1500000);
0000e8  4853              LDR      r0,|L1.568|
0000ea  f7fffffe          BL       DrvSYS_Delay
                  |L1.238|
0000ee  e7d2              B        |L1.150|
;;;73     
;;;74     		}
;;;75     }
                          ENDP

                  |L1.240|
                          DCD      0x50000100
                  |L1.244|
                          DCD      0x50000200
                  |L1.248|
                          DCD      0x00001388
                  |L1.252|
0000fc  0a0a00            DCB      "\n\n",0
0000ff  00                DCB      0
                  |L1.256|
000100  3d3d3d3d          DCB      "================================================\n",0
000104  3d3d3d3d
000108  3d3d3d3d
00010c  3d3d3d3d
000110  3d3d3d3d
000114  3d3d3d3d
000118  3d3d3d3d
00011c  3d3d3d3d
000120  3d3d3d3d
000124  3d3d3d3d
000128  3d3d3d3d
00012c  3d3d3d3d
000130  0a00    
000132  00                DCB      0
000133  00                DCB      0
                  |L1.308|
000134  20202020          DCB      "        ",178,203,197,169,208,194,204,198,"M0",214,250,209
000138  20202020
00013c  b2cbc5a9
000140  d0c2ccc6
000144  4d30d6fa
000148  d1      
000149  a7b0e5b7          DCB      167,176,229,183,182,192,253,"                    \n",0
00014d  b6c0fd20
000151  20202020
000155  20202020
000159  20202020
00015d  20202020
000161  2020200a
000165  00      
000166  00                DCB      0
000167  00                DCB      0
                  |L1.360|
000168  20202020          DCB      "        ",202,181,209,233,203,196,163,186,"  18B20     "
00016c  20202020
000170  cab5d1e9
000174  cbc4a3ba
000178  20203138
00017c  42323020
000180  20202020
000184  20cab5d1          DCB      " ",202,181,209,233,"               \n",0
000188  e9202020
00018c  20202020
000190  20202020
000194  20202020
000198  0a00    
00019a  00                DCB      0
00019b  00                DCB      0
                  |L1.412|
00019c  20202020          DCB      "        ",193,210,187,240,191,241,193,250,"  ",194,219,204
0001a0  20202020
0001a4  c1d2bbf0
0001a8  bff1c1fa
0001ac  2020c2db
0001b0  cc      
0001b1  b349443a          DCB      179,"ID: plc_avr               \n",0
0001b5  20706c63
0001b9  5f617672
0001bd  20202020
0001c1  20202020
0001c5  20202020
0001c9  2020200a
0001cd  00      
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L1.464|
0001d0  20202020          DCB      "     DS18B20 ",182,193,200,161,"ID",188,176,206,194,182
0001d4  20445331
0001d8  38423230
0001dc  20b6c1c8
0001e0  a14944bc
0001e4  b0cec2b6
0001e8  c8cad4d1          DCB      200,202,212,209,233,"\n",0
0001ec  e90a00  
0001ef  00                DCB      0
                  |L1.496|
                          DCD      DS18B20_ID
                  |L1.500|
0001f4  b1bebbfa          DCB      177,190,187,250,"DS18B20 ",181,196,"64",206,187,"ID --->"
0001f8  44533138
0001fc  42323020
000200  b5c43634
000204  cebb4944
000208  202d2d2d
00020c  3e      
00020d  2000              DCB      " ",0
00020f  00                DCB      0
                  |L1.528|
000210  20307825          DCB      " 0x%x ",0
000214  782000  
000217  00                DCB      0
                  |L1.536|
000218  20202020          DCB      "      ",181,177,199,176,206,194,182,200,163,186,0
00021c  2020b5b1
000220  c7b0cec2
000224  b6c8a3ba
000228  00      
000229  00                DCB      0
00022a  00                DCB      0
00022b  00                DCB      0
                  |L1.556|
00022c  256400            DCB      "%d",0
00022f  00                DCB      0
                  |L1.560|
000230  2e256420          DCB      ".%d ",182,200,"\n",0
000234  b6c80a00
                  |L1.568|
                          DCD      0x0016e360

                          AREA ||.data||, DATA, ALIGN=0

                  DS18B20_ID
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  NOW_TEMP
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  0000              DCB      0x00,0x00

                  __ARM_use_no_argv EQU 0
